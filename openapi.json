{
  "openapi": "3.0.1",
  "info": {
    "title": "MPO-API",
    "description": "MPO API.",
    "version": "v1"
  },
  "paths": {
    "/api/HttpClientTest/http-factory-call-api": {
      "get": {
        "tags": [
          "HttpClientTest"
        ],
        "summary": "Calls a third party API using HttpClientFactory and returns the result.",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": " (Auth)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/beneficiaries": {
      "put": {
        "tags": [
          "Beneficiary"
        ],
        "summary": "Updates a beneficiary asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The UpdateBeneficiary object containing the updated beneficiary information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBeneficiary"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBeneficiary"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBeneficiary"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Beneficiary"
        ],
        "summary": "Endpoint for creating a beneficiary asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a beneficiary.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBeneficiary"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBeneficiary"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBeneficiary"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/beneficiaries/{id}": {
      "get": {
        "tags": [
          "Beneficiary"
        ],
        "summary": "Retrieves beneficiary information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the beneficiary.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewEnrollment"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Beneficiary"
        ],
        "summary": "Deletes a beneficiary asynchronously by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the beneficiary to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/beneficiaries/beneficiaryreport": {
      "get": {
        "tags": [
          "Beneficiary"
        ],
        "summary": "Retrieves a beneficiary report asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets or initializes the EmployeeId as a nullable Guid with a default value of Guid.Empty.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets the job status as a nullable boolean (bit).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "relationship",
            "in": "query",
            "description": "Gets or initializes the relationship ID as a nullable integer.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Gets the state as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Gets the search string with a maximum length defined by DataConstants.LengthGeneralInput.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/beneficiaries/list": {
      "post": {
        "tags": [
          "Beneficiary"
        ],
        "summary": "Retrieves a paged list of beneficiaries based on the provided filter criteria.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for retrieving beneficiaries.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-classes": {
      "put": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Updates a company employee tier asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the company employee tier.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateCompanyBenefitClass"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateCompanyBenefitClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateCompanyBenefitClass"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditClientBenefitClasses"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Endpoint for creating a new company employee tier asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the company employee tier.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateCompanyBenefitClass"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateCompanyBenefitClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateCompanyBenefitClass"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddClientBenefitClasses"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-classes/{id}": {
      "get": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Retrieves company employee tier information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the company employee tier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyBenefitClassInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyBenefitClassInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyBenefitClassInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditClientBenefitClasses"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Deletes a company employee tier by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the company employee tier to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-classes/benefit-classes": {
      "get": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Retrieves benefitClasses information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ClientBenefitClassesListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-classes/class-numbers": {
      "get": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Retrieves company class numbers information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ClientBenefitClassesListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-classes/company-classnumber/{companyId}": {
      "get": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Retrieves companies information asynchronously.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyClassNumberInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyClassNumberInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyClassNumberInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddClientBenefitClasses"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-classes/filtered-options": {
      "get": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Retrieves filtered options based on the provided CompanyBenefitClassFilter.",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "gets or sets Company Id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-classes/list": {
      "post": {
        "tags": [
          "CompanyBenefitClasses"
        ],
        "summary": "Retrieves a paged list of CompanyBenefitClassListItem based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for retrieving CompanyBenefitClassListItem.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyBenefitClassFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyBenefitClassFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyBenefitClassFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_CompanyBenefitClassListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_CompanyBenefitClassListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_CompanyBenefitClassListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ClientBenefitClassesListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-clones": {
      "get": {
        "tags": [
          "BenefitClone"
        ],
        "summary": "Retrieves a paged list of BenefitCloneListItem objects based on the provided filter criteria.",
        "parameters": [
          {
            "name": "targetOrganizationId",
            "in": "query",
            "description": "Gets or sets the target organization ID as a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sourceOrganizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier of the source organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCloneListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCloneListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCloneListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitClone"
        ],
        "summary": "Endpoint for creating a benefit clone asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit clone.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_CreateBenefitClone"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_CreateBenefitClone"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_CreateBenefitClone"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-coverages": {
      "put": {
        "tags": [
          "BenefitCoverage"
        ],
        "summary": "Updates the benefit coverage asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit coverage.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitCoverage"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitCoverage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitCoverage"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditCoverageTiers"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitCoverage"
        ],
        "summary": "Endpoint for creating a new benefit coverage asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit coverage.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitCoverage"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitCoverage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitCoverage"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddCoverageTiers"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-coverages/{id}": {
      "get": {
        "tags": [
          "BenefitCoverage"
        ],
        "summary": "Retrieves benefit coverage information by ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit coverage to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCoverageInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCoverageInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCoverageInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BenefitCoverage"
        ],
        "summary": "Deletes a resource with the specified ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-coverages/list": {
      "post": {
        "tags": [
          "BenefitCoverage"
        ],
        "summary": "Retrieves a paged list of BenefitCoverageListItem based on the provided filter criteria.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitCoverageFilter object containing filter criteria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCoverageFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCoverageFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCoverageFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CoverageTiersListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-coverages/options": {
      "get": {
        "tags": [
          "BenefitCoverage"
        ],
        "summary": "Retrieves a list of option items asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-duration-template-history": {
      "get": {
        "tags": [
          "BenefitDurationTemplateHistory"
        ],
        "summary": "Retrieves a paged list of Benefit Duration Template History items based on the provided filter.",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId property which is required and can only be initialized during object creation.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets the organization ID that is required for the object.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitDurationTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitDurationTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitDurationTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-eligibility-template-history": {
      "get": {
        "tags": [
          "BenefitEligibilityTemplateHistory"
        ],
        "summary": "Retrieves a paged list of Benefit Eligibility Template History items based on the provided filter.",
        "parameters": [
          {
            "name": "eligibilityRuleId",
            "in": "query",
            "description": "Gets or sets the eligibility rule ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Gets or sets the provided value for the Action and property is of the ChangeTypes enum type.",
            "schema": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Gets or sets the starting date and time (nullable) for a specific range.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Gets or sets the end date and time represented as a nullable DateTime.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-eligibility-templates": {
      "get": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Retrieves a paged list of BenefitEligibilityTemplateListItem based on the provided filter.",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId as a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets the organization ID that is required for the object.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isOrganizational",
            "in": "query",
            "description": "Gets a value indicating whether gets or sets a boolean value indicating if the entity is organizational.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Updates a benefit eligibility template asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit eligibility template.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEligibilityTemplate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEligibilityTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEligibilityTemplate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Endpoint for creating a new benefit eligibility template asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit eligibility template.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitEligibilityTemplate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitEligibilityTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitEligibilityTemplate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-eligibility-templates/{id}": {
      "get": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Retrieves benefit eligibility template information asynchronously by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit eligibility template to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilityTemplateInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilityTemplateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilityTemplateInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Deletes a benefit eligibility template by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit eligibility template to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-eligibility-templates/options": {
      "get": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Retrieves a list of options asynchronously for benefit eligibility template.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-eligibility-templates/options/filtered": {
      "get": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Retrieves a list of filtered options based on the provided BenefitEligibilityTemplateFilter.",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId as a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets the organization ID that is required for the object.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isOrganizational",
            "in": "query",
            "description": "Gets a value indicating whether gets or sets a boolean value indicating if the entity is organizational.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-eligibility-templates/update-eligibility-setup": {
      "put": {
        "tags": [
          "BenefitEligibilityTemplates"
        ],
        "summary": "Updates the eligibility setup for benefits.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input containing the updated benefit eligibility setup information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEligibilitySetup"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEligibilitySetup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEligibilitySetup"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-flex-credits": {
      "get": {
        "tags": [
          "BenefitFlexCredit"
        ],
        "summary": "Retrieves a paged list of BenefitFlexCreditListItem based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Gets or sets the year value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFlexCreditListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFlexCreditListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFlexCreditListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BenefitFlexCredit"
        ],
        "summary": "Updates a BenefitFlexCredit entity asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the BenefitFlexCredit entity.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitFlexCredit"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitFlexCredit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitFlexCredit"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitFlexCredit"
        ],
        "summary": "Endpoint for creating a new BenefitFlexCredit asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the BenefitFlexCredit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCredit"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCredit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCredit"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-flex-credits/{id}": {
      "get": {
        "tags": [
          "BenefitFlexCredit"
        ],
        "summary": "Retrieves benefit flex credit information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit flex credit.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitFlexCredit"
        ],
        "summary": "Deletes a resource asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-flex-credits/options": {
      "get": {
        "tags": [
          "BenefitFlexCredit"
        ],
        "summary": "Retrieves a list of options asynchronously for benefit flex credit.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-forms": {
      "put": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "Updates a benefit form asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The UpdateBenefitForm object containing the updated benefit information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitForm"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitForm"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditForms"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "Endpoint for creating a new benefit form asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a new benefit form.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitForm"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitForm"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddForms"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-forms/{id}": {
      "get": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "Retrieves benefit form information asynchronously by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit form to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditForms"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "Deletes a resource asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the resource to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-forms/download/{id}": {
      "get": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "returns the Benefit form in Base64 format.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "form Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormDownloadModel"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormDownloadModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormDownloadModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "DownloadForms"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-forms/filtered-options": {
      "get": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "Retrieves bill codes for Benefit forms.",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "FormLibraryListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-forms/list": {
      "post": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "Retrieves a paged list of BenefitFormListItem objects based on the provided BenefitFormFilter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitFormFilter object used to filter the list of BenefitFormListItem objects.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFormListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFormListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFormListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "FormLibraryListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-forms/options": {
      "get": {
        "tags": [
          "BenefitForm"
        ],
        "summary": "Retrieves a list of options asynchronously for a specific organization.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "The unique identifier of the organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-payroll-schedule": {
      "put": {
        "tags": [
          "PayrollSchedule"
        ],
        "summary": "Updates a payroll schedule asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the payroll schedule.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdatePayrollSchedule"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdatePayrollSchedule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdatePayrollSchedule"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-payroll-schedule/{id}": {
      "get": {
        "tags": [
          "PayrollSchedule"
        ],
        "summary": "Retrieves a specific benefit plan information asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit plan to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-ageband-rate": {
      "get": {
        "tags": [
          "BenefitPlanAgeBandRate"
        ],
        "summary": "Retrieves a paged list of BenefitPlanAgeBandRateListItem based on the provided filter.",
        "parameters": [
          {
            "name": "benefitPlanId",
            "in": "query",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BenefitPlanAgeBandRate"
        ],
        "summary": "Updates a benefit plan age band rate asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan age band rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanAgeBandRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanAgeBandRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanAgeBandRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanAgeBandRate"
        ],
        "summary": "Endpoint for creating a new Benefit Plan Age Band Rate asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the Benefit Plan Age Band Rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanAgeBandRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanAgeBandRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanAgeBandRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-ageband-rate/{id}": {
      "get": {
        "tags": [
          "BenefitPlanAgeBandRate"
        ],
        "summary": "Retrieves a BenefitPlanAgeBandRateInfo object asynchronously based on the provided id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the BenefitPlanAgeBandRateInfo object to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanAgeBandRate"
        ],
        "summary": "Deletes a record asynchronously based on the provided id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the record to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-ageband-rate/batch-update": {
      "post": {
        "tags": [
          "BenefitPlanAgeBandRate"
        ],
        "summary": "Endpoint for batch updating benefit plan age band rates.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model for batch updating benefit plan age band rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanAgeBandRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanAgeBandRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanAgeBandRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-ageband-rate/options": {
      "get": {
        "tags": [
          "BenefitPlanAgeBandRate"
        ],
        "summary": "Retrieves a list of options asynchronously for benefit plan age band rate options.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-cafeteria-rates": {
      "put": {
        "tags": [
          "BenefitPlanCafeteriaRate"
        ],
        "summary": "Updates the benefit plan cafeteria rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating benefit plan cafeteria rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCafeteriaRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCafeteriaRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCafeteriaRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanCafeteriaRate"
        ],
        "summary": "Endpoint for creating a new Benefit Plan Cafeteria Rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating Benefit Plan Cafeteria Rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCafeteriaRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCafeteriaRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCafeteriaRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-cafeteria-rates/{id}": {
      "get": {
        "tags": [
          "BenefitPlanCafeteriaRate"
        ],
        "summary": "Retrieves a specific BenefitPlanCafeteriaRateInfo asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the BenefitPlanCafeteriaRateInfo to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaRateInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaRateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaRateInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-cafeteria-rates/cafeteria-calculator/{id}": {
      "delete": {
        "tags": [
          "BenefitPlanCafeteriaRate"
        ],
        "summary": "Deletes a cafeteria plan calculator by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cafeteria plan calculator to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-cafeteria-rates/cafeteria-rate-detail/{id}": {
      "delete": {
        "tags": [
          "BenefitPlanCafeteriaRate"
        ],
        "summary": "Deletes a cafeteria rate detail by its ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cafeteria rate detail to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates": {
      "put": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Updates a benefit plan comparison template asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan comparison template.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanComparisonTemplate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanComparisonTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanComparisonTemplate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditPlanDetailComparision"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Endpoint for creating a benefit plan comparison template asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan comparison template.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonTemplate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonTemplate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddPlanDetailComparision"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/{id}": {
      "get": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Retrieves a benefit plan comparison template asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit plan comparison template to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewPlanDetailComparision"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Deletes a resource by its unique identifier asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the resource to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/comparison-plan-options": {
      "get": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Retrieves a list of comparison plan options asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewPlanDetailComparision"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/ComparisonSummary": {
      "post": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Endpoint for creating a benefit comparison plan.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit summary plan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonPlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonPlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/create-comparison-summary": {
      "post": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Endpoint for creating a plan comparison.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitComparisonPlanSummaryFinshInfo object containing the summary information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonPlanFinshInfo"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonPlanFinshInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonPlanFinshInfo"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/get-plan-comparison": {
      "get": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Retrieves a benefit plan comparison template asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "benefitPlanId",
            "in": "query",
            "description": "Gets the Benefit Plan Id which is required and can be initialized but not modified after initialization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitPlanComparisonTemplateId",
            "in": "query",
            "description": "Gets the required Benefit Plan Comparison Template Id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewPlanDetailComparision"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/get-summary-id/{id}": {
      "get": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Retrieves benefit plan summary information by ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit plan summary to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanSummaryIdInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanSummaryIdInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanSummaryIdInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/list": {
      "post": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Retrieves a paged list of BenefitPlanComparisonTemplateListItem based on the provided filter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for retrieving the list of BenefitPlanComparisonTemplateListItem.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanDetailComparisionListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/options": {
      "get": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Retrieves a list of options asynchronously for benefit plan details comparison template.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/options/filtered": {
      "get": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Retrieves a list of filtered options for benefit plan deatils comparison template asynchronously.",
        "parameters": [
          {
            "name": "benefitPlanGroupId",
            "in": "query",
            "description": "Gets the Benefit Plan Group Id which is unique identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Gets and sets the nullable boolean value to IsActive property with default TRUE boolean value.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewPlanDetailComparision"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/submit": {
      "post": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Endpoint for creating and updating a plan comparison.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The SubmitBenefitPlanComparisonSummary object containing the summary information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitBenefitPlanComparisonSummary"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitBenefitPlanComparisonSummary"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitBenefitPlanComparisonSummary"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-comparison-templates/update-comparison-summary": {
      "put": {
        "tags": [
          "BenefitPlanComparisonTemplate"
        ],
        "summary": "Updates the comparison for benefit comparison plan.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitPlanComparisonPlanFinshInfo object containing the updated information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonPlanFinshInfo"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonPlanFinshInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonPlanFinshInfo"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-compatibilities": {
      "get": {
        "tags": [
          "BenefitPlanCompatibility"
        ],
        "summary": "Retrieves a list of benefit plan compatibility items asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets or sets the unique identifier for a company.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitPlanId",
            "in": "query",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCompatibilityListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCompatibilityListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCompatibilityListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-coverages": {
      "get": {
        "tags": [
          "BenefitPlanCoverage"
        ],
        "summary": "Retrieves a paged list of BenefitPlanCoverageListItem based on the provided filter criteria.",
        "parameters": [
          {
            "name": "benefitPlanId",
            "in": "query",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BenefitPlanCoverage"
        ],
        "summary": "Updates a benefit plan coverage asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan coverage.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverage"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverage"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "BenefitPlanCoverage"
        ],
        "summary": "Endpoint for creating a new Benefit Plan Coverage asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the Benefit Plan Coverage.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCoverage"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCoverage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCoverage"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-coverages/{id}": {
      "get": {
        "tags": [
          "BenefitPlanCoverage"
        ],
        "summary": "Retrieves benefit plan coverage information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit plan coverage to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BenefitPlanCoverage"
        ],
        "summary": "Deletes a resource with the specified ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-coverages/options": {
      "get": {
        "tags": [
          "BenefitPlanCoverage"
        ],
        "summary": "Retrieves a list of option items asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-coverages/swaporder": {
      "put": {
        "tags": [
          "BenefitPlanCoverage"
        ],
        "summary": "Endpoint for swapping the order of benefit plan coverage items.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input object containing the details for swapping the order of benefit plan coverage items.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageSwapOrder"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageSwapOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageSwapOrder"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-custom-group": {
      "post": {
        "tags": [
          "BenefitPlanCustomGroup"
        ],
        "summary": "Endpoint for creating a new Benefit Plan Custom Group asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the Benefit Plan Custom Group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCustomGroup"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCustomGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCustomGroup"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-custom-group/options": {
      "get": {
        "tags": [
          "BenefitPlanCustomGroup"
        ],
        "summary": "Retrieves a list of options asynchronously for benefit plan custom group options.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-eligibility": {
      "post": {
        "tags": [
          "BenefitPlanEligibility"
        ],
        "summary": "Creates the Benefit Plan Eligibility asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model containing the information needed to create the Benefit Plan Eligibility.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanEligibility"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanEligibility"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanEligibility"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BenefitPlanEligibility"
        ],
        "summary": "Updates  the Benefit Plan Eligibility asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model containing the information needed to update the Benefit Plan Eligibility.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanEligibility"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanEligibility"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanEligibility"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-eligibility/{id}": {
      "get": {
        "tags": [
          "BenefitPlanEligibility"
        ],
        "summary": "Retrieves a specific benefit plan eligibility asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit plan to retrieve Benefit Plan Eligibility.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanEligibilityInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanEligibilityInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanEligibilityInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-flat-rate": {
      "get": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Retrieves a paged list of BenefitPlanFlatRateListItem based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "benefitPlanId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ageBand",
            "in": "query",
            "schema": {
              "maxLength": 5,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "tierNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanFlatRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanFlatRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanFlatRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Updates a benefit plan flat rate asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan flat rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanFlatRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanFlatRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanFlatRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Endpoint for creating a new benefit plan flat rate asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan flat rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanFlatRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanFlatRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanFlatRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-flat-rate/{id}": {
      "get": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Retrieves a BenefitPlanFlatRateInfo object asynchronously based on the provided id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the BenefitPlanFlatRateInfo object to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFlatRateInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFlatRateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFlatRateInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Deletes a record asynchronously based on the provided id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the record to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-flat-rate/batch-update": {
      "post": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Endpoint for batch updating benefit plan flat rates.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The batch update request containing the data to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanFlatRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanFlatRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanFlatRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-flat-rate/filtered-options": {
      "get": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Retrieves a list of filtered options based on the provided BenefitPlanFlatRateOptionsFilter.",
        "parameters": [
          {
            "name": "benefitPlanId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewClientPlanOffering"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-flat-rate/options": {
      "get": {
        "tags": [
          "BenefitPlanFlatRate"
        ],
        "summary": "Retrieves a list of options asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-group-life-rates": {
      "put": {
        "tags": [
          "BenefitPlanGroupLifeRates"
        ],
        "summary": "Updates the benefit plan group life rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan group life rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanGroupLifeRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanGroupLifeRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanGroupLifeRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "BenefitPlanGroupLifeRates"
        ],
        "summary": "Endpoint for creating a new Benefit Plan Group Life Rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating Benefit Plan Group Life Rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanGroupLifeRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanGroupLifeRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanGroupLifeRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-group-life-rates/{id}": {
      "get": {
        "tags": [
          "BenefitPlanGroupLifeRates"
        ],
        "summary": "Retrieves benefit group life rates information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit group life rates to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitGroupLifeRatesInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitGroupLifeRatesInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitGroupLifeRatesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-group-life-rates/delete-rate-detail/{id}": {
      "delete": {
        "tags": [
          "BenefitPlanGroupLifeRates"
        ],
        "summary": "Deletes a rate detail by its ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the rate detail to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-group-life-rates/delete-reduction/{id}": {
      "delete": {
        "tags": [
          "BenefitPlanGroupLifeRates"
        ],
        "summary": "Deletes a reduction schedule for a group life rate in a benefit plan asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the reduction schedule to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-histories": {
      "get": {
        "tags": [
          "BenefitPlanHistory"
        ],
        "summary": "Retrieves a paged list of Benefit Plan History items based on the provided filter criteria.",
        "parameters": [
          {
            "name": "benefitPlanId",
            "in": "query",
            "description": "Gets or initializes the nullable integer value representing the Benefit Plan Id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stepNumber",
            "in": "query",
            "description": "Gets the step number as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changeType",
            "in": "query",
            "description": "Gets the ChangeType property, which represents the type of change.",
            "schema": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
            }
          },
          {
            "name": "columnName",
            "in": "query",
            "description": "Gets the column name, which is nullable.",
            "schema": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_ColumnNames"
            }
          },
          {
            "name": "uLoginHistoryId",
            "in": "query",
            "description": "Gets the unique identifier for the user login history.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BenefitPlanHistory"
        ],
        "summary": "Updates a benefit plan history asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan history.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanHistory"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanHistory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanHistory"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanHistory"
        ],
        "summary": "Endpoint for creating a new benefit plan history asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan history.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanHistory"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanHistory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanHistory"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-histories/{id}": {
      "get": {
        "tags": [
          "BenefitPlanHistory"
        ],
        "summary": "Retrieves benefit plan history information asynchronously by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit plan history to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanHistoryInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanHistoryInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanHistoryInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanHistory"
        ],
        "summary": "Deletes a benefit plan history record by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit plan history record to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-histories/options": {
      "get": {
        "tags": [
          "BenefitPlanHistory"
        ],
        "summary": "Retrieves a list of options asynchronously for benefit plan history.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-ltd-rates": {
      "put": {
        "tags": [
          "BenefitPlanLtdRates"
        ],
        "summary": "Updates the benefit plan LTD rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan LTD rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanLtdRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanLtdRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanLtdRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditBenefitPlans"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanLtdRates"
        ],
        "summary": "Endpoint for creating a new Benefit Plan Ltd Rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating Benefit Plan Ltd Rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanLtdRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanLtdRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanLtdRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-ltd-rates/{id}": {
      "get": {
        "tags": [
          "BenefitPlanLtdRates"
        ],
        "summary": "Retrieves BenefitPlanLtdRatesInfo asynchronously based on the provided id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the BenefitPlanLtdRatesInfo to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanLtdRatesInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanLtdRatesInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanLtdRatesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanLtdRates"
        ],
        "summary": "Deletes a rate detail by its ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the rate detail to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-overrides": {
      "get": {
        "tags": [
          "BenefitPlanOverride"
        ],
        "summary": "Retrieves a benefit plan override asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets the organization ID that is required for the object.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId property which is required and can only be initialized during object creation.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitPlanId",
            "in": "query",
            "description": "Gets the Benefit Plan Id which is required and can be initialized.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOverrideDto"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOverrideDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOverrideDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanOverride"
        ],
        "summary": "Endpoint for creating a benefit plan override asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitPlanOverrideDto object containing the data for the benefit plan override.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOverrideDto"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOverrideDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOverrideDto"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-retirement-rates": {
      "put": {
        "tags": [
          "BenefitPlanRetirementRates"
        ],
        "summary": "Updates the benefit retirement plan rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating benefit retirement plan rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitRetirementPlanRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitRetirementPlanRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitRetirementPlanRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanRetirementRates"
        ],
        "summary": "Endpoint for creating a new benefit retirement plan rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit retirement plan rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitRetirementPlanRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitRetirementPlanRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitRetirementPlanRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-retirement-rates/{id}": {
      "get": {
        "tags": [
          "BenefitPlanRetirementRates"
        ],
        "summary": "Retrieves the BenefitRetirementPlanRatesInfo for a specific ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the BenefitRetirementPlanRatesInfo to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitRetirementPlanRatesInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitRetirementPlanRatesInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitRetirementPlanRatesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanRetirementRates"
        ],
        "summary": "Deletes a rate detail asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the rate detail to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-std-rates": {
      "put": {
        "tags": [
          "BenefitPlanStdRates"
        ],
        "summary": "Updates a benefit plan standard rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan standard rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanStdRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanStdRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanStdRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditBenefitPlans"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanStdRates"
        ],
        "summary": "Endpoint for creating a new benefit plan standard rate asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan standard rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanStdRates"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanStdRates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanStdRates"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-std-rates/{id}": {
      "get": {
        "tags": [
          "BenefitPlanStdRates"
        ],
        "summary": "Retrieves benefit plan standard rates information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit plan standard rates.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanStdRatesInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanStdRatesInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanStdRatesInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanStdRates"
        ],
        "summary": "Deletes a rate detail by its ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the rate detail to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-type-orders": {
      "get": {
        "tags": [
          "BenefitPlanTypeOrder"
        ],
        "summary": "Retrieves a list of BenefitPlanGroupOrderItem asynchronously based on the provided BenefitPlanGroupOrderFilter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeOrderItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeOrderItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeOrderItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanDisplayOrderListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-type-orders/re-order": {
      "put": {
        "tags": [
          "BenefitPlanTypeOrder"
        ],
        "summary": "Updates the benefit plan group order asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model containing the updated benefit plan group order information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanTypeOrder"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanTypeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanTypeOrder"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "SortPlanDisplayListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-types": {
      "put": {
        "tags": [
          "BenefitPlanType"
        ],
        "summary": "Updates a benefit plan type asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanType"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanType"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditPlanName"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitPlanType"
        ],
        "summary": "Endpoint for creating a new benefit plan type.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanType"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanType"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddPlanName"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-types/{id}": {
      "get": {
        "tags": [
          "BenefitPlanType"
        ],
        "summary": "Retrieves information about a benefit plan type asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit plan type to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanTypeListPage"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlanType"
        ],
        "summary": "Deletes a resource based on the provided id after authorization checks.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the resource to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plan-types/filtered-options": {
      "get": {
        "tags": [
          "BenefitPlanType"
        ],
        "summary": "Retrieves a list of filtered options based on the provided BenefitPlanTypeFilter.\r\nRequires authorization with specific roles and policies.",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "planTypeIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanTypeListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-types/list": {
      "post": {
        "tags": [
          "BenefitPlanType"
        ],
        "summary": "Retrieves a paged list of BenefitPlanTypeListItem objects based on the provided filter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitPlanTypeFilter object used to filter the results.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanTypeListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanTypeListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanTypeListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanTypeListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plan-types/options": {
      "get": {
        "tags": [
          "BenefitPlanType"
        ],
        "summary": "Retrieves a list of options asynchronously based on the user's authorization roles and policies.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanTypeListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans": {
      "put": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Updates a benefit plan asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit plan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plans/{id}": {
      "get": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves a specific benefit plan asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit plan to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Deletes a benefit plan asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit plan to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-plans/bill-codes": {
      "get": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves bill codes for Benefit plan.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/carrier-data-fields": {
      "put": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Updates the carrier data asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model containing the information needed to update the step status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateUpdateCarrierDataFields"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateUpdateCarrierDataFields"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateUpdateCarrierDataFields"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/carrier-data-fields/{id}": {
      "get": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves a specific benefit plan asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit plan to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CarrierDataFieldsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CarrierDataFieldsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CarrierDataFieldsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/filtered-options": {
      "post": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves a list of filtered options based on the provided BenefitPlanOptionsFilter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitPlanOptionsFilter object containing filter criteria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOptionsFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOptionsFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanOptionsFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/FinalSubmit/{id}": {
      "put": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Endpoint for submitting current benefit plan asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/list": {
      "post": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves a paged list of BenefitPlanListItem objects based on the provided BenefitPlanFilter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitPlanFilter object used to filter the list of BenefitPlanListItem objects.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "BenefitPlansListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/options": {
      "get": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves a list of option items asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ClientPlanOfferingListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/plan-years": {
      "get": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves a list of plan years items asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/post-tax-deduction-codes": {
      "get": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves bill codes for Post tax deduction codes.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/pre-tax-deduction-codes": {
      "get": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Retrieves bill codes for pre tax deduction codes.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/Save": {
      "post": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Endpoint for creating a new benefit plan asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveBenefitPlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveBenefitPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveBenefitPlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/Submit": {
      "post": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Endpoint for creating a new benefit plan asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitBenefitPlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitBenefitPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitBenefitPlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-plans/update-step-status": {
      "put": {
        "tags": [
          "BenefitPlan"
        ],
        "summary": "Updates the status of a step asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model containing the information needed to update the step status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateStepStatus"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateStepStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateStepStatus"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-settings": {
      "get": {
        "tags": [
          "BenefitSetting"
        ],
        "summary": "Endpoint to list benefit settings.",
        "parameters": [
          {
            "name": "planYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitSettingsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitSettingsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitSettingsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "BenefitSettingsListPage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BenefitSetting"
        ],
        "summary": "Endpoint to update a benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input object containing the updated benefit settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitSettings"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitSettings"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditBenefitSettings"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitSetting"
        ],
        "summary": "Endpoint to create a new benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitSettings"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitSettings"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitSettings"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/benefit-settings/{id}": {
      "get": {
        "tags": [
          "BenefitSetting"
        ],
        "summary": "Endpoint to get a specific benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitSettingInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitSettingInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitSettingInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitSettings"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitSetting"
        ],
        "summary": "Endpoint to delete a benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/benefit-settings/options": {
      "get": {
        "tags": [
          "BenefitSetting"
        ],
        "summary": "Endpoint to get options for benefit settings.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/client-enrollment-setups": {
      "put": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Updates a benefit client enrollment setup asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model for updating the benefit client enrollment setup.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetupTemplate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetupTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetupTemplate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditClientEnrollmentSetup"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Endpoint for creating a benefit client enrollment setup asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit client enrollment setup.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitClientEnrollmentSetup"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitClientEnrollmentSetup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitClientEnrollmentSetup"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddClientEnrollmentSetup"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-enrollment-setups/{id}": {
      "get": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Retrieves a BenefitClientEnrollmentSetupInfo asynchronously by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the BenefitClientEnrollmentSetupInfo to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewFromActionsColumn"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Deletes a benefit duration template by its ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit duration template to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "DeleteClientEnrollmentsetup"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-enrollment-setups/list": {
      "post": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Retrieves a paged list of BenefitClientEnrollmentSetupListItem based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitClientEnrollmentSetupFilter object containing filter criteria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ClientEnrollmentSetupListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-enrollment-setups/options": {
      "get": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Retrieves a list of options asynchronously for benefit duration template.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/client-enrollment-setups/options/filtered": {
      "get": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Retrieves a list of filtered options based on the provided BenefitClientEnrollmentSetupFilter.",
        "parameters": [
          {
            "name": "companyGuids",
            "in": "query",
            "description": "Gets or initializes the unique identifier of the company, which is nullable.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "planYears",
            "in": "query",
            "description": "Gets or initializes the plan year as a nullable integer.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "openEnrollmentStartDate",
            "in": "query",
            "description": "Gets or sets the open enrollment start date which is required.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "openEnrollmentEndDate",
            "in": "query",
            "description": "Gets or sets the open enrollment end date which is required.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Gets or initializes the status of the enrollment setup to Active or Inactive.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/client-enrollment-setups/plan-years": {
      "get": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Retrieves a list of plan years.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ClientEnrollmentSetupListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-enrollment-setups/update-duration-setup": {
      "put": {
        "tags": [
          "BenefitClientEnrollmentSetup"
        ],
        "summary": "Updates the duration setup for benefits.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input containing the updated benefit duration setup information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetup"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetup"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/client-plan-offering": {
      "post": {
        "tags": [
          "CompanyPlan"
        ],
        "summary": "Endpoint for creating a new company plan offering asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the benefit plan offering.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveCompanyPlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveCompanyPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveCompanyPlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddClientPlanOffering"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CompanyPlan"
        ],
        "summary": "Updates a company plan asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the company plan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateCompanyPlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateCompanyPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateCompanyPlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditClientPlanOffering"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-plan-offering/{id}": {
      "get": {
        "tags": [
          "CompanyPlan"
        ],
        "summary": "Retrieves a specific company plan asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the company plan to retrieve company Plan.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-plan-offering/benefit-plan-options": {
      "get": {
        "tags": [
          "CompanyPlan"
        ],
        "summary": "Retrieves filtered options based on the provided CompanyBenefitPlanOptionsFilter.",
        "parameters": [
          {
            "name": "benefitClassId",
            "in": "query",
            "description": "Gets the benefit class id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-plan-offering/forms/{id}": {
      "get": {
        "tags": [
          "CompanyPlan"
        ],
        "summary": " (Auth policies: ViewEnrollment)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-plan-offering/get-plan-comparison": {
      "post": {
        "tags": [
          "CompanyPlan"
        ],
        "summary": "Retrieves a list of plan comparisons for the specified company plan IDs.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of company plan identifiers.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/text": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_PlanComparisonDto"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_PlanComparisonDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_PlanComparisonDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/client-plan-offering/list": {
      "post": {
        "tags": [
          "CompanyPlan"
        ],
        "summary": "Retrieves a paged list of BenefitCoverageListItem based on the provided filter criteria.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitCoverageFilter object containing filter criteria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ClientPlanOfferingListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/companies/filtered-options": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Retrieves a list of filtered options based on the provided CompanyFilter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The CompanyFilter object containing filter criteria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/companies/options": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Retrieves a list of company options asynchronously based on the user's authorization roles and policies.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/companies/payGroups/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Retrieves a specific pay group asynchronously by its companyId.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The companyId of the pay group to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddEmployeeDeductionFrequency"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/dca-maximum": {
      "get": {
        "tags": [
          "Dca"
        ],
        "summary": "Endpoint to list benefit settings.",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Gets or sets the year as a nullable integer.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dCAMaximumId",
            "in": "query",
            "description": "Gets or sets the maximum ID for the DCA (Data Collection Agent).",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dCAMax",
            "in": "query",
            "description": "Gets or sets the maximum value for a decimal number.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "dCAMaxJoint",
            "in": "query",
            "description": "Gets or sets the maximum joint value for a decimal number.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_DcaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_DcaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_DcaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Dca"
        ],
        "summary": "Endpoint to update a benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateDcaMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateDcaMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateDcaMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Dca"
        ],
        "summary": "Endpoint to create a new benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a new benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateDcaMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateDcaMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateDcaMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/dca-maximum/{id}": {
      "get": {
        "tags": [
          "Dca"
        ],
        "summary": "Endpoint to get a specific benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit setting to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_DcaMaximumsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_DcaMaximumsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_DcaMaximumsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Dca"
        ],
        "summary": "Endpoint to delete a benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit setting to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/dca-maximum/options": {
      "get": {
        "tags": [
          "Dca"
        ],
        "summary": "Endpoint to get options for benefit settings.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/dependents": {
      "put": {
        "tags": [
          "Dependent"
        ],
        "summary": "Updates a dependent asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model for updating the dependent.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateDependent"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateDependent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateDependent"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Dependent"
        ],
        "summary": "Endpoint for creating a dependent asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a dependent.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateDependent"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateDependent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateDependent"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/dependents/{id}": {
      "get": {
        "tags": [
          "Dependent"
        ],
        "summary": "Retrieves information about a dependent asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dependent to retrieve information for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_DependentInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_DependentInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_DependentInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/dependents/dependentreport": {
      "get": {
        "tags": [
          "Dependent"
        ],
        "summary": "Retrieves a paged list of dependent reports based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets or sets the Employee ID as a Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable boolean value.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "relationship",
            "in": "query",
            "description": "Gets or sets the relationship ID as a nullable integer.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Gets or sets the state as a nullable byte.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Gets or sets the search query string with a maximum length defined by DataConstants.LengthGeneralInput.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/dependents/list": {
      "post": {
        "tags": [
          "Dependent"
        ],
        "summary": "Retrieves a paged list of dependent items based on the provided filter criteria.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for retrieving dependent items.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Dependents_Dtos_DependentFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Dependents_Dtos_DependentFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Dependents_Dtos_DependentFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-benefits": {
      "put": {
        "tags": [
          "EmployeeBenefits"
        ],
        "summary": "Updates an employee's information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input containing the updated employee information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeBenefits"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeBenefits"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeBenefits"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditEmployeeBenefitsManagement"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "EmployeeBenefits"
        ],
        "summary": "Endpoint for creating a new employee asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the employee.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeInfo"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeInfo"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/employee-benefits/{id}": {
      "get": {
        "tags": [
          "EmployeeBenefits"
        ],
        "summary": "Retrieves employee information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the employee.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditEmployeeBenefitsManagement"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "EmployeeBenefits"
        ],
        "summary": "Deletes an employee asynchronously by the provided id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the employee to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/employee-benefits/list": {
      "post": {
        "tags": [
          "EmployeeBenefits"
        ],
        "summary": "Retrieves a paged list of employee information based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for employee information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitsFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitsFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitsFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeBenefitsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeBenefitsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeBenefitsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EmployeeBenefitsManagementListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-deductionfrequency": {
      "put": {
        "tags": [
          "EmployeeDeductionFrequency"
        ],
        "summary": "Updates the company deduction frequency asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the company deduction frequency.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeDeductionFrequency"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeDeductionFrequency"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeDeductionFrequency"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditEmployeeDeductionFrequency"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "EmployeeDeductionFrequency"
        ],
        "summary": "Endpoint for creating a new company deduction frequency asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the company deduction frequency.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeDeductionFrequency"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeDeductionFrequency"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeDeductionFrequency"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddEmployeeDeductionFrequency"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-deductionfrequency/{id}": {
      "get": {
        "tags": [
          "EmployeeDeductionFrequency"
        ],
        "summary": "Retrieves a company deduction frequency information asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the company deduction frequency to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditEmployeeDeductionFrequency"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "EmployeeDeductionFrequency"
        ],
        "summary": "Deletes a company deduction frequency by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the company deduction frequency to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/employee-deductionfrequency/list": {
      "post": {
        "tags": [
          "EmployeeDeductionFrequency"
        ],
        "summary": "Retrieves a paged list of Company Deduction Frequency items based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for Company Deduction Frequency items.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EmployeeDeductionFrequencyListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-life-event": {
      "get": {
        "tags": [
          "EmployeeLifeEvent"
        ],
        "summary": "Retrieves a paged list of employee life events based on the provided filter criteria.",
        "parameters": [
          {
            "name": "eventType",
            "in": "query",
            "description": "Gets or sets the nullable integer representing the event type.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Gets or sets the status of an object, which can be null.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeLifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeLifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeLifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeLifeEvent"
        ],
        "summary": "Updates an employee's life events asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model containing the updated employee life events.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeLifeEvents"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeLifeEvents"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeLifeEvents"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeLifeEvent"
        ],
        "summary": "Endpoint for creating a new employee life event asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the employee life event.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeLifeEvent"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeLifeEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateEmployeeLifeEvent"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/employee-life-event/{id}": {
      "get": {
        "tags": [
          "EmployeeLifeEvent"
        ],
        "summary": "Retrieves employee life events information by ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the employee life event to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeLifeEventsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeLifeEventsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeLifeEventsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeLifeEvent"
        ],
        "summary": "Deletes an entity by its ID using a generic method.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/employee-plans/admin-enrollment": {
      "post": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": "Submits an employee plan enrollment as an administrator.\r\nThis endpoint allows an administrator to enroll an employee in a benefit plan.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The enrollment details for the employee benefit plan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitEmployeePlanEnrollment"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitEmployeePlanEnrollment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitEmployeePlanEnrollment"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "BenefitsEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/approve": {
      "put": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": "Updates the approval status of an employee plan by its ID.\r\nThis endpoint is typically used to approve an employee's benefit plan election.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The unique identifier of the employee plan to approve.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeePlanStatus"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeePlanStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeePlanStatus"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/employee-plans/cost": {
      "post": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": " (Auth policies: CompleteEnrollment)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeCostCalculationInput"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeCostCalculationInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeCostCalculationInput"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/coverage-details": {
      "get": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": "Retrieves a list of coverage effective dates based on the specified input criteria.",
        "description": "This endpoint requires the caller to have the BBSI.Benefits.Database.Public.Common.Constants.UserPrivilegesConstants.BenefitsEnrollment policy.",
        "parameters": [
          {
            "name": "employeeBenefitId",
            "in": "query",
            "description": "Gets or sets the unique identifier for the employee benefit.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyPlanId",
            "in": "query",
            "description": "Gets or sets the unique identifier for the company plan.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CoverageDetailsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CoverageDetailsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CoverageDetailsInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "BenefitsEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/elect": {
      "post": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": " (Auth policies: CompleteEnrollment)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveEmployeePlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveEmployeePlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveEmployeePlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/filtered-options": {
      "get": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": " (Auth policies: ElectionApprovalListPage)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanFilteredOptionsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanFilteredOptionsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanFilteredOptionsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ElectionApprovalListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/list": {
      "post": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": "Retrieves a paged list of BenefitPlanListItem objects based on the provided BenefitPlanFilter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The BenefitPlanFilter object used to filter the list of BenefitPlanListItem objects.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ElectionApprovalListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/plan-type": {
      "post": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": " (Auth policies: CompleteEnrollment)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveEmployeePlanType"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveEmployeePlanType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveEmployeePlanType"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/plan-type-plans": {
      "get": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": " (Auth policies: ViewEnrollment)",
        "parameters": [
          {
            "name": "planTypeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "enrollmentYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coverageTierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/plans": {
      "get": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": "Retrieves benefit plans information asynchronously based on the provided employee ID.",
        "parameters": [
          {
            "name": "employeeBenefitId",
            "in": "query",
            "description": "The unique identifier of the employee benefit.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanEnrollmentInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanEnrollmentInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanEnrollmentInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "BenefitsEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/reject": {
      "put": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": "Updates the rejected status of an employee plan by its ID.\r\nThis endpoint is typically used to reject an employee's benefit plan election.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The unique identifier of the employee plan to reject.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeePlanStatus"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeePlanStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeePlanStatus"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/employee-plans/submit": {
      "post": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": " (Auth policies: CompleteEnrollment)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitEmployeePlan"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitEmployeePlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SubmitEmployeePlan"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employee-plans/summary": {
      "get": {
        "tags": [
          "EmployeePlan"
        ],
        "summary": " (Auth policies: ViewEnrollment)",
        "parameters": [
          {
            "name": "enrollmentYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employees/eligible-plan-types": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Endpoint to reject a life event.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for rejecting the life event.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeLifeEventPlanTypeInfo"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeLifeEventPlanTypeInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeLifeEventPlanTypeInfo"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employees/filtered-options": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": " (Auth)",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeCompanyFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeCompanyFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeCompanyFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employees/profile": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": " (Auth)",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeProfileInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeProfileInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeProfileInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employer-life-event": {
      "get": {
        "tags": [
          "EmployerLifeEvent"
        ],
        "summary": "Retrieves a paged list of employer life events based on the provided filter.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets or sets the EmployeeId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Gets or sets the nullable integer representing the event type.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Gets or sets the status of an object, which can be null.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployerLifeEventsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployerLifeEventsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployerLifeEventsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Enrollments-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employer-life-event/{id}": {
      "get": {
        "tags": [
          "EmployerLifeEvent"
        ],
        "summary": "Retrieves employer life events information by ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the employer life event to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployerLifeEventsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployerLifeEventsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployerLifeEventsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Enrollments-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employer-life-event/approve": {
      "post": {
        "tags": [
          "EmployerLifeEvent"
        ],
        "summary": "Endpoint for approving employer life events asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input model for approving employer life events.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ApproveEmployerLifeEvents"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ApproveEmployerLifeEvents"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ApproveEmployerLifeEvents"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Enrollments-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/employer-life-event/cancel/{id}": {
      "get": {
        "tags": [
          "EmployerLifeEvent"
        ],
        "summary": "Cancels an enrollment asynchronously by calling a generic method to handle PUT requests.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the enrollment to be canceled.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Enrollments-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/enrollment-plan-message": {
      "put": {
        "tags": [
          "BenefitEnrollmentPlanMessage"
        ],
        "summary": "Updates a benefit group company setting asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit group company setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentPlanMessage"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentPlanMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentPlanMessage"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditPlanEnrollmentMessage"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BenefitEnrollmentPlanMessage"
        ],
        "summary": "Endpoint for creating a new Benefit Enrollment Plan Message asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the Benefit Enrollment Plan Message.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitEnrollmentPlanMessage"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitEnrollmentPlanMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitEnrollmentPlanMessage"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddPlanEnrollmentMessage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/enrollment-plan-message/{id}": {
      "get": {
        "tags": [
          "BenefitEnrollmentPlanMessage"
        ],
        "summary": "Retrieves a BenefitEnrollmentPlanMessageInfo asynchronously by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the BenefitEnrollmentPlanMessageInfo to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewPlanEnrollmentMessage"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BenefitEnrollmentPlanMessage"
        ],
        "summary": "Deletes a record asynchronously based on the provided id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the record to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-plan-message/list": {
      "post": {
        "tags": [
          "BenefitEnrollmentPlanMessage"
        ],
        "summary": "Retrieves a paged list of BenefitEnrollmentPlanMessageListItem based on the provided filter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for retrieving BenefitEnrollmentPlanMessageListItem.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanEnrollmentMessageListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/clear-enrollment": {
      "put": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Updates the enrollment by clearing a specific step for a user.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter containing information about the step to clear for the enrollment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ClearEnrollmentStepFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ClearEnrollmentStepFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ClearEnrollmentStepFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/enroll": {
      "post": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Handles the POST request to enroll a user in a course asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The enrollment details to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentWizard_PostEnrollmentStep_Dtos_CreateEnrollment"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentWizard_PostEnrollmentStep_Dtos_CreateEnrollment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentWizard_PostEnrollmentStep_Dtos_CreateEnrollment"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/enrollment-summary": {
      "get": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Retrieves the enrollment summary step asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId property which is required and can only be initialized during object creation.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "enrollmentYear",
            "in": "query",
            "description": "Gets or initializes the enrollment year for a student.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentWizardSummaryStep"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentWizardSummaryStep"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentWizardSummaryStep"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/final-submit": {
      "post": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Handles the final submission of a form asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter containing the final submission data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_FinalSubmissionFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_FinalSubmissionFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_FinalSubmissionFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SummaryStep"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SummaryStep"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SummaryStep"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/geocode-lookup": {
      "post": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Endpoint to get state, city and county by ZipCode in USA.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input for Vertex API Client.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Integrations_VertexAPI_GeocodeLookupRequestDto"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Integrations_VertexAPI_GeocodeLookupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Integrations_VertexAPI_GeocodeLookupRequestDto"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CompleteEnrollment"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/signature-info": {
      "post": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Endpoint for creating a signature step asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model containing signature information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateSignature"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateSignature"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateSignature"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NoContent204"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NoContent204"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NoContent204"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Updates the signature information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model containing the updated signature information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateSignature"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateSignature"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateSignature"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Retrieves signature information asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "enrollmentYear",
            "in": "query",
            "description": "Gets or sets the enrollment year for a student.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets or sets the required EmployeeId as a Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SignatureInfoItem"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SignatureInfoItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SignatureInfoItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/step-content": {
      "get": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Retrieves enrollment content for a wizard step asynchronously.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId property which is required and can only be initialized during object creation.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitGroupId",
            "in": "query",
            "description": "Gets the Benefit Group ID which is required and can be initialized.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "enrollmentYear",
            "in": "query",
            "description": "Gets or initializes the enrollment year for a student.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "benefitGroupType",
            "in": "query",
            "description": "Gets the required BenefitGroupTypes for the BenefitGroup.",
            "schema": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
            }
          },
          {
            "name": "changedEffectiveDate",
            "in": "query",
            "description": "Gets the changed effective date for a specific entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WizardStepDetailInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WizardStepDetailInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WizardStepDetailInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/steps": {
      "get": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Retrieves wizard steps asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId property which is required and can only be initialized during object creation.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WizardInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WizardInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WizardInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/enrollment-wizard/welcome": {
      "get": {
        "tags": [
          "EnrollmentWizard"
        ],
        "summary": "Retrieves the welcome step asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets or sets the enrollment year of a student, nullable integer value.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "enrollmentYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WelcomeStep"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WelcomeStep"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WelcomeStep"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/file-upload": {
      "post": {
        "tags": [
          "FileUpload"
        ],
        "summary": "Uploads a file asynchronously to Azure storage based on the provided file and upload type.",
        "parameters": [
          {
            "name": "uploadTypes",
            "in": "query",
            "description": "The type of upload (e.g., images, documents).",
            "schema": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_UploadTypes"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string"
                  },
                  "contentDisposition": {
                    "type": "string"
                  },
                  "headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "fileName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "contentType": {
                  "style": "form"
                },
                "contentDisposition": {
                  "style": "form"
                },
                "headers": {
                  "style": "form"
                },
                "length": {
                  "style": "form"
                },
                "name": {
                  "style": "form"
                },
                "fileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddForms"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/fsa-maximum": {
      "get": {
        "tags": [
          "Fsa"
        ],
        "summary": "Endpoint to list benefit settings.",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Gets or sets the year as a nullable integer.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fSAMaximumId",
            "in": "query",
            "description": "Gets or sets the maximum ID for FSA (Financial Services Authority) as a Guid value.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fSAMax",
            "in": "query",
            "description": "Gets or sets the maximum value for FSA (Flexible Spending Account).",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_FsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_FsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_FsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Fsa"
        ],
        "summary": "Endpoint to update a benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateFsaMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateFsaMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateFsaMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Fsa"
        ],
        "summary": "Endpoint to create a new benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a new benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateFsaMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateFsaMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateFsaMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/fsa-maximum/{id}": {
      "get": {
        "tags": [
          "Fsa"
        ],
        "summary": "Endpoint to get a specific benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_FsaMaximumsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_FsaMaximumsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_FsaMaximumsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Fsa"
        ],
        "summary": "Endpoint to delete a benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit setting to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/fsa-maximum/options": {
      "get": {
        "tags": [
          "Fsa"
        ],
        "summary": "Endpoint to get options for benefit settings.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/hsa-maximum": {
      "get": {
        "tags": [
          "Hsa"
        ],
        "summary": "Endpoint to list benefit settings.",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Gets or sets the year as a nullable integer.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hSAMaximumId",
            "in": "query",
            "description": "Gets or sets the maximum ID for HSA (Health Savings Account).",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hSAMaxSingle",
            "in": "query",
            "description": "Gets or sets the maximum single value for a Health Savings Account (HSA).",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "hSAMaxSingleOldAge",
            "in": "query",
            "description": "Gets or sets the maximum single old age amount for Health Savings Account (HSA).",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "hSAMaxFamily",
            "in": "query",
            "description": "Gets or sets the maximum Health Savings Account (HSA) contribution limit for a family.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "hSAMaxFamilyOldAge",
            "in": "query",
            "description": "Gets or sets the maximum family old age for Health Savings Account (HSA).",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_HsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_HsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_HsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Hsa"
        ],
        "summary": "Endpoint to update a benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input object containing the updated benefit setting information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateHsaMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateHsaMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateHsaMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Hsa"
        ],
        "summary": "Endpoint to create a new benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a new benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateHsaMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateHsaMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateHsaMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/hsa-maximum/{id}": {
      "get": {
        "tags": [
          "Hsa"
        ],
        "summary": "Endpoint to get a specific benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_HsaMaximumsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_HsaMaximumsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_HsaMaximumsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Hsa"
        ],
        "summary": "Endpoint to delete a benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/hsa-maximum/options": {
      "get": {
        "tags": [
          "Hsa"
        ],
        "summary": "Endpoint to get options for benefit settings.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/life-event": {
      "post": {
        "tags": [
          "LifeEvent"
        ],
        "summary": "Endpoint for creating a new employee life event asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "companyId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "employeeId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "qualifiedEventId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "requiredFormTypeId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "lifeEventDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "comments": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "companyId": {
                  "style": "form"
                },
                "employeeId": {
                  "style": "form"
                },
                "qualifiedEventId": {
                  "style": "form"
                },
                "requiredFormTypeId": {
                  "style": "form"
                },
                "lifeEventDateTime": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                },
                "comments": {
                  "style": "form"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "companyId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "employeeId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "qualifiedEventId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "requiredFormTypeId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "lifeEventDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "comments": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "companyId": {
                  "style": "form"
                },
                "employeeId": {
                  "style": "form"
                },
                "qualifiedEventId": {
                  "style": "form"
                },
                "requiredFormTypeId": {
                  "style": "form"
                },
                "lifeEventDateTime": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                },
                "comments": {
                  "style": "form"
                }
              }
            },
            "application/text": {
              "schema": {
                "type": "object",
                "properties": {
                  "companyId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "employeeId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "qualifiedEventId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "requiredFormTypeId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "lifeEventDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "comments": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "companyId": {
                  "style": "form"
                },
                "employeeId": {
                  "style": "form"
                },
                "qualifiedEventId": {
                  "style": "form"
                },
                "requiredFormTypeId": {
                  "style": "form"
                },
                "lifeEventDateTime": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                },
                "comments": {
                  "style": "form"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "companyId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "employeeId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "qualifiedEventId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "requiredFormTypeId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "lifeEventDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "comments": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "companyId": {
                  "style": "form"
                },
                "employeeId": {
                  "style": "form"
                },
                "qualifiedEventId": {
                  "style": "form"
                },
                "requiredFormTypeId": {
                  "style": "form"
                },
                "lifeEventDateTime": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                },
                "comments": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/life-event/{id}": {
      "get": {
        "tags": [
          "LifeEvent"
        ],
        "summary": "Endpoint to get detailed view information for a specific life event by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the life event to view.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_LifeEventViewInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_LifeEventViewInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_LifeEventViewInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/life-event/{qualifiedLifeEventId}/required-form-types": {
      "get": {
        "tags": [
          "LifeEvent"
        ],
        "summary": "Endpoint to get a specific required form types by qualifiedLifeEventId.",
        "parameters": [
          {
            "name": "qualifiedLifeEventId",
            "in": "path",
            "description": "The qualifiedLifeEventId of the required form types to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/life-event/approve": {
      "put": {
        "tags": [
          "LifeEvent"
        ],
        "summary": "Endpoint to approve a life event.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for approving the life event.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ApproveLifeEvent"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ApproveLifeEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_ApproveLifeEvent"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_NoContentResult"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_NoContentResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ApproveLifeEvents"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/life-event/Download": {
      "get": {
        "tags": [
          "LifeEvent"
        ],
        "summary": "Endpoint to get a specific download file by id.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The id of the file download.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/life-event/list": {
      "post": {
        "tags": [
          "LifeEvent"
        ],
        "summary": "Retrieves a paged list of Life Event items based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The filter criteria for Life Event items.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_LifeEventFilter"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_LifeEventFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_LifeEventFilter"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_LifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_LifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_LifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "LifeEventsListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/life-event/reject/{id}": {
      "put": {
        "tags": [
          "LifeEvent"
        ],
        "summary": "Endpoint to reject a life event.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the life event to reject.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_NoContentResult"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_NoContentResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "RejectLifeEvents"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/logs": {
      "get": {
        "tags": [
          "BenefitsLog"
        ],
        "summary": "Retrieves a paged list of LogListItem objects asynchronously based on the provided filter.",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Services_Logs_Dto_LogListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Services_Logs_Dto_LogListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Services_Logs_Dto_LogListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/annual-max-deductions/{companyPayGroupId}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Endpoint to get the annual max deductions by companyPayGroupId.",
        "parameters": [
          {
            "name": "companyPayGroupId",
            "in": "path",
            "description": "The companyPayGroupId of the annual max deductions to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EmployeeDeductionFrequencyListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/coveragetier-codes/options": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieves benefit coverage tier code information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "CoverageTiersListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/employee-statuses": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieves Employee statuses for Benefit plan setup.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/employee-types": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieves Employee types for Benefit plan setup.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/formTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieves form types information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "FormLibraryListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/lookup-types": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Endpoint to get all lookup types.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/metadata/lookups/{typeId}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Endpoint to get the lookup values by typeId.",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "description": "The payGroupId of the lookup values to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/PayGroups": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieves plan groups information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EmployeeDeductionFrequencyListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/planTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieves plan types information asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "PlanTypeListPage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/privileges": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Endpoint to get the privileges.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/metadata/roles": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Endpoint to get the roles.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/benefits/plan-coverages-and-rates": {
      "post": {
        "tags": [
          "BenefitPlanCoverageFlatRate"
        ],
        "summary": "Endpoint for creating a new Benefit Plan Coverage and Rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating the Benefit Plan Coverage and Flat Rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCoverageFlatRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCoverageFlatRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanCoverageFlatRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "AddBenefitPlans"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BenefitPlanCoverageFlatRate"
        ],
        "summary": "Endpoint for updating existing Benefit Plan Coverage and Rates asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating the Benefit Plan Coverage and Flat Rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverageFlatRate"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverageFlatRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverageFlatRate"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "EditBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/plan-coverages-and-rates/{id}": {
      "get": {
        "tags": [
          "BenefitPlanCoverageFlatRate"
        ],
        "summary": "Retrieves benefit plan standard coverage and rates information asynchronously based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the benefit plan standard rates.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageFlatRateInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageFlatRateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageFlatRateInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "ViewBenefitPlans"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/reports/activities": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a paged list of benefits activities based on the provided filter.",
        "parameters": [
          {
            "name": "benefitPlanGroupId",
            "in": "query",
            "description": "Gets or sets the unique identifier of the benefit plan group.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId which is a nullable Guid type property.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitsActivitiesListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitsActivitiesListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitsActivitiesListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/reports/activity-details": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a paged list of benefit activity details based on the provided filter criteria asynchronously.",
        "parameters": [
          {
            "name": "benefitPlanEnrollmentId",
            "in": "query",
            "description": "Gets or sets the unique identifier for the Benefit Plan Enrollment.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId which is a nullable Guid type property.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitActivityDetailListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitActivityDetailListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitActivityDetailListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/reports/benefit-401K": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a list of 401K plan enrollments with pagination based on the provided filter.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId which is a nullable Guid type property.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Benefit401KPlanEnrollmentListItem"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Benefit401KPlanEnrollmentListItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Benefit401KPlanEnrollmentListItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/reports/benefit-approval-enrollments": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a paged list of benefit enrollments awaiting approval based on the provided filter criteria.",
        "parameters": [
          {
            "name": "benefitPlanGroupId",
            "in": "query",
            "description": "Gets or sets the unique identifier of the benefit plan group.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "approvalStatus",
            "in": "query",
            "description": "Gets or sets Validates if the ApprovalStatus property is of type EnrollmentApprovalStatuses enum.",
            "schema": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId which is a nullable Guid type property.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentsApprovalListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentsApprovalListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentsApprovalListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Reports-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Updates benefit enrollments approval asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for updating benefit enrollments approval.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentsApproval"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentsApproval"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentsApproval"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/reports/benefit-census": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a paged list of BenefitCensusListItem based on the provided filter.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId which is a nullable Guid type property.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCensusListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCensusListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCensusListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/reports/benefit-consolidate": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a paged list of BenefitConsolidateListItem objects based on the provided filter asynchronously.",
        "parameters": [
          {
            "name": "benefitPlanGroupId",
            "in": "query",
            "description": "Gets or sets the Benefit Plan Group Id as a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId which is a nullable Guid type property.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitConsolidateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitConsolidateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitConsolidateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/reports/eligibility": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a list of benefit eligibility reports based on the provided filter asynchronously.",
        "parameters": [
          {
            "name": "benefitPlanGroupId",
            "in": "query",
            "description": "Gets or sets the Benefit Plan Group Id as a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitPlanId",
            "in": "query",
            "description": "Gets or sets the unique identifier for a benefit plan, which may be nullable.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "Gets or sets the unique identifier for an organization.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Gets the CompanyId which is a nullable Guid.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Gets the EmployeeId which is a nullable Guid type property.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "benefitYear",
            "in": "query",
            "description": "Gets or sets the benefit year for a specific entity.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "Gets or sets the job status as a nullable byte value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EligibilityReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EligibilityReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EligibilityReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/retirement-maximum": {
      "get": {
        "tags": [
          "Retirement"
        ],
        "summary": "Endpoint to list benefit settings.",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Gets or sets the year as a nullable integer.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "retirementMaximumId",
            "in": "query",
            "description": "Gets or sets the retirement maximum ID as a Guid value.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "requirementTypeIds",
            "in": "query",
            "description": "Gets or sets the RequirementTypeIds as a nullable string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxLimit",
            "in": "query",
            "description": "Gets or sets the maximum limit value, which is a nullable decimal.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxLimitOldAge",
            "in": "query",
            "description": "Gets or sets the maximum limit for old age, represented as a nullable decimal value.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_RetirementMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_RetirementMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_RetirementMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Retirement"
        ],
        "summary": "Endpoint to update a benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input object containing the updated retirement maximums.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateRetirementMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateRetirementMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateRetirementMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Retirement"
        ],
        "summary": "Endpoint to create a new benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a new benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateRetirementMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateRetirementMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateRetirementMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/retirement-maximum/{id}": {
      "get": {
        "tags": [
          "Retirement"
        ],
        "summary": "Endpoint to get a specific benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_RetirementMaximumsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_RetirementMaximumsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_RetirementMaximumsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Retirement"
        ],
        "summary": "Endpoint to delete a benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/retirement-maximum/Options": {
      "get": {
        "tags": [
          "Retirement"
        ],
        "summary": "Endpoint to get options for benefit settings.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/Transportation-maximum": {
      "get": {
        "tags": [
          "Transportation"
        ],
        "summary": "Endpoint to list benefit settings.",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Gets or sets the year as a nullable integer.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transportationMaximumId",
            "in": "query",
            "description": "Gets or sets the maximum ID for transportation entities.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "transitMax",
            "in": "query",
            "description": "Gets or sets the maximum transit value as a nullable decimal.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "parkingMax",
            "in": "query",
            "description": "Gets or sets the maximum parking value, which is a nullable decimal.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Gets the page size. The value must be greater than zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "schema": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_TransportationMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_TransportationMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_TransportationMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Transportation"
        ],
        "summary": "Endpoint to update a benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input object containing the updated benefit setting information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateTransportationMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateTransportationMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateTransportationMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Transportation"
        ],
        "summary": "Endpoint to create a new benefit setting.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The input data for creating a new benefit setting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateTransportationMaximums"
              }
            },
            "application/text": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateTransportationMaximums"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateTransportationMaximums"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Created201"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Manage"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/Transportation-maximum/{id}": {
      "get": {
        "tags": [
          "Transportation"
        ],
        "summary": "Endpoint to get a specific benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_TransportationMaximumsInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_TransportationMaximumsInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_TransportationMaximumsInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_NotFound404"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Transportation"
        ],
        "summary": "Endpoint to delete a benefit setting by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the benefit setting to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-Modify"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/Transportation-maximum/options": {
      "get": {
        "tags": [
          "Transportation"
        ],
        "summary": "Endpoint to get options for benefit settings.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/user-auth/assign-role": {
      "post": {
        "tags": [
          "BenefitsUserAuth"
        ],
        "summary": "Assigns a role to a user based on the provided RoleAssignmentDto model.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_RoleAssignmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_RoleAssignmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_RoleAssignmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/benefits/user-auth/login": {
      "post": {
        "tags": [
          "BenefitsUserAuth"
        ],
        "summary": "Endpoint for user login with provided credentials.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The login request data transfer object containing user credentials.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_LoginRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_LoginRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_LoginRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/benefits/user-auth/register": {
      "post": {
        "tags": [
          "BenefitsUserAuth"
        ],
        "summary": "Registers a new user with the provided registration information.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The RegistrationRequestDto containing user registration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_RegistrationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_RegistrationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_RegistrationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "KnownUser",
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/companies": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves all companies by organization asynchronously.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_MockCompany"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_MockCompany"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_MockCompany"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/companies/{companyId}": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves company information by company ID asynchronously.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_MockCompany"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_MockCompany"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_MockCompany"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/companies/{organizationId}/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of companies by organization ID, filtered by users count greater than 0 and ordered by name.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The ID of the organization to retrieve companies.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/companies/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of company options asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/company-deduction-codes/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves the options for company deduction codes asynchronously based on the provided company ID.",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/deduction-codes/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of global deduction codes options for authorized users with the role \"master_admin\".",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/employee-tiers/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of employee tier options with authorization requirements.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/employee-types/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of employee type options with specific authorization requirements.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/employees": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves employee demographics based on the provided employee ID, with authorization and role-based access control.",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_EmployeeDemographics"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_EmployeeDemographics"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_EmployeeDemographics"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Enrollments-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/employees/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of employee options based on the user's authorization and company ID.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/employees/options-all": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of all employee options based on the provided status.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Reports-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/gl-codes/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of GL codes options asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/organizations": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of all organizations asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Organization"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Organization"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_Organization"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/organizations/{id}": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a single organization based on the provided ID asynchronously.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Organization"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Organization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Organization"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/organizations/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of organization options for authorized users with the role \"master_admin\".",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/pay-codes/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of pay codes options asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/pay-types/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of pay type options for authorized users with the specified policy and roles.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/positions/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of position options asynchronously.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/mock-api/states/options": {
      "get": {
        "tags": [
          "MockApi"
        ],
        "summary": "Retrieves a list of state options for authorized users with the 'master_admin' role.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Setup-View"
            ]
          }
        ]
      }
    },
    "/api/v{version}/Users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Endpoint to get user profile.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApiKey",
            "in": "header",
            "description": "API Key required for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "application/text": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BBSI_Benefits_Model_ValidationError"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UserProfileInfo"
                }
              },
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UserProfileInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UserProfileInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BBSI_Benefits_Database_Genders": {
        "enum": [
          "145 - Male | Male.",
          "146 - Female | Female."
        ],
        "type": "string",
        "description": "Represents different types of genders."
      },
      "System_DayOfWeek": {
        "enum": [
          "0 - Sunday | No summary available",
          "1 - Monday | No summary available",
          "2 - Tuesday | No summary available",
          "3 - Wednesday | No summary available",
          "4 - Thursday | No summary available",
          "5 - Friday | No summary available",
          "6 - Saturday | No summary available"
        ],
        "type": "string"
      },
      "System_DateOnly": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "month": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "day": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dayOfWeek": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DayOfWeek"
              }
            ],
            "readOnly": true
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dayNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_UpdateBeneficiary": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "beneficiaryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the beneficiary.",
            "format": "uuid"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the first name of the beneficiary.",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the last name of the beneficiary.",
            "nullable": true
          },
          "genderId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Genders"
              }
            ],
            "description": "Gets or sets the gender of the beneficiary.",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "description": "Gets or sets the relationship type of the beneficiary.",
            "nullable": true
          },
          "ssn": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the SSN of the beneficiary.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the beneficiary.",
            "nullable": true
          },
          "homePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the home phone number of the beneficiary.",
            "nullable": true
          },
          "mobilePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the mobile phone number of the beneficiary.",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the primary address line of the beneficiary.",
            "nullable": true
          },
          "addressLine2": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the secondary address line of the beneficiary.",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the city of the beneficiary's address.",
            "nullable": true
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the state of the beneficiary's address.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the zip code of the beneficiary's address.",
            "nullable": true
          },
          "county": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the county of the beneficiary's address.",
            "nullable": true
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use the employee's address for the beneficiary.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for updating a beneficiary's information."
      },
      "Microsoft_AspNetCore_Mvc_ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "BBSI_Benefits_Model_ValidationError": {
        "type": "object",
        "properties": {
          "memberNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CreateBeneficiary": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee associated with the beneficiary.",
            "format": "uuid"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the first name of the beneficiary.",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the last name of the beneficiary.",
            "nullable": true
          },
          "genderId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Genders"
              }
            ],
            "description": "Gets or sets the gender of the beneficiary.",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "description": "Gets or sets the relationship type of the beneficiary.",
            "nullable": true
          },
          "ssn": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the SSN of the beneficiary.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the beneficiary.",
            "nullable": true
          },
          "homePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the home phone number of the beneficiary.",
            "nullable": true
          },
          "mobilePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the mobile phone number of the beneficiary.",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the primary address line of the beneficiary.",
            "nullable": true
          },
          "addressLine2": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the secondary address line of the beneficiary.",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the city of the beneficiary's address.",
            "nullable": true
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the state of the beneficiary's address.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the zip code of the beneficiary's address.",
            "nullable": true
          },
          "county": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the county of the beneficiary's address.",
            "nullable": true
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use the employee's address for the beneficiary.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for creating a new beneficiary."
      },
      "BBSI_Benefits_Model_Created201": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BeneficiaryInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "beneficiaryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the beneficiary.",
            "format": "uuid"
          },
          "employeeId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the employee associated with the beneficiary.",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of the beneficiary.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of the beneficiary.",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "Gets or sets the gender of the beneficiary.",
            "format": "int32",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "description": "Gets or sets the relationship type of the beneficiary.",
            "nullable": true
          },
          "ssn": {
            "type": "string",
            "description": "Gets or sets the SSN of the beneficiary.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the beneficiary.",
            "nullable": true
          },
          "homePhoneNo": {
            "type": "string",
            "description": "Gets or sets the home phone number of the beneficiary.",
            "nullable": true
          },
          "mobilePhoneNo": {
            "type": "string",
            "description": "Gets or sets the mobile phone number of the beneficiary.",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "description": "Gets or sets the primary address line of the beneficiary.",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "description": "Gets or sets the secondary address line of the beneficiary.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Gets or sets the city of the beneficiary's address.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Gets or sets the state of the beneficiary's address.",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Gets or sets the zip code of the beneficiary's address.",
            "nullable": true
          },
          "county": {
            "type": "string",
            "description": "Gets or sets the county of the beneficiary's address.",
            "nullable": true
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use the employee's address for the beneficiary.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for returning beneficiary information."
      },
      "BBSI_Benefits_Model_NotFound404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BeneficiaryReportListItem": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the EmployeeId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "employeeStatus": {
            "type": "boolean",
            "description": "Gets or sets the status of the employee.",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "description": "Gets or sets the state ID as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "beneficiaryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a beneficiary.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of a person.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of a person.",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Gets or sets the gender.",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "description": "Gets or sets the relation string value, default value is an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryReportListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BeneficiaryFilter": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets the year value, which can be nullable.",
            "format": "int32",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or initializes the EmployeeId as a nullable Guid with a default value of Guid.Empty.",
            "format": "uuid",
            "nullable": true
          },
          "jobStatus": {
            "type": "boolean",
            "description": "Gets the job status as a nullable boolean (bit).",
            "nullable": true
          },
          "relationship": {
            "type": "integer",
            "description": "Gets or initializes the relationship ID as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "type": "integer",
            "description": "Gets the state as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "search": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search string with a maximum length defined by DataConstants.LengthGeneralInput.",
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BeneficiaryListItem": {
        "type": "object",
        "properties": {
          "beneficiaryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a beneficiary.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of a person.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of a person.",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Gets or sets the gender.",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "description": "Gets or sets the relation string value, default value is an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BeneficiaryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BeneficiaryListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateCompanyBenefitClass": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyBenefitClassId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company employee tier.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "benefitClass": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the description of an item with a maximum length defined by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateCompanyBenefitClass": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "classNumber": {
            "type": "integer",
            "description": "Gets or sets the class number.",
            "format": "int32"
          },
          "benefitClass": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the benefitclass of an item with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CompanyBenefitClassInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyBenefitClassId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company employee tier.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "classNumber": {
            "type": "integer",
            "description": "Gets or sets the class number.",
            "format": "int32"
          },
          "benefitClass": {
            "type": "string",
            "description": "Gets or sets the benefitclass of an object. Can be null.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_OptionListItem": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CompanyClassNumberInfo": {
        "type": "object",
        "properties": {
          "classNumber": {
            "type": "integer",
            "description": "Gets or sets the class number.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CompanyBenefitClassFilter": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the CompanyId which is a nullable Guid.",
            "nullable": true
          },
          "classNumbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "benefitClasses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CompanyBenefitClassListItem": {
        "type": "object",
        "properties": {
          "companyBenefitClassId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company employee tier.",
            "format": "uuid"
          },
          "companyCode": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "nullable": true
          },
          "classNumber": {
            "type": "integer",
            "description": "Gets or sets the class number.",
            "format": "int32"
          },
          "benefitClass": {
            "type": "string",
            "description": "Gets or sets the description of an object. Can be null.",
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_CompanyBenefitClassListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyBenefitClassListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_CloneTypes": {
        "enum": [
          "0 - None | Enum representing none options.",
          "1 - Clone | Represents a value indicating a clone operation.",
          "2 - Choose | Enum value representing the action of choosing something."
        ],
        "type": "string",
        "description": "Enum representing different clone types."
      },
      "BBSI_Benefits_Database_CloneStatuses": {
        "enum": [
          "0 - Ready | Represents a state where something is not ready.",
          "1 - Inprogress | Represents a status of work in progress with a value of 1.",
          "2 - Done | The value of Done is 2.",
          "3 - Error | Error code 3.",
          "4 - Cancel | Represents the cancellation status with a value of 4."
        ],
        "type": "string",
        "description": "Enum representing different statuses of a cloning process."
      },
      "BBSI_Benefits_Model_Default_BenefitCloneListItem": {
        "type": "object",
        "properties": {
          "sourceOrganizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the source organization.",
            "format": "uuid"
          },
          "sourcePlanYear": {
            "type": "integer",
            "description": "Gets or sets the source plan year.",
            "format": "int32"
          },
          "targetOrganizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the target organization.",
            "format": "uuid"
          },
          "targetPlanYear": {
            "type": "integer",
            "description": "Gets or sets the target plan year.",
            "format": "int32"
          },
          "selectedPlans": {
            "type": "string",
            "description": "Gets or sets the selected plans as a nullable string.",
            "nullable": true
          },
          "clonePlanInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the CloneTypes property representing the plan information for cloning."
          },
          "clonePlanDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the CloneTypes for the plan duration."
          },
          "benefitDurationTemplateId": {
            "type": "string",
            "description": "Gets or sets the ID of the benefit duration template, which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "clonePlanEligibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the CloneTypes for the ClonePlanEligibility property."
          },
          "benefitPlanEligibilityRuleId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Eligibility Rule Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "clonePlanSchedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the CloneTypes for the PlanSchedule."
          },
          "clonePlanRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the CloneTypes for the plan rate cloning."
          },
          "clonePlanComparison": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the CloneTypes for plan comparison."
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the ID of the Benefit Plan Comparison Template.",
            "format": "uuid",
            "nullable": true
          },
          "cloneDate": {
            "type": "string",
            "description": "Gets or sets the DateTimeOffset value representing a date to be cloned.",
            "format": "date-time"
          },
          "completedOn": {
            "type": "string",
            "description": "Gets or sets the date and time when the task was completed.",
            "format": "date-time",
            "nullable": true
          },
          "cloneStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneStatuses"
              }
            ],
            "description": "Gets or sets the CloneStatuses for cloning."
          },
          "sourceOrganizationName": {
            "type": "string",
            "description": "Gets or sets the name of the source organization.",
            "nullable": true
          },
          "targetOrganizationName": {
            "type": "string",
            "description": "Gets or sets the name of the target organization.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCloneListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCloneListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_CreateBenefitClone": {
        "required": [
          "clonePlanComparison",
          "clonePlanDuration",
          "clonePlanEligibility",
          "clonePlanInfo",
          "clonePlanRate",
          "clonePlanSchedule",
          "cloneStatus",
          "sourceOrganizationId",
          "sourcePlanYear",
          "targetOrganizationId",
          "targetPlanYear"
        ],
        "type": "object",
        "properties": {
          "sourceOrganizationId": {
            "type": "string",
            "description": "Gets or sets the Source Organization Id which is required.",
            "format": "uuid"
          },
          "sourcePlanYear": {
            "type": "integer",
            "description": "Gets or sets the SourcePlanYear property which is required.",
            "format": "int32"
          },
          "targetOrganizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the target organization.\r\nThis property is required.",
            "format": "uuid"
          },
          "targetPlanYear": {
            "type": "integer",
            "description": "Gets or sets the target plan year which is required.",
            "format": "int32"
          },
          "selectedPlans": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the selected plans with a maximum length defined by DataConstants.LengthMax.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "clonePlanInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets specifies that the ClonePlanInfo property is required and must be of the CloneTypes enum type."
          },
          "clonePlanDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the required Clone Plan Duration with validation based on the CloneTypes enum."
          },
          "benefitDurationTemplateId": {
            "type": "string",
            "description": "Gets or sets the ID of the benefit duration template.",
            "format": "uuid",
            "nullable": true
          },
          "clonePlanEligibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the Clone Plan Eligibility which is required and must be of type CloneTypes enum."
          },
          "benefitPlanEligibilityRuleId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Eligibility Rule Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "clonePlanSchedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the Clone Plan Schedule which is required and must be of type CloneTypes enum."
          },
          "clonePlanRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the required CloneTypes for ClonePlanRate property."
          },
          "clonePlanComparison": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ],
            "description": "Gets or sets the required CloneTypes for ClonePlanComparison with EnumTypeValidator attribute."
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Comparison Template Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "cloneStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneStatuses"
              }
            ],
            "description": "Gets or sets the required CloneStatus, which must be of the CloneStatuses enum type."
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitCoverage": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "coverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the coverage.",
            "format": "uuid"
          },
          "coverageTierCodeId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the coverage tier code.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CreateBenefitCoverage": {
        "required": [
          "coverageTierCodeId",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "coverageTierCodeId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the coverage tier code.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not."
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BenefitCoverageInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "coverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the coverage.",
            "format": "uuid"
          },
          "coverageTierCodeId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the coverage tier code.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets a boolean value indicating whether the object is a active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitCoverageFilter": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitCoverageListItem": {
        "type": "object",
        "properties": {
          "coverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the coverage.",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "Gets or sets the required code string.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of an object. Can be null.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status of Benefit Coverage to be Active or Inactive.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCoverageListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitDurationTemplateHistoryListItem": {
        "type": "object",
        "properties": {
          "benefitDurationTemplateId": {
            "type": "integer",
            "description": "Gets or sets the ID of the benefit duration template.",
            "format": "int32"
          },
          "changeType": {
            "type": "integer",
            "description": "Gets or sets the byte value representing the change type.",
            "format": "int32"
          },
          "columnName": {
            "type": "integer",
            "description": "Gets or sets the value of the ColumnName property as a byte data type.",
            "format": "int32"
          },
          "oldValue": {
            "type": "string",
            "description": "Gets or sets the old value of a property. The default value is null.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "Gets or sets the new value, which is initialized to null.",
            "nullable": true
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          },
          "uLoginHistoryId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the user login history.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitDurationTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitDurationTemplateHistoryListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_ChangeTypes": {
        "enum": [
          "0 - Added | Represents a change where something has been added.",
          "1 - Updated | Represents a change where something has been updated.",
          "2 - Deleted | Represents a change where something has been deleted."
        ],
        "type": "string",
        "description": "Specifies the different types of changes that can occur."
      },
      "BBSI_Benefits_Model_Default_BenefitEligibilityTemplateHistoryListItem": {
        "type": "object",
        "properties": {
          "cBenefitPlanEligibilityRuleID": {
            "type": "integer",
            "description": "Gets or sets the ID of the benefit plan eligibility rule.",
            "format": "int32"
          },
          "changeType": {
            "type": "integer",
            "description": "Gets or sets the byte value representing the change type.",
            "format": "int32"
          },
          "columnName": {
            "type": "integer",
            "description": "Gets or sets the value of the ColumnName property as a byte data type.",
            "format": "int32"
          },
          "oldValue": {
            "type": "string",
            "description": "Gets or sets the old value of a property. The default value is set to null.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "Gets or sets the new value, initialized to null.",
            "nullable": true
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          },
          "uLoginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a user login history record.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilityTemplateHistoryListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitEligibilityTemplateListItem": {
        "type": "object",
        "properties": {
          "rowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row, which can be null.",
            "format": "uuid",
            "nullable": true
          },
          "ruleName": {
            "type": "string",
            "description": "Gets or sets the name of the rule.",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the company name with an initial value of an empty string.",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "description": "Gets or sets the name of the organization. Default value is an empty string.",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the organization.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEligibilityTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilityTemplateListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_CompareFilterTypes": {
        "enum": [
          "1 - Range | Represents a range filter type, which compares values within a specified range.",
          "2 - Greater Than Or Equal To | Represents a filter type, which compares values to ensure they are greater than or equal to a specified value.",
          "3 - Less Than Or Equal To | Represents a filter type, which compares values to ensure they are less than or equal to a specified value.",
          "4 - Equal To | Represents an filter type, which compares values to ensure they are equal to a specified value."
        ],
        "type": "string",
        "description": "Specifies the different filter types for comparison operations."
      },
      "BBSI_Benefits_Database_WaitingPeriodTypes": {
        "enum": [
          "1 - Days | Represents a waiting period measured in days.",
          "2 - Months | Represents a waiting period measured in months."
        ],
        "type": "string",
        "description": "Specifies the different types of waiting periods."
      },
      "BBSI_Benefits_Database_EligibleDateFormats": {
        "enum": [
          "1 - First of the Month | Represents the date format where the eligible date is set to the first of the month.",
          "2 - Same Date | Represents the date format where the eligible date is set to the same date."
        ],
        "type": "string",
        "description": "Specifies the different date formats eligible for use."
      },
      "BBSI_Benefits_Model_Default_BenefitEligibilitRuleCompanylevelBinding": {
        "type": "object",
        "properties": {
          "companyLevelBindingId": {
            "type": "string",
            "description": "Gets the unique identifier for the company level binding.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_EmploymentType": {
        "enum": [
          "0 - Regular Full-Time | Represents a regular full time employment type, where the employee works the standard full time hours.",
          "1 - Regular Part-Time | Represents a regular part time employment type, where the employee works fewer than full time hours.",
          "2 - Temporary Full-Time | Represents a temporary full time employment type, where the employee works full time hours for a limited period.",
          "3 - Temporary Part-Time | Represents a temporary part time employment type, where the employee works part time hours for a limited period."
        ],
        "type": "string",
        "description": "Specifies the different types of employment."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitEligibilityTemplate": {
        "required": [
          "eligibleDateFormat",
          "ruleName"
        ],
        "type": "object",
        "properties": {
          "rowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the organization. Can be null.",
            "format": "uuid",
            "nullable": true
          },
          "ruleName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the RuleName property which is required, has a maximum length defined by DataConstants.LengthItemName, and is sanitized."
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the description of the data with a maximum length defined by DataConstants.LengthDescription.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "weeklyHourFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the WeeklyHourFilter and property is of type CompareFilterTypes enum.",
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "description": "Gets or sets the starting value for the weekly hours.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "description": "Gets or sets the maximum number of weekly hours for a task, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "annualSalaryFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the provided value for AnnualSalaryFilter and property is a member of the CompareFilterTypes enum.",
            "nullable": true
          },
          "annualSalaryFrom": {
            "type": "number",
            "description": "Gets or sets the starting annual salary for a job position.",
            "format": "double",
            "nullable": true
          },
          "annualSalaryTo": {
            "type": "number",
            "description": "Gets or sets the annual salary upper limit.",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the value of ServiceYearFilter and property is a valid member of the CompareFilterTypes enum.",
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "description": "Gets or sets the starting year of service.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "description": "Gets or sets the ending year of service.",
            "format": "int32",
            "nullable": true
          },
          "isEmployeeExempted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the employee is exempted."
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "description": "Gets or sets the provided value for WaitingPeriodFilter and property is a valid enum value of WaitingPeriodTypes.",
            "nullable": true
          },
          "eligibleDateFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EligibleDateFormats"
              }
            ],
            "description": "Gets or sets the eligible date format for a specific property."
          },
          "eligibleStates": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible states for a certain criteria.",
            "nullable": true
          },
          "isEligibleStates": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether its eligible in certain states."
          },
          "eligibleCounties": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible counties for a specific entity.",
            "nullable": true
          },
          "eligibleZipCodes": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible zip codes for a certain criteria.",
            "nullable": true
          },
          "isOrganizationalRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the rule is an organizational."
          },
          "istierNumbers": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the numbers are tier numbers."
          },
          "tierNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of option list items representing tier numbers.",
            "nullable": true
          },
          "isEmployeeType": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is of type Employee."
          },
          "employeeType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of employee types as option list items.",
            "nullable": true
          },
          "isPayType": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the pay type is true or false."
          },
          "payType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of option list items for PayType.",
            "nullable": true
          },
          "isJobPosition": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entity is a job position."
          },
          "jobPosition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of job positions as option list items.",
            "nullable": true
          },
          "levelBindingsTable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilitRuleCompanylevelBinding"
            },
            "description": "Gets or sets the list of BenefitEligibilitRuleCompanylevelBinding objects for level bindings table.",
            "nullable": true
          },
          "eligibleJobStatuses": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible job statuses with a maximum length of 255 characters after input sanitization.",
            "nullable": true
          },
          "employmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmploymentType"
              }
            ],
            "description": "Gets or sets the value of the EmploymentType and property is a valid enum value of the EmploymentType enum.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitEligibilityTemplate": {
        "required": [
          "eligibleDateFormat",
          "ruleName"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the organization.",
            "format": "uuid",
            "nullable": true
          },
          "ruleName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the RuleName property which is required, has a maximum length defined by DataConstants.LengthItemName, and is sanitized."
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the description of the data with a maximum length specified by DataConstants.LengthDescription.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "weeklyHourFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the WeeklyHourFilter and property is of type CompareFilterTypes enum.",
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "description": "Gets or sets the starting value for the weekly hours.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "description": "Gets or sets the maximum number of weekly hours for a task, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "annualSalaryFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the provided value for AnnualSalaryFilter and property is a member of the CompareFilterTypes enum.",
            "nullable": true
          },
          "annualSalaryFrom": {
            "type": "number",
            "description": "Gets or sets the starting annual salary for a job position.",
            "format": "double",
            "nullable": true
          },
          "annualSalaryTo": {
            "type": "number",
            "description": "Gets or sets the annual salary upper limit.",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the value of ServiceYearFilter and property is a valid enum value of CompareFilterTypes.",
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "description": "Gets or sets the starting year of service.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "description": "Gets or sets the ending year of service.",
            "format": "int32",
            "nullable": true
          },
          "isEmployeeExempted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the employee is exempted from certain rules or regulations."
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "description": "Gets or sets the provided enum value for WaitingPeriodFilter and property is of type WaitingPeriodTypes.",
            "nullable": true
          },
          "eligibleDateFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EligibleDateFormats"
              }
            ],
            "description": "Gets or sets the eligible date format for validation."
          },
          "eligibleStates": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible states for a certain criteria.",
            "nullable": true
          },
          "isEligibleStates": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is eligible in certain states."
          },
          "eligibleCounties": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible counties for a specific entity.",
            "nullable": true
          },
          "eligibleZipCodes": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible zip codes for a certain criteria.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was created.",
            "format": "date-time"
          },
          "createdByUserID": {
            "type": "integer",
            "description": "Gets or sets the ID of the user who created the entity.",
            "format": "int32"
          },
          "isOrganizationalRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the rule is an organizational rule."
          },
          "istierNumbers": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the numbers are tier numbers."
          },
          "tierNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of OptionListItem objects representing tier numbers.",
            "nullable": true
          },
          "isEmployeeType": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is of type Employee."
          },
          "employeeType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of employee types as option list items.",
            "nullable": true
          },
          "isPayType": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the pay type is true or false."
          },
          "payType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of pay types for an option.",
            "nullable": true
          },
          "isJobPosition": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entity is a job position."
          },
          "jobPosition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of job positions as OptionListItem objects.",
            "nullable": true
          },
          "levelBindingsTable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilitRuleCompanylevelBinding"
            },
            "description": "Gets or sets the list of BenefitEligibilityRuleCompanyLevelBinding objects for company level bindings.",
            "nullable": true
          },
          "eligibleJobStatuses": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible job statuses with a maximum length of 255 characters.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "employmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmploymentType"
              }
            ],
            "description": "Gets or sets the value of the EmploymentType and property is a valid enum value of the EmploymentType enum.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitEligibilityTemplateInfo": {
        "type": "object",
        "properties": {
          "rowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the organization.",
            "format": "uuid",
            "nullable": true
          },
          "ruleName": {
            "type": "string",
            "description": "Gets or sets the name of the rule that is required.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of an object. Can be null.",
            "nullable": true
          },
          "weeklyHourFilter": {
            "type": "integer",
            "description": "Gets or sets the weekly hour filter for a certain task.\r\nThis property allows storing a nullable byte value representing the number of hours per week for the task.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "description": "Gets or sets the starting value for the weekly hours.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "description": "Gets or sets the maximum number of weekly hours for a task, nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "annualSalaryFilter": {
            "type": "integer",
            "description": "Gets or sets the filter for annual salary, allowing null values.",
            "format": "int32",
            "nullable": true
          },
          "annualSalaryFrom": {
            "type": "number",
            "description": "Gets or sets the starting annual salary for a job position.",
            "format": "double",
            "nullable": true
          },
          "annualSalaryTo": {
            "type": "number",
            "description": "Gets or sets the annual salary upper limit.",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "type": "integer",
            "description": "Gets or sets the service year filter as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "description": "Gets or sets the starting year of service.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "description": "Gets or sets the ending year of service.",
            "format": "int32",
            "nullable": true
          },
          "isEmployeeExempted": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean value indicating if the employee is exempted.",
            "nullable": true
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "type": "integer",
            "description": "Gets or sets the waiting period filter as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "eligibleDateFormat": {
            "type": "integer",
            "description": "Gets or sets the eligible date format as a byte value.",
            "format": "int32"
          },
          "eligibleStates": {
            "type": "string",
            "description": "Gets or sets the eligible states for a certain criteria.",
            "nullable": true
          },
          "isEligibleStates": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether object is eligible in certain states."
          },
          "eligibleCounties": {
            "type": "string",
            "description": "Gets or sets the eligible counties for a certain criteria.",
            "nullable": true
          },
          "eligibleZipCodes": {
            "type": "string",
            "description": "Gets or sets the eligible zip codes for a certain criteria.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was created.",
            "format": "date-time"
          },
          "isOrganizationalRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets a value indicating if the rule is an organizational rule."
          },
          "istierNumbers": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the numbers are tier numbers."
          },
          "tierNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of OptionListItem objects representing tier numbers.",
            "nullable": true
          },
          "isEmployeeType": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the person is an employee type."
          },
          "employeeType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of employee types as option list items.",
            "nullable": true
          },
          "isPayType": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the pay type is true or false."
          },
          "payType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of option list items for PayType.",
            "nullable": true
          },
          "isJobPosition": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entity is a job position."
          },
          "jobPosition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of job positions as option list items.",
            "nullable": true
          },
          "eligibleJobStatus": {
            "type": "string",
            "description": "Gets or sets the eligible job status for a candidate.",
            "nullable": true
          },
          "levelBindingsTable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEligibilitRuleCompanylevelBinding"
            },
            "description": "Gets or sets the list of BenefitEligibilityRuleCompanyLevelBinding objects for company level bindings.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitEligibilitySetup": {
        "type": "object",
        "properties": {
          "benefitEligibilityRowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit eligibility row.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditListItem": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an organization.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "Gets or sets the name of the template. This property is initialized to null to ensure it is always set before being accessed.",
            "nullable": true
          },
          "flexCreditAmount": {
            "type": "number",
            "description": "Gets or sets the amount of flex credit as a decimal value.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFlexCreditListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitFlexCreditBenefitPlanGroup": {
        "type": "object",
        "properties": {
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_CodeCategories": {
        "enum": [
          "1 - Account Type | Represents types of accounts used in payroll or financial systems.",
          "2 - Amount Type | Represents types of amounts used for payroll or other financial transactions.",
          "3 - Company Accrual Codes | Represents the codes used for company accruals.",
          "4 - Company Calculation Codes | Represents codes for company calculations that affect payroll or financial records.",
          "5 - Company Code Groups | Represents groups of company codes used for categorizing different types of company activities.",
          "6 - Company Deduction Codes | Represents the codes used for company deductions such as taxes, insurance, etc.",
          "7 - Company Earnings Codes | Represents the codes used for earnings in a company, like salary or bonus codes.",
          "8 - Company EEO Class Codes | Represents the company Equal Employment Opportunity (EEO) classification codes.",
          "9 - Employee Status | Represents the codes used to categorize the employment status of an employee.",
          "10 - Employee Type | Represents the different types of employee classifications in a company (e.g., full time, part time).",
          "11 - Ethnicity Codes | Represents ethnicity codes used to categorize employees based on ethnicity.",
          "12 - Company Event Codes | Represents codes for various company events, such as employee onboarding or offboarding.",
          "13 - Payroll Frequency Codes | Represents the payroll frequency codes (e.g., weekly, monthly) used by the company.",
          "14 - Job Information Codes | Represents the codes related to employees job information (e.g., job title or department).",
          "15 - Pay Grade Codes | Represents the codes used to categorize employees based on their pay grades.",
          "16 - Pay Group Codes | Represents codes for categorizing pay groups within the company.",
          "17 - Rate Code | Represents rate codes that are used for various pay rates (e.g., hourly, salaried).",
          "18 - Review Codes | Represents the review codes that can be used in performance appraisals or employee reviews.",
          "19 - Shift Codes | Represents shift codes used for categorizing employee shift schedules (e.g., day shift, night shift).",
          "20 - Skill Codes | Represents skill codes used to categorize employees skills and expertise.",
          "21 - Rate per Unit | Represents rate per unit codes used for specific types of compensation or payroll calculations.",
          "22 - Tax Information | Represents tax related codes used for employee taxation.",
          "23 - Termination Reasons | Represents reasons for employee termination (e.g., resignation, layoff).",
          "24 - Timesheet Pay Codes | Represents the pay codes used in timesheet entries.",
          "25 - Union Information | Represents union related codes used to categorize union members.",
          "26 - Workers' Compensation Rates | Represents the workers compensation rates for employees.",
          "27 - Workers' Compensation Information | Represents information codes for workers compensation claims and data.",
          "28 - Equipment Codes | Represents equipment codes used to track company equipment.",
          "29 - Notes Categories | Represents categories for employee notes in HR or payroll systems.",
          "30 - Relationship Codes | Represents relationship codes used to categorize employee relationships (e.g., spouse, dependent).",
          "31 - School Major Codes | Represents school major codes used to categorize employee education or qualifications.",
          "32 - School Type Codes | Represents school type codes used to categorize types of schools (e.g., university, community college).",
          "33 - Tier Numbers | Represents tier numbers used to categorize employees into different levels or tiers.",
          "34 - Dependent Relationships | Represents codes for dependent relationships in payroll or HR systems (e.g., spouse, child).",
          "35 - Beneficiary Relationships | Represents codes for beneficiary relationships (e.g., primary, secondary).",
          "36 - Hispanic or Latino | Represents codes for employees of Hispanic or Latino descent.",
          "37 - Non-Hispanic or Latino | Represents codes for employees of non Hispanic or non Latino descent.",
          "39 - ATS Application Rejection Reasons | Represents the reasons why an ATS (Applicant Tracking System) may reject an application."
        ],
        "type": "string",
        "description": "Represents different categories of codes used in various employee and payroll systems."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitFlexCreditCode": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "companyCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company code.",
            "format": "uuid"
          },
          "codeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CodeCategories"
              }
            ],
            "description": "Gets or sets the specified enum type and is of the CodeCategories type."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitFlexCreditLevelBinding": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "companyLevelBindingId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company level binding.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_BenefitFlexCreditColumnNames": {
        "enum": [
          "0 - Company Id | Represents the company ID column in the benefit flex credit data.",
          "1 - Template Name | Represents the template name column in the benefit flex credit data.",
          "2 - Plan Groups | Represents the plan groups column in the benefit flex credit data.",
          "3 - Plan Year | Represents the plan year column in the benefit flex credit data.",
          "4 - Credit Amount | Represents the credit amount column in the benefit flex credit data.",
          "5 - Tier Number | Represents the tier number column in the benefit flex credit data.",
          "6 - Employee Type | Represents the employee type column in the benefit flex credit data.",
          "7 - Plan Type | Represents the plan type (pay type) column in the benefit flex credit data.",
          "8 - Weekly Hour Filter | Represents the weekly hour filter column in the benefit flex credit data.",
          "9 - Weekly Hour From | Represents the column in the benefit flex credit data.",
          "10 - Weekly Hour To | Represents the column in the benefit flex credit data.",
          "11 - Annual Salary Filter | Represents the annual salary filter column in the benefit flex credit data.",
          "12 - Annual Salary From | Represents the column in the benefit flex credit data.",
          "13 - Annual Salary To | Represents the column in the benefit flex credit data.",
          "14 - Service Year Filter | Represents the service year filter column in the benefit flex credit data.",
          "15 - Service Year From | Represents the column in the benefit flex credit data.",
          "16 - Service Year To | Represents the column in the benefit flex credit data.",
          "17 - Waiting Period | Represents the waiting period column in the benefit flex credit data.",
          "18 - Waiting Period Filter | Represents the waiting period filter column in the benefit flex credit data.",
          "19 - Eligible Job Positions | Represents the eligible job positions column in the benefit flex credit data.",
          "20 - Eligible Company Levels | Represents the eligible company levels column in the benefit flex credit data.",
          "21 - Eligible States | Represents the eligible states column in the benefit flex credit data.",
          "22 - Eligible Zip Codes | Represents the eligible zip codes column in the benefit flex credit data.",
          "23 - Organization Id | Represents the organization ID column in the benefit flex credit data."
        ],
        "type": "string",
        "description": "Specifies the column names for the benefit flex credit details."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitFlexCreditHistory": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ],
            "description": "Gets or sets validates if the specified enum value is of type ChangeTypes."
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditColumnNames"
              }
            ],
            "description": "Gets or sets validates if the specified enum value for ColumnName belongs to the BenefitFlexCreditColumnNames enum type."
          },
          "oldValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the old value with a maximum length specified by DataConstants.LengthHistoryValueInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "newValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the new value with a maximum length specified by DataConstants.LengthHistoryValueInput.\r\nThe input is sanitized before being assigned to the property.",
            "nullable": true
          },
          "loginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a login history record.",
            "format": "uuid"
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_EmployeePayTypes": {
        "enum": [
          "0 - None | No pay type selected.",
          "1 - Hourly | Represents an hourly pay type, where employees are paid based on the number of hours worked.",
          "2 - Salary | Represents a salary pay type, where employees are paid a fixed amount regardless of hours worked.",
          "3 - Commission | Represents a commission based pay type, where employees earn based on sales or performance.",
          "4 - Piece | Represents a piece rate pay type, where employees are paid per unit of work completed."
        ],
        "type": "string",
        "description": "Specifies the different pay types for employees."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitFlexCreditPayType": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "payType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployeePayTypes"
              }
            ],
            "description": "Gets or sets the specified enum type and is of EmployeePayTypes."
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitFlexCreditPosition": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "positionId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a position.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitFlexCredit": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an organization.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "templateName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the template name with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "flexCreditAmount": {
            "type": "number",
            "description": "Gets or sets the amount of flex credit as a decimal value.",
            "format": "double"
          },
          "weeklyHourFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the WeeklyHourFilter and property is of type CompareFilterTypes enum.",
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "description": "Gets or sets the starting weekly hour for a task, nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "description": "Gets or sets the maximum number of weekly hours for a task, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "anualSalaryFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the AnualSalaryFilter and property is of type CompareFilterTypes enum.",
            "nullable": true
          },
          "anualSalaryFrom": {
            "type": "number",
            "description": "Gets or sets the annual salary from which is a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "anualSalaryTo": {
            "type": "number",
            "description": "Gets or sets the annual salary upper limit.",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the value of ServiceYearFilter and property is a valid enum value of CompareFilterTypes.",
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "description": "Gets or sets the starting year of service for a particular service.\r\nThis property allows null values.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "description": "Gets or sets the ending year of service.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "description": "Gets or sets the provided value for WaitingPeriodFilter property and is a valid enum value of WaitingPeriodTypes.",
            "nullable": true
          },
          "eligibleStates": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible states for a specific entity with a maximum length of 255 characters.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "eligibleZipCodes": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible zip codes for a specific entity.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was created.",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the user who created the entity.",
            "format": "uuid"
          },
          "benefitFlexCreditBenefitPlanGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditBenefitPlanGroup"
            },
            "description": "Gets or sets the list of BenefitFlexCreditBenefitPlanGroup objects associated with the current instance.",
            "nullable": true
          },
          "benefitFlexCreditCCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditCode"
            },
            "description": "Gets or sets the list of CreateBenefitFlexCreditCode objects for BenefitFlexCreditCCodes.",
            "nullable": true
          },
          "benefitFlexCreditLevelBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditLevelBinding"
            },
            "description": "Gets or sets the list of BenefitFlexCreditLevelBindings with a default empty list.",
            "nullable": true
          },
          "benefitFlexCreditHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditHistory"
            },
            "description": "Gets or sets the list of BenefitFlexCreditHistories.",
            "nullable": true
          },
          "benefitFlexCreditPayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditPayType"
            },
            "description": "Gets or sets the list of BenefitFlexCreditPayTypes with a default empty list.",
            "nullable": true
          },
          "benefitFlexCreditPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditPosition"
            },
            "description": "Gets or sets the list of BenefitFlexCreditPositions with a default empty list.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitFlexCredit": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an organization.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "templateName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the template name with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "flexCreditAmount": {
            "type": "number",
            "description": "Gets or sets the amount of flex credit as a decimal value.",
            "format": "double"
          },
          "weeklyHourFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the WeeklyHourFilter property and is of type CompareFilterTypes enum.",
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "description": "Gets or sets the starting value for the weekly hours.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "description": "Gets or sets the maximum number of weekly hours for a task, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "anualSalaryFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the AnualSalaryFilter property and is of type CompareFilterTypes enum.",
            "nullable": true
          },
          "anualSalaryFrom": {
            "type": "number",
            "description": "Gets or sets the annual salary from which is a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "anualSalaryTo": {
            "type": "number",
            "description": "Gets or sets the annual salary upper limit.",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the value of ServiceYearFilter property is a valid CompareFilterTypes enum value.",
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "description": "Gets or sets the starting year of service.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "description": "Gets or sets the ending year of service.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "description": "Gets or sets the provided enum value for WaitingPeriodFilter property and is of type WaitingPeriodTypes.",
            "nullable": true
          },
          "eligibleStates": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible states for a specific entity with a maximum length of 255 characters.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "eligibleZipCodes": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the eligible zip codes for a specific entity.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was created.",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the user who created the entity.",
            "format": "uuid"
          },
          "benefitFlexCreditBenefitPlanGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditBenefitPlanGroup"
            },
            "description": "Gets or sets the list of BenefitFlexCreditBenefitPlanGroup objects.",
            "nullable": true
          },
          "benefitFlexCreditCCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditCode"
            },
            "description": "Gets or sets the list of CreateBenefitFlexCreditCode objects for BenefitFlexCreditCCodes.",
            "nullable": true
          },
          "benefitFlexCreditLevelBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditLevelBinding"
            },
            "description": "Gets or sets the list of BenefitFlexCreditLevelBindings with a default value of an empty list.",
            "nullable": true
          },
          "benefitFlexCreditHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditHistory"
            },
            "description": "Gets or sets the list of BenefitFlexCreditHistories, initialized as an empty list.",
            "nullable": true
          },
          "benefitFlexCreditPayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditPayType"
            },
            "description": "Gets or sets the list of BenefitFlexCreditPayTypes with a default empty list.",
            "nullable": true
          },
          "benefitFlexCreditPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitFlexCreditPosition"
            },
            "description": "Gets or sets the list of BenefitFlexCreditPositions with a default empty list.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditBenefitPlanGroupInfo": {
        "type": "object",
        "properties": {
          "benefitFlexCreditBenefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Flex Credit Benefit Plan Group.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditCodeInfo": {
        "type": "object",
        "properties": {
          "benefitFlexCreditCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Flex Credit Code.",
            "format": "uuid"
          },
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "companyCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company code.",
            "format": "uuid"
          },
          "codeType": {
            "type": "integer",
            "description": "Gets or sets the code type.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditLevelBindingInfo": {
        "type": "object",
        "properties": {
          "benefitFlexCreditLevelBindingId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Flex Credit Level Binding.",
            "format": "uuid"
          },
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "companyLevelBindingId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company level binding.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditHistoryInfo": {
        "type": "object",
        "properties": {
          "benefitFlexCreditHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit History.",
            "format": "uuid"
          },
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "changeType": {
            "type": "integer",
            "description": "Gets or sets the ChangeType property, which represents an integer value.",
            "format": "int32"
          },
          "columnName": {
            "type": "integer",
            "description": "Gets or sets the value of the ColumnName property.",
            "format": "int32"
          },
          "oldValue": {
            "type": "string",
            "description": "Gets or sets the old value of a property. The default value is null.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "Gets or sets the new value, initialized to null.",
            "nullable": true
          },
          "loginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a login history record.",
            "format": "uuid"
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditPayTypeInfo": {
        "type": "object",
        "properties": {
          "benefitFlexCreditPayTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Flex Credit Pay Type.",
            "format": "uuid"
          },
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "payType": {
            "type": "integer",
            "description": "Gets or sets the payment type.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditPositionInfo": {
        "type": "object",
        "properties": {
          "benefitFlexCreditRPositionId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for BenefitFlexCreditRPosition.",
            "format": "uuid"
          },
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "positionId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a position.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFlexCreditInfo": {
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Flex Credit.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an organization.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "Gets or sets the name of the template with null-forgiving operator.",
            "nullable": true
          },
          "flexCreditAmount": {
            "type": "number",
            "description": "Gets or sets the amount of flex credit as a decimal value.",
            "format": "double"
          },
          "weeklyHourFilter": {
            "type": "integer",
            "description": "Gets or sets the weekly hour filter for a certain task.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "description": "Gets or sets the starting weekly hour for a task, nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "description": "Gets or sets the maximum number of weekly hours for a task, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "anualSalaryFilter": {
            "type": "integer",
            "description": "Gets or sets the filter for annual salary, allowing for null values.",
            "format": "int32",
            "nullable": true
          },
          "anualSalaryFrom": {
            "type": "number",
            "description": "Gets or sets the annual salary from value as a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "anualSalaryTo": {
            "type": "number",
            "description": "Gets or sets the annual salary upper limit.",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "type": "integer",
            "description": "Gets or sets the service year filter as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "description": "Gets or sets the starting year of service.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "description": "Gets or sets the service year to which the entity belongs.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "type": "integer",
            "description": "Gets or sets the waiting period filter as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "eligibleStates": {
            "type": "string",
            "description": "Gets or sets the eligible states for a certain criteria.",
            "nullable": true
          },
          "eligibleZipCodes": {
            "type": "string",
            "description": "Gets or sets the eligible zip codes for a specific entity.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was created.",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the user who created the entity.",
            "format": "uuid"
          },
          "benefitFlexCreditBenefitPlanGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditBenefitPlanGroupInfo"
            },
            "description": "Gets or sets the list of BenefitFlexCreditBenefitPlanGroupInfo objects representing benefit plan groups for benefit flex credit.",
            "nullable": true
          },
          "benefitFlexCreditCCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditCodeInfo"
            },
            "description": "Gets or sets the list of BenefitFlexCreditCodeInfo objects for BenefitFlexCreditCCodes.",
            "nullable": true
          },
          "benefitFlexCreditLevelBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditLevelBindingInfo"
            },
            "description": "Gets or sets the list of BenefitFlexCreditLevelBindingInfo objects representing the benefit flex credit level bindings.",
            "nullable": true
          },
          "benefitFlexCreditHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditHistoryInfo"
            },
            "description": "Gets or sets the list of BenefitFlexCreditHistoryInfo objects representing the benefit flex credit histories.",
            "nullable": true
          },
          "benefitFlexCreditPayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditPayTypeInfo"
            },
            "description": "Gets or sets the list of BenefitFlexCreditPayTypeInfo objects representing different types of benefit flex credit pay types.",
            "nullable": true
          },
          "benefitFlexCreditPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFlexCreditPositionInfo"
            },
            "description": "Gets or sets the list of BenefitFlexCreditPositionInfo objects representing benefit flex credit positions.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitForm": {
        "required": [
          "formName",
          "formTypeId"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitFormId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit form.",
            "format": "uuid"
          },
          "formTypeId": {
            "type": "integer",
            "description": "Gets or sets the specified enum value for FormType, is of type BenefitFormType.",
            "format": "int32"
          },
          "formName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the form name with a maximum length specified by DataConstants.Length100Characters.\r\nThe input is sanitized to prevent any malicious content."
          },
          "formTemplate": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the form template with a maximum length specified by DataConstants.LengthUrl and sanitized input.",
            "nullable": true
          },
          "planYearStartDateTime": {
            "type": "string",
            "description": "Gets or sets the form PlanYearStartDate.",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the Forn is active ."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitForm": {
        "required": [
          "formName",
          "formTypeId"
        ],
        "type": "object",
        "properties": {
          "formTypeId": {
            "type": "integer",
            "description": "Gets or sets the FormType and property is of type BenefitFormType enum.",
            "format": "int32"
          },
          "formName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the form name with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content."
          },
          "formTemplate": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the form template with a maximum length specified by DataConstants.LengthUrl.",
            "nullable": true
          },
          "planYearStartDateTime": {
            "type": "string",
            "description": "Gets or sets the PlanYearStartDate represented as date.",
            "format": "date-time",
            "nullable": true
          },
          "language": {
            "type": "integer",
            "description": "Gets or sets the language represented as a byte value.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the Form is active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFormInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitFormId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit form.",
            "format": "uuid"
          },
          "formName": {
            "type": "string",
            "description": "Gets or sets the name of the form. This property is required and cannot be null.",
            "nullable": true
          },
          "formTypeId": {
            "type": "integer",
            "description": "Gets or sets the form type as an integer value.",
            "format": "int32"
          },
          "formTemplate": {
            "type": "string",
            "description": "Gets or sets the required form template string.",
            "nullable": true
          },
          "planYearStartDateTime": {
            "type": "string",
            "description": "Gets or sets the Plan Year StartDate of benefit form.",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets the IsActive of benefit form where."
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitFormDowloadInfo": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "base64Data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_StatusCodes": {
        "enum": [
          "200 - OK | No summary available",
          "201 - Created | No summary available",
          "204 - NoContent | No summary available",
          "400 - BadRequest | No summary available",
          "403 - Forbidden | No summary available",
          "404 - NotFound | No summary available",
          "424 - FailedDependency | No summary available"
        ],
        "type": "string"
      },
      "System_ComponentModel_DataAnnotations_ValidationResult": {
        "type": "object",
        "properties": {
          "memberNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BenefitFormDownloadModel": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "output": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormDowloadInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_StatusCodes"
              }
            ],
            "readOnly": true
          },
          "validationResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System_ComponentModel_DataAnnotations_ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BenefitFormFilter": {
        "type": "object",
        "properties": {
          "formIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "formTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "fromDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "toDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitFormListItem": {
        "type": "object",
        "properties": {
          "benefitFormId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit form.",
            "format": "uuid"
          },
          "formName": {
            "type": "string",
            "description": "Gets or sets the name of the form that is required.",
            "nullable": true
          },
          "formType": {
            "type": "string",
            "description": "Gets or sets the type of benefit form.",
            "nullable": true
          },
          "planYearStartDateTime": {
            "type": "string",
            "description": "Gets or sets the Plan Year StartDate of benefit form.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the Status of benefit form.",
            "nullable": true
          },
          "downloadUrl": {
            "type": "string",
            "description": "Gets or sets the download URL for a file. Can be null if no download URL is available.",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "Gets or sets the Status of benefit form.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitFormListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitFormListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_DeductionFrequency": {
        "enum": [
          "0 - Use Employee Pay Frequency | Represents using the employee pay frequency to determine the deduction schedule.",
          "1 - Tweleve Days | Represents a deduction frequency of twelve days within the year.",
          "2 - Twenty Four Days | Represents a deduction frequency of twenty four days within the year.",
          "3 - Twenty Six Days | Represents a deduction frequency of twenty six days within the year.",
          "4 - Forty Eight Days | Represents a deduction frequency of forty eight days within the year.",
          "5 - Fifty Two Days | Represents a deduction frequency of fifty two days within the year.",
          "6 - Year | Represents a yearly deduction frequency, with deductions occurring once per year."
        ],
        "type": "string",
        "description": "Specifies the different deduction frequencies based on the employee pay schedule."
      },
      "BBSI_Benefits_Model_Default_UpdatePayrollSchedule": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "annualDeductions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ],
            "description": "Gets or sets the provided value for AnnualDeductions and property is of type DeductionFrequency enum."
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanInfo": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the required Benefit Plan Id.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "benefitPlanName": {
            "type": "string",
            "description": "Gets or sets the benefit plan name with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "description": "Gets or sets the plan number with a maximum length defined by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the plan year.",
            "format": "int32",
            "nullable": true
          },
          "taxStatusId": {
            "type": "integer",
            "description": "Gets or sets the value of TaxStatusId property is a valid member of the TaxStatus enum value.",
            "format": "int32",
            "nullable": true
          },
          "washRuleCalculationDayId": {
            "type": "integer",
            "description": "Gets or sets the value of WashRuleCalculationDayId property is a valid member of the WashRuleCalculationDay enum value.",
            "format": "int32",
            "nullable": true
          },
          "isCobraEligible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if Cobra is enabled or not."
          },
          "ageCalculationMethodId": {
            "type": "integer",
            "description": "Gets or sets the specified AgeCalculationMonth enum type value to AgeCalculationMonthId property.",
            "format": "int32",
            "nullable": true
          },
          "specificMonthId": {
            "type": "integer",
            "description": "Gets or sets the MonthNames enum value to SpecificMonthId property.",
            "format": "int32",
            "nullable": true
          },
          "w2Reporting": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether W2 reporting is enabled."
          },
          "providerSearchURL": {
            "type": "string",
            "description": "Gets or sets the URL used for searching doctors, with a maximum length defined by DataConstants.LengthUrl.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "status": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets the boolean value which will set Benefit Plan is active or not.",
            "nullable": true
          },
          "billingWashRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the billing wash rule is enabled.",
            "nullable": true
          },
          "employerBillingFrequencyId": {
            "type": "integer",
            "description": "Gets or sets the value of EmployerBilling enum value to EmployerBillingFrequencyId property.",
            "format": "int32",
            "nullable": true
          },
          "preTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the pre-tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "postTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the post tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "deductionDescription": {
            "type": "string",
            "description": "Gets or sets the Deduction Description with a maximum length defined by DataConstants.LengthDescription.",
            "nullable": true
          },
          "billCodeId": {
            "type": "string",
            "description": "Gets or sets the Bill Code Id with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "format": "uuid",
            "nullable": true
          },
          "benefitFormIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the unique identifier of the benefit form.",
            "nullable": true
          },
          "requireInsuranceApplicationId": {
            "type": "integer",
            "description": "Gets or sets the specified ApplicationRequireStatus enum value to RequireInsuranceApplicationId property.",
            "format": "int32",
            "nullable": true
          },
          "childrenAgeLimit": {
            "type": "string",
            "description": "Gets or sets the children age limit with minimum length validation, age range validation, and input sanitization.",
            "nullable": true
          },
          "isBeneficiaryVisible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the beneficiary is visible.",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Comparison Template.",
            "format": "uuid",
            "nullable": true
          },
          "step1StatusId": {
            "type": "integer",
            "description": "Gets or sets the required status for Step 1.",
            "format": "int32",
            "nullable": true
          },
          "step2StatusId": {
            "type": "integer",
            "description": "Gets or sets the required status for Step 2.",
            "format": "int32",
            "nullable": true
          },
          "step3StatusId": {
            "type": "integer",
            "description": "Gets or sets the required status for Step 3.",
            "format": "int32",
            "nullable": true
          },
          "step4StatusId": {
            "type": "integer",
            "description": "Gets or sets the required StepStatus for Step 4.",
            "format": "int32",
            "nullable": true
          },
          "step5StatusId": {
            "type": "integer",
            "description": "Gets or sets the required status for Step 5.",
            "format": "int32",
            "nullable": true
          },
          "finalStatusId": {
            "type": "integer",
            "description": "Gets or sets the final status of current Benefit Plan.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateListItem": {
        "type": "object",
        "properties": {
          "benefitPlanAgeBandRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Age Band Rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "age": {
            "type": "integer",
            "description": "Gets or sets the age of a person.",
            "format": "int32"
          },
          "netRate": {
            "type": "number",
            "description": "Gets or sets the net rate value as a decimal.",
            "format": "double"
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "type": "integer",
            "description": "Gets or sets the type of employer share as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "employeeShare": {
            "type": "number",
            "description": "Gets or sets the employee's share of a financial amount.",
            "format": "double"
          },
          "loginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a login history record.",
            "format": "uuid"
          },
          "markupShare": {
            "type": "number",
            "description": "Gets or sets the markup share as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "type": "integer",
            "description": "Gets or sets the markup share type as a byte value.",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is deleted.\r\nDefault value is false."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_EmployerShareTypes": {
        "enum": [
          "0 - Percentage | Represents a share type where the employer contribution is based on a percentage.",
          "1 - Amount | Represents a share type where the employer contribution is based on a fixed amount."
        ],
        "type": "string",
        "description": "Represents the types of employer share options for benefits."
      },
      "BBSI_Benefits_Database_MarkupShareTypes": {
        "enum": [
          "123 - Percentage | Represents a markup share type where the markup is based on a percentage.",
          "124 - Amount | Represents a markup share type where the markup is based on a fixed amount."
        ],
        "type": "string",
        "description": "Represents the types of markup share options for benefits or services."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanAgeBandRate": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanAgeBandRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Age Band Rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "age": {
            "type": "integer",
            "description": "Gets or sets the age of a person.",
            "format": "int32"
          },
          "netRate": {
            "type": "number",
            "description": "Gets or sets the net rate value as a decimal.",
            "format": "double"
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerShareTypes"
              }
            ],
            "description": "Gets or sets the EmployerShareType and property is of type EmployerShareTypes enum.",
            "nullable": true
          },
          "markupShare": {
            "type": "number",
            "description": "Gets or sets the markup share as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets the enum type of MarkupShareTypes, is used for the MarkupShareType property."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is deleted.\r\nDefault value is false."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanAgeBandRate": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "age": {
            "type": "integer",
            "description": "Gets or sets the age of a person.",
            "format": "int32"
          },
          "netRate": {
            "type": "number",
            "description": "Gets or sets the net rate as a decimal value.",
            "format": "double"
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerShareTypes"
              }
            ],
            "description": "Gets or sets the EmployerShareType property and is of type EmployerShareTypes enum.",
            "nullable": true
          },
          "employeeShare": {
            "type": "number",
            "description": "Gets or sets the employee's share of a financial amount.",
            "format": "double"
          },
          "markupShare": {
            "type": "number",
            "description": "Gets or sets the markup share as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets the enum type of MarkupShareTypes is used for the MarkupShareType property."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanAgeBandRateInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanAgeBandRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Age Band Rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "age": {
            "type": "integer",
            "description": "Gets or sets the age of a person.",
            "format": "int32"
          },
          "netRate": {
            "type": "number",
            "description": "Gets or sets the net rate value as a decimal.",
            "format": "double"
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "type": "integer",
            "description": "Gets or sets the type of employer share as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "employeeShare": {
            "type": "number",
            "description": "Gets or sets the employee's share of a financial amount.",
            "format": "double"
          },
          "loginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a login history record.",
            "format": "uuid"
          },
          "markupShare": {
            "type": "number",
            "description": "Gets or sets the markup share as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "type": "integer",
            "description": "Gets or sets the markup share type as a byte value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanAgeBandRate": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the required Benefit Plan Id.",
            "format": "uuid"
          },
          "benefitPlanAgeBandRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanAgeBandRate"
            },
            "description": "Gets or sets the list of UpdateBenefitPlanAgeBandRate objects representing the age band rates for a benefit plan.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_RateInputFrequency": {
        "enum": [
          "0 - Annually | Represents an annual rate input frequency, where rates are applied once a year.",
          "1 - PayPerPeriod | Represents a rate input frequency based on pay periods, where rates are applied per pay cycle.",
          "2 - Monthly | Represents a monthly rate input frequency, where rates are applied on a monthly basis."
        ],
        "type": "string",
        "description": "Specifies the different frequencies at which rates can be applied."
      },
      "BBSI_Benefits_Database_DeductionTypes": {
        "enum": [
          "0 - Static | Represents a static deduction type, which does not change over time.",
          "1 - Dynamic | Represents a dynamic deduction type, which can change based on certain conditions or variables."
        ],
        "type": "string",
        "description": "Specifies the different types of deductions that can be applied."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanCalculator": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of an object.",
            "format": "int32"
          },
          "benefitCafeteriaPlanRateId": {
            "type": "integer",
            "description": "Gets or sets the ID of the Benefit Cafeteria Plan Rate.",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "description": "Gets or sets the category of an item. The category cannot be null.",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "Gets or sets the sort order value for an item.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanRateDetail": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of an object.",
            "format": "int32"
          },
          "benefitCafeteriaPlanRateId": {
            "type": "integer",
            "description": "Gets or sets the ID of the Benefit Cafeteria Plan Rate.",
            "format": "int32"
          },
          "coverageId": {
            "type": "integer",
            "description": "Gets or sets the coverage ID.",
            "format": "int32"
          },
          "coverageRowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a coverage row.",
            "format": "uuid"
          },
          "maxLimitation": {
            "type": "number",
            "description": "Gets or sets the maximum limitation value.",
            "format": "double"
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the employee's contribution amount as a decimal value.",
            "format": "double"
          },
          "employeeContributionNew": {
            "type": "number",
            "description": "Gets or sets the new employee contribution amount as a decimal value.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution amount.",
            "format": "double"
          },
          "maxLimitationOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum limitation for old age, which is a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "employeeContributionOldAge": {
            "type": "number",
            "description": "Gets or sets the employee's contribution to old age benefits.",
            "format": "double",
            "nullable": true
          },
          "employeeContributionOldAgeNew": {
            "type": "number",
            "description": "Gets or sets the employee's contribution to the old age benefit in a new system.",
            "format": "double",
            "nullable": true
          },
          "employerContributionOldAge": {
            "type": "number",
            "description": "Gets or sets the employer's contribution to old age benefits as a nullable decimal value.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanCafeteriaRates": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "rateFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateInputFrequency"
              }
            ],
            "description": "Gets or sets the RateFrequency and property is of type RateInputFrequency enum."
          },
          "employerDeductionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionTypes"
              }
            ],
            "description": "Gets or sets the EmployerDeductionType and property is of type DeductionTypes enum."
          },
          "employeeDeductionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionTypes"
              }
            ],
            "description": "Gets or sets the EmployeeDeductionType and property is of type DeductionTypes enum."
          },
          "isCalculatorEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the calculator is enabled."
          },
          "isConfirmationEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether confirmation is enabled."
          },
          "agreementText": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the agreement text with a maximum length defined by DataConstants.LengthTextArea.",
            "nullable": true
          },
          "isDirectDepositEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether direct deposit is enabled for the user."
          },
          "isDirectDepositRequired": {
            "type": "boolean",
            "description": "Gets or sets a boolean value indicating if direct deposit is required.\r\nThis property can be null, representing that the requirement is not specified.",
            "nullable": true
          },
          "benefitCafeteriaPlanCalculators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanCalculator"
            },
            "description": "Gets or sets the list of BenefitPlanCafeteriaPlanCalculator objects representing the cafeteria plan calculators for a benefit plan.",
            "nullable": true
          },
          "benefitCafeteriaPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanRateDetail"
            },
            "description": "Gets or sets the list of BenefitPlanCafeteriaPlanRateDetail for the BenefitCafeteriaPlanRateDetails.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanCafeteriaRates": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "rateFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateInputFrequency"
              }
            ],
            "description": "Gets or sets the RateFrequency and property is of type RateInputFrequency enum."
          },
          "employerDeductionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionTypes"
              }
            ],
            "description": "Gets or sets the value of EmployerDeductionType, property is a valid member of the DeductionTypes enum."
          },
          "employeeDeductionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionTypes"
              }
            ],
            "description": "Gets or sets the EmployeeDeductionType and property is of type DeductionTypes enum."
          },
          "isCalculatorEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the calculator is enabled."
          },
          "isConfirmationEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether confirmation is enabled."
          },
          "agreementText": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the agreement text with a maximum length defined by DataConstants.LengthTextArea.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "isDirectDepositEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether direct deposit is enabled for the user."
          },
          "isDirectDepositRequired": {
            "type": "boolean",
            "description": "Gets or sets a boolean value indicating if direct deposit is required.\r\nThis property can be null, representing that the requirement is not specified.",
            "nullable": true
          },
          "benefitCafeteriaPlanCalculators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanCalculator"
            },
            "description": "Gets or sets the list of BenefitPlanCafeteriaPlanCalculator objects for the BenefitCafeteriaPlanCalculators property.",
            "nullable": true
          },
          "benefitCafeteriaPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanRateDetail"
            },
            "description": "Gets or sets the list of BenefitPlanCafeteriaPlanRateDetail for the BenefitCafeteriaPlanRateDetails.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Requesting to generate TypeScript code based on the provided C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCafeteriaRateInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Id.",
            "format": "int32"
          },
          "rateFrequency": {
            "type": "integer",
            "description": "Gets or sets the rate frequency in bytes.",
            "format": "int32"
          },
          "employerDeductionType": {
            "type": "integer",
            "description": "Gets or sets the type of deduction for the employer.",
            "format": "int32"
          },
          "employeeDeductionType": {
            "type": "integer",
            "description": "Gets or sets the type of deduction for an employee, represented as a byte value.",
            "format": "int32"
          },
          "isCalculatorEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the calculator is enabled."
          },
          "isConfirmationEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether confirmation is enabled."
          },
          "agreementText": {
            "type": "string",
            "description": "Gets or sets the agreement text with a default value of an empty string.",
            "nullable": true
          },
          "isDirectDepositEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether direct deposit is enabled for the user."
          },
          "isDirectDepositRequired": {
            "type": "boolean",
            "description": "Gets or sets a boolean value indicating if direct deposit is required.\r\nThis property can be null, representing that the requirement is not specified.",
            "nullable": true
          },
          "benefitCafeteriaPlanCalculators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanCalculator"
            },
            "description": "Gets or sets the list of BenefitPlanCafeteriaPlanCalculator objects for the Benefit Cafeteria Plan Calculators.",
            "nullable": true
          },
          "benefitCafeteriaPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanRateDetail"
            },
            "description": "Gets or sets the list of BenefitPlanCafeteriaPlanRateDetail for the BenefitCafeteriaPlanRateDetails.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFields": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanComparisonTemplateFieldId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Comparison Template Field.",
            "format": "uuid"
          },
          "fieldLabel": {
            "type": "string",
            "description": "Gets or sets the field label with a maximum length specified by DataConstants.LengthItemName.",
            "nullable": true
          },
          "fieldValue": {
            "type": "string",
            "description": "Gets or sets the field value with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "fieldOrder": {
            "type": "integer",
            "description": "Gets or sets the field order as a byte value.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanComparisonTemplate": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Comparison Template.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the Name property with a maximum length defined by DataConstants.Length100Characters and sanitized input.",
            "nullable": true
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Group.",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not.",
            "nullable": true
          },
          "customComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFields"
            },
            "description": "Gets or sets the custom comparison summary template fields for benefits.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonTemplate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the item with a maximum length defined by DataConstants.Length100Characters.",
            "nullable": true
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the required Benefit Plan Group Id.",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether indicating whether the object is a active or not.",
            "nullable": true
          },
          "customComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFields"
            },
            "description": "Gets or sets the custom comparison summary template fields for benefits.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Comparison Template.",
            "format": "uuid"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Name property with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is a active or not."
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the Benefit Group ID as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "customComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFields"
            },
            "description": "Gets or sets the custom comparison summary template fields for benefits.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanComparisonPlan": {
        "type": "object",
        "properties": {
          "customComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFields"
            },
            "description": "Gets or sets the custom comparison summary template fields for benefits.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanComparisonPlanFinshInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Comparison Template Id.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Name property with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "isSystemDefault": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a boolean value indicating whether the object is a system default."
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "customComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFields"
            },
            "description": "Gets or sets the custom comparison summary template fields for benefits.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanSummaryIdInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit.",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Comparison Template Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFilter": {
        "type": "object",
        "properties": {
          "benefitPlanTypeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isActive": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateListItem": {
        "type": "object",
        "properties": {
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Comparison Template Id.",
            "format": "uuid"
          },
          "planName": {
            "type": "string",
            "description": "Gets or sets the Name property with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the Name property with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "statusName": {
            "type": "string",
            "description": "Gets or sets the name is active or not.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanComparisonSummaryFields": {
        "type": "object",
        "properties": {
          "benefitPlanComparisonTemplateFieldId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Comparison Template Field.",
            "format": "uuid"
          },
          "fieldValue": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the field value.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_SubmitBenefitPlanComparisonSummary": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Comparison Template.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "customComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonSummaryFields"
            },
            "description": "Gets or sets the custom comparison summary template fields for benefits.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCompatibilityListItem": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit with an initial value of an empty string.",
            "nullable": true
          },
          "compatibilityType": {
            "type": "integer",
            "description": "Gets or sets the compatibility type as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "isChecked": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is checked."
          },
          "benefitPlanCompatibilityId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Compatibility Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem": {
        "type": "object",
        "properties": {
          "benefitPlanCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Coverage.",
            "format": "uuid"
          },
          "benefitCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit coverage.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Gets or sets the code as a string. Defaults to an empty string.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of an object. Defaults to an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverage": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Plan Coverage.",
            "format": "uuid"
          },
          "benefitCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit coverage.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanCoverage": {
        "required": [
          "benefitCoverageId",
          "orderNumber"
        ],
        "type": "object",
        "properties": {
          "benefitCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit coverage.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCoverageInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Coverage.",
            "format": "uuid"
          },
          "benefitCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Coverage.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Gets or sets the required code string.",
            "nullable": true
          },
          "tier": {
            "type": "string",
            "description": "Gets or sets the nullable tier string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCoverageSwapOrder": {
        "type": "object",
        "properties": {
          "benefitPlanCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Plan Coverage.",
            "format": "uuid"
          },
          "swapBenefitPlanCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for swapping benefit plan coverage.",
            "format": "uuid"
          },
          "newOrderNumber": {
            "type": "integer",
            "description": "Gets or sets the new order number.",
            "format": "int32"
          },
          "swapOrderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number used for swapping elements.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanCustomGroup": {
        "type": "object",
        "properties": {
          "groupName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the group name with a maximum length defined by DataConstants.LengthItemName.",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the organization.",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "description": "Gets or sets the ID of the user who created the entity. Can be null.",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is deleted."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeTypeDto": {
        "type": "object",
        "properties": {
          "benefitPlanEmployeeTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan eligibility employee type record.",
            "format": "uuid"
          },
          "employeeTypeId": {
            "type": "integer",
            "description": "Gets or sets the selected Employee Type integer value.",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the employee type is active.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeeStatusDto": {
        "type": "object",
        "properties": {
          "benefitPlanEmployeeStatusId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan eligibility employee status record.",
            "format": "uuid"
          },
          "employeeStatusId": {
            "type": "integer",
            "description": "Gets or sets the selected Employee Status integer value.",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the employee status is active.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanEligibility": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "employeeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeTypeDto"
            },
            "description": "Gets or sets the list of Employee Types.",
            "nullable": true
          },
          "employeeStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeStatusDto"
            },
            "description": "Gets or sets the list of Employee Statuses.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanEligibility": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "employeeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeTypeDto"
            },
            "description": "Gets or sets the list of Employee Types.",
            "nullable": true
          },
          "employeeStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeStatusDto"
            },
            "description": "Gets or sets the list of Employee Statuses.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BenefitPlanEligibilityInfo": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "employeeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeTypeDto"
            },
            "description": "Gets or sets the list of Employee Types.",
            "nullable": true
          },
          "employeeStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeStatusDto"
            },
            "description": "Gets or sets the list of Employee Statuses.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BenefitPlanFlatRateDetailDto": {
        "type": "object",
        "properties": {
          "benefitPlanFlatRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate Detail.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanFlatRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate.",
            "format": "uuid"
          },
          "benefitPlanCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Coverage.",
            "format": "uuid"
          },
          "netTotal": {
            "type": "number",
            "description": "Gets or sets the net total value, which is a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "type": "integer",
            "description": "Gets or sets the type of employer share.",
            "format": "int32"
          },
          "markupShare": {
            "type": "number",
            "description": "Gets or sets the markup share as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "type": "integer",
            "description": "Gets or sets the markup share type as a byte value.",
            "format": "int32"
          },
          "orderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Gets or sets the code as a string. Defaults to an empty string.",
            "nullable": true
          },
          "employeePortion": {
            "type": "number",
            "description": "Gets or sets the employee's portion of a decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerCost": {
            "type": "number",
            "description": "Gets the employer cost based on the net total, employer share, markup share, and their respective types.",
            "format": "double",
            "readOnly": true
          },
          "employeeCost": {
            "type": "number",
            "description": "Gets the total cost of an employee, taking into account the net total, markup share, and employer cost.",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanFlatRateListItem": {
        "type": "object",
        "properties": {
          "benefitPlanFlatRateId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "ageBand": {
            "type": "string",
            "nullable": true
          },
          "tierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "employeeTierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isSelected": {
            "type": "boolean"
          },
          "allowTierEdit": {
            "type": "boolean"
          },
          "benefitPlanFlatRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFlatRateDetailDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanFlatRateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFlatRateListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateUpdateBenefitPlanFlatRateDetail": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanFlatRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate Detail.",
            "format": "uuid",
            "nullable": true
          },
          "benefitCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Coverage.",
            "format": "uuid"
          },
          "ageRangeFrom": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthlyPremium": {
            "type": "number",
            "description": "Gets or sets the net total value, which is a nullable decimal.",
            "format": "double"
          },
          "markup": {
            "type": "number",
            "description": "Gets or sets the markup as a nullable decimal value.",
            "format": "double"
          },
          "markupTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets the specified Enum type is of type MarkupShareTypes."
          },
          "monthlyBilledRates": {
            "type": "number",
            "description": "Gets or sets the monthly billed rates value, which is a nullable decimal.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateUpdateBenefitPlanFlatRateDetailsOverride": {
        "type": "object",
        "properties": {
          "benefitPlanFlatRateDetailsOverrideId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate Details Override.",
            "format": "uuid"
          },
          "benefitPlanFlatRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate.",
            "format": "uuid"
          },
          "benefitPlanCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Coverage.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerShareTypes"
              }
            ],
            "description": "Gets or sets the value of EmployerShareType and property is a valid value from the EmployerShareTypes enum."
          },
          "markupShare": {
            "type": "number",
            "description": "Gets or sets the markup share as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets the specified enum value for MarkupShareType belongs to the MarkupShareTypes enum type."
          },
          "orderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number.",
            "format": "int32"
          },
          "code": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the code with a maximum length defined by DataConstants.LengthCode and sanitized input.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanFlatRate": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanFlatRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan flat rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "rateTier": {
            "pattern": "^(?:\\d{1,10}|\\d{1,9}\\.\\d{1}|\\d{1,8}\\.\\d{2}|\\d{1,7}\\.\\d{3})$",
            "type": "number",
            "description": "Gets or sets the rate tier number with up to 3 decimal places.",
            "format": "double"
          },
          "isAgeBanded": {
            "type": "boolean"
          },
          "planFlatRateItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateUpdateBenefitPlanFlatRateDetail"
            },
            "nullable": true
          },
          "benefitPlanFlatRateDetailsOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateUpdateBenefitPlanFlatRateDetailsOverride"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanFlatRate": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan flat rate.",
            "format": "uuid"
          },
          "rateTier": {
            "pattern": "^(?:\\d{1,10}|\\d{1,9}\\.\\d{1}|\\d{1,8}\\.\\d{2}|\\d{1,7}\\.\\d{3})$",
            "type": "number",
            "description": "Gets or sets the rate tier number with up to 3 decimal places.",
            "format": "double"
          },
          "isAgeBanded": {
            "type": "boolean"
          },
          "planFlatRateItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateUpdateBenefitPlanFlatRateDetail"
            },
            "description": "Gets or sets the rate amount with up to 2 decimal places.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCoverageFlatRateDetailInfo": {
        "type": "object",
        "properties": {
          "benefitPlanFlatRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate Detail.",
            "format": "uuid"
          },
          "benefitCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Coverage.",
            "format": "uuid"
          },
          "planCoverageId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a Benefit Plan Coverage.",
            "format": "int32"
          },
          "ageRangeFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverageCode": {
            "type": "string",
            "description": "Gets or sets the coverage code.",
            "nullable": true
          },
          "monthlyPremium": {
            "type": "number",
            "description": "Gets or sets the net total value, which is a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "markup": {
            "type": "number",
            "description": "Gets or sets the markup as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupTypeId": {
            "type": "integer",
            "description": "Gets or sets the specified Enum type is of type MarkupShareTypes.",
            "format": "int32",
            "nullable": true
          },
          "monthlyBilledRates": {
            "type": "number",
            "description": "Gets or sets the monthly billed rates value, which is a nullable decimal.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanFlatRateInfo": {
        "type": "object",
        "properties": {
          "benefitPlanFlatRateId": {
            "type": "string",
            "format": "uuid"
          },
          "rateTier": {
            "type": "number",
            "format": "double"
          },
          "isAgeBanded": {
            "type": "boolean"
          },
          "planFlatRateItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCoverageFlatRateDetailInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_BatchUpdateBenefitPlanFlatRate": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanFlatRate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_SalaryMultiplierType": {
        "enum": [
          "54 - NA | Represents a non applicable or default salary index.",
          "55 - One | Represents a salary index of one.",
          "56 - OneAndHalf | Represents a salary index of one and a half.",
          "57 - Two | Represents a salary index of two.",
          "58 - TwoAndHalf | Represents a salary index of two and a half.",
          "59 - Three | Represents a salary index of three.",
          "60 - Four | Represents a salary index of four.",
          "61 - Five | Represents a salary index of five.",
          "62 - Six | Represents a salary index of six.",
          "63 - Seven | Represents a salary index of seven.",
          "64 - Eight | Represents a salary index of eight.",
          "65 - Nine | Represents a salary index of nine.",
          "66 - Ten | Represents a salary index of ten.",
          "67 - Flat | Represents a flat salary index with no multiplication."
        ],
        "type": "string",
        "description": "Specifies the different salary index types used for salary adjustments or scales."
      },
      "BBSI_Benefits_Database_RoundToNearestType": {
        "enum": [
          "71 - 0 (Not Required) | Represents no rounding, i.e., rounding is not required.",
          "72 - 10 (Ten) | Represents rounding to the nearest ten.",
          "73 - 100 (Hundred) | Represents rounding to the nearest hundred.",
          "74 - 1000 (Thousand) | Represents rounding to the nearest thousand.",
          "75 - 10000 (Thousand) | Represents rounding to the nearest ten thousand."
        ],
        "type": "string",
        "description": "Specifies the different rounding options for numerical values."
      },
      "BBSI_Benefits_Database_AgeCalculationFrequency": {
        "enum": [
          "1 - Till Effective | Represents age calculation until the effective date of the plan or benefit.",
          "2 - Till Plan Start Date | Represents age calculation until the start date of the plan.",
          "3 - Till Given Date | Represents age calculation until a given date specified by the system or user.",
          "87 - Plan Anniversary | Represents Plan Anniversary.",
          "88 - 1st of the Month Following Employee's Date of Birth | Represents 1st of the Month Following Employee's Date of Birth."
        ],
        "type": "string",
        "description": "Specifies the different methods of calculating age for benefits or eligibility."
      },
      "BBSI_Benefits_Database_CoverageRoundingRuleType": {
        "enum": [
          "68 - No | No rounding is applied.",
          "69 - Up | Rounds the value up to the nearest specified unit.",
          "70 - Down | Rounds the value down to the nearest specified unit."
        ],
        "type": "string",
        "description": "Specifies the rounding direction options for numerical values."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateDetails": {
        "required": [
          "maxCoverageAmount",
          "monthlyPremium",
          "rateBillingUnit"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of an object.",
            "format": "int32"
          },
          "benefitPlanGroupLifeRateID": {
            "type": "integer",
            "description": "Gets or sets the ID of the Benefit Plan Group Life Rate.",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanGroupLifeRateDetailId": {
            "type": "string",
            "description": "Gets or sets the ID of the Benefit Plan Group Life Rate.",
            "format": "uuid",
            "nullable": true
          },
          "ageRangeFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age band value.",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "type": "integer",
            "description": "Gets or sets the upper age band value.",
            "format": "int32",
            "nullable": true
          },
          "coverageIncrement": {
            "type": "number",
            "description": "Gets or sets the unit increment value, which is a nullable double.",
            "format": "double",
            "nullable": true
          },
          "minCoverageAmount": {
            "type": "number",
            "description": "Gets or sets the minimum coverage value as a nullable double.",
            "format": "double",
            "nullable": true
          },
          "maxCoverageAmount": {
            "type": "number",
            "description": "Gets or sets the maximum coverage value, which is a nullable double.",
            "format": "double"
          },
          "applicationRequire": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the application requires a certain condition to be met.",
            "nullable": true
          },
          "guaranteedIssueLimit": {
            "type": "number",
            "description": "Gets or sets the required amount for the application, which can be null.",
            "format": "double",
            "nullable": true
          },
          "rateBillingUnit": {
            "type": "number",
            "description": "Gets or sets the number of units, which is nullable and can hold a double value.",
            "format": "double"
          },
          "monthlyPremium": {
            "type": "number",
            "description": "Gets or sets the monthly premium rate as a nullable double value.",
            "format": "double"
          },
          "markupAmount": {
            "type": "number",
            "description": "Gets or sets the markup amount, which is a nullable double value representing the additional amount added to the base price.",
            "format": "double",
            "nullable": true
          },
          "isLateEntrant": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateReductionSchedules": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of an object.",
            "format": "int32"
          },
          "benefitPlanGroupLifeRateID": {
            "type": "integer",
            "description": "Gets or sets the ID of the Benefit Plan Group Life Rate.",
            "format": "int32"
          },
          "ageBandFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age band value.",
            "format": "int32"
          },
          "ageBandTo": {
            "type": "integer",
            "description": "Gets or sets the upper age band value.",
            "format": "int32"
          },
          "reductionPercent": {
            "type": "number",
            "description": "Gets or sets the reduction percentage as a nullable double value.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanGroupLifeRates": {
        "required": [
          "coverageRoundingRuleId"
        ],
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanGroupLifeRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "salaryMultiplierId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_SalaryMultiplierType"
              }
            ],
            "description": "Gets or sets SalaryMultiplierId.",
            "nullable": true
          },
          "roundToNearestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RoundToNearestType"
              }
            ],
            "description": "Gets or sets the RoundToNearestId.",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationFrequency"
              }
            ],
            "description": "Gets or sets the specified enum type is of type AgeCalculation.",
            "nullable": true
          },
          "ageCalculationDate": {
            "type": "string",
            "description": "Gets or sets the date used for age calculation.",
            "format": "date-time",
            "nullable": true
          },
          "coverageRoundingRuleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CoverageRoundingRuleType"
              }
            ],
            "description": "Gets or sets the Round property and is of type RoundType enum."
          },
          "applicationForm": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the application form URL with a maximum length defined by DataConstants.LengthUrl.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "dependentCoverageLimit": {
            "type": "number",
            "description": "Gets or sets the maximum electable coverage percent.",
            "format": "double",
            "nullable": true
          },
          "useSpouseAge": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean indicating whether to use spouse's age.",
            "nullable": true
          },
          "isLateEntrant": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of the late entrant in minutes.\r\nThis property allows null values.",
            "format": "int32",
            "nullable": true
          },
          "groupLifeRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateDetails"
            },
            "description": "Gets or sets the list of BenefitPlanGroupLifeRateDetails for a group life rate.",
            "nullable": true
          },
          "reductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateReductionSchedules"
            },
            "description": "Gets or sets the list of BenefitPlanGroupLifeRateReductionSchedules for rate reduction schedules.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_RateTypes": {
        "enum": [
          "76 - NA | Represents a default or no rate type.",
          "77 - Flat Rates | Represents a flat rate type, where a fixed rate is applied across all eligible employees.",
          "78 - Age Banded Rates | Represents an age banded rate type, where rates vary based on the age of the employee.",
          "79 - STD Rates | Represents short term disability (STD) rates applied for benefit coverage.",
          "80 - LTD Rates | Represents long term disability (LTD) rates applied for benefit coverage.",
          "81 - Cafeteria Rates | Represents cafeteria plan rates, where employees have a flexible benefits plan to choose from.",
          "82 - Group Life Employee Rates | Represents group life insurance rates for employee coverage.",
          "83 - Group Life Spouse Rates | Represents group life insurance rates for spouse coverage.",
          "84 - Group Life Child Rates | Represents group life insurance rates for child coverage.",
          "85 - Group Life Employer Paid Rates | Represents group life insurance rates where the employer pays the premiums for the employee.",
          "86 - 401k Rates | Represents 401k plan contribution rates."
        ],
        "type": "string",
        "description": "Specifies the different rate types for benefit plans."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanGroupLifeRates": {
        "required": [
          "benefitPlanId",
          "coverageRoundingRuleId",
          "selectedRateTypeId"
        ],
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "salaryMultiplierId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_SalaryMultiplierType"
              }
            ],
            "description": "Gets or sets the Salary Multiplier.",
            "nullable": true
          },
          "roundToNearestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RoundToNearestType"
              }
            ],
            "description": "Gets or sets the RoundToNearest property.",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationFrequency"
              }
            ],
            "description": "Gets or sets the specified enum type is of type AgeCalculation.",
            "nullable": true
          },
          "ageCalculationDate": {
            "type": "string",
            "description": "Gets or sets the date used for calculating age.",
            "format": "date-time",
            "nullable": true
          },
          "coverageRoundingRuleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CoverageRoundingRuleType"
              }
            ],
            "description": "Gets or sets the Round property and is of type RoundType enum."
          },
          "applicationForm": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the application form URL with a maximum length defined by DataConstants.LengthUrl.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "dependentCoverageLimit": {
            "type": "number",
            "description": "Gets or sets the maximum electable coverage percentage.",
            "format": "double",
            "nullable": true
          },
          "useSpouseAge": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean indicating whether to use the spouse's age.",
            "nullable": true
          },
          "selectedRateTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets or sets the selected rate type is of the specified enum type RateTypes."
          },
          "isLateEntrant": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of the late entrant in minutes.\r\nThis property allows null values.",
            "format": "int32",
            "nullable": true
          },
          "groupLifeRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateDetails"
            },
            "description": "Gets or sets the list of BenefitPlanGroupLifeRateDetails for a group life rate.",
            "nullable": true
          },
          "reductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateReductionSchedules"
            },
            "description": "Gets or sets the list of BenefitPlanGroupLifeRateReductionSchedules for rate reduction schedules.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitGroupLifeRatesInfo": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanGroupLifeRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan ID.",
            "format": "uuid"
          },
          "salaryMultiplierId": {
            "type": "integer",
            "description": "Gets or sets the salary index as a byte value.",
            "format": "int32",
            "nullable": true
          },
          "roundToNearestId": {
            "type": "integer",
            "description": "Gets or sets the byte value to round to the nearest whole number.",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "type": "integer",
            "description": "Gets or sets the age calculation type represented as a byte value.",
            "format": "int32",
            "nullable": true
          },
          "coverageRoundingRuleId": {
            "type": "integer",
            "description": "Gets or sets the value of the Round property as a byte data type.",
            "format": "int32",
            "nullable": true
          },
          "applicationForm": {
            "type": "string",
            "description": "Gets or sets the application form as a string. Default value is an empty string.",
            "nullable": true
          },
          "dependentCoverageLimit": {
            "type": "number",
            "description": "Gets or sets the maximum electable coverage percentage.",
            "format": "double",
            "nullable": true
          },
          "useSpouseAge": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean indicating whether to use the spouse's age.",
            "nullable": true
          },
          "isLateEntrant": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late.",
            "nullable": true
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of a late entrant, represented as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "groupLifeRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateDetails"
            },
            "description": "Gets or sets the list of BenefitPlanGroupLifeRateDetails for a group life rate.",
            "nullable": true
          },
          "reductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanGroupLifeRateReductionSchedules"
            },
            "description": "Gets or sets the list of BenefitPlanGroupLifeRateReductionSchedules for rate reduction schedules.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_ColumnNames": {
        "enum": [
          "0 - Company Id | Represents the company ID column.",
          "1 - Benefit Name | Represents the benefit name column.",
          "2 - Description | Represents the description of the benefit.",
          "3 - Benefit Group | Represents the benefit group column.",
          "4 - Plan Number | Represents the plan number column.",
          "5 - Deduction Description | Represents the deduction description column.",
          "6 - Benefit Explanation | Represents the benefit explanation column.",
          "7 - Search Doctor Url | Represents the URL to search for doctors related to the benefit.",
          "8 - Apply Flexible Credit | Represents the column to apply flexible credits to benefits.",
          "9 - Show On Cobra | Represents the column for whether to show the benefit on Cobra.",
          "10 - Beneficiary Required | Represents the column for whether a beneficiary is required for the benefit.",
          "11 - Show Beneficiary | Represents the column for showing the beneficiary associated with the benefit.",
          "12 - Benefit Custom Message | Represents the column for custom messages related to the benefit.",
          "13 - Insurance Application | Represents the insurance application column.",
          "14 - Require Application Status | Represents the column for the required application status.",
          "15 - Children Age Limit | Represents the column for children age limit in the benefit plan.",
          "16 - Full Time Student Age Limit | Represents the column for the full time student age limit in the benefit plan.",
          "17 - Benefit Duration | Represents the column for the benefit duration.",
          "18 - Benefit Eligibility Rule | Represents the column for the benefit eligibility rule.",
          "19 - Deduction Code | Represents the column for the deduction code.",
          "20 - Number Of Deductions | Represents the column for the number of deductions.",
          "21 - Benefit Plan Coverages | Represents the column for the benefit plan coverages.",
          "22 - Benefit Plan Rates | Represents the column for the benefit plan rates.",
          "23 - Benefit Plan Comparison Summary | Represents the column for the benefit plan comparison summary.",
          "24 - Compatible Plans | Represents the column for compatible benefit plans.",
          "25 - In-Compatible Plans | Represents the column for incompatible benefit plans.",
          "26 - Step1 Status | Represents the status of step 1 in the process.",
          "27 - Step2 Status | Represents the status of step 2 in the process.",
          "28 - Step3 Status | Represents the status of step 3 in the process.",
          "29 - Step4 Status | Represents the status of step 4 in the process.",
          "30 - Step5 Status | Represents the status of step 5 in the process."
        ],
        "type": "string",
        "description": "Specifies the column names used in benefit related data."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanHistoryListItem": {
        "type": "object",
        "properties": {
          "benefitPlanHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the benefit plan history.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Id.",
            "format": "int32"
          },
          "stepNumber": {
            "type": "integer",
            "description": "Gets or sets the step number as a byte value.",
            "format": "int32"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ],
            "description": "Gets or sets the type of change for a specific object."
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ColumnNames"
              }
            ],
            "description": "Gets or sets the column name."
          },
          "oldValue": {
            "type": "string",
            "description": "Gets or sets the old value, default value is an empty string.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "Gets or sets the new value, default value is an empty string.",
            "nullable": true
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          },
          "uLoginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the user login history.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanHistoryListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanHistoryListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanHistory": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan History.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Id.",
            "format": "int32"
          },
          "stepNumber": {
            "type": "integer",
            "description": "Gets or sets the step number as a byte value.",
            "format": "int32"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ],
            "description": "Gets or sets the type of change for a specific object."
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ColumnNames"
              }
            ],
            "description": "Gets or sets the column name for a specific property."
          },
          "oldValue": {
            "type": "string",
            "description": "Gets or sets the old value, initialized as an empty string.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "Gets or sets the new value, initialized as an empty string.",
            "nullable": true
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          },
          "uLoginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the user login history.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanHistory": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Id.",
            "format": "int32"
          },
          "stepNumber": {
            "type": "integer",
            "description": "Gets or sets the step number as a byte value.",
            "format": "int32"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ],
            "description": "Gets or sets the type of change for a specific entity."
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ColumnNames"
              }
            ],
            "description": "Gets or sets the column name for a specific property."
          },
          "oldValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the old value with a maximum length defined by DataConstants.LengthHistoryValueInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "newValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the new value with a maximum length defined by DataConstants.LengthHistoryValueInput.",
            "nullable": true
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          },
          "uLoginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the user login history.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanHistoryInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan History.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Id.",
            "format": "int32"
          },
          "stepNumber": {
            "type": "integer",
            "description": "Gets or sets the step number as a byte value.",
            "format": "int32"
          },
          "changeType": {
            "type": "integer",
            "description": "Gets or sets the byte value representing the change type.",
            "format": "int32"
          },
          "columnName": {
            "type": "integer",
            "description": "Gets or sets the value of the column as a byte.",
            "format": "int32"
          },
          "oldValue": {
            "type": "string",
            "description": "Gets or sets the old value, initialized as an empty string.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "Gets or sets the value of the NewValue property, initialized to an empty string.",
            "nullable": true
          },
          "changedDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was last changed.",
            "format": "date-time"
          },
          "uLoginHistoryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a user login history record.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Database_RateBasedOnType": {
        "enum": [
          "89 - Salary | No rounding is applied.",
          "90 - Coverage | Rounds the value up to the nearest specified unit."
        ],
        "type": "string",
        "description": "Specifies the rounding direction options for numerical values."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanLtdRateDetails": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanLtdRateDetailId": {
            "type": "string",
            "description": "Gets or sets the Id of an object.",
            "format": "uuid"
          },
          "percentOfMonthlySalary": {
            "type": "number",
            "description": "Gets or sets the percentage of monthly salary.",
            "format": "double"
          },
          "maximumMonthlySalary": {
            "type": "number",
            "description": "Gets or sets the maximum monthly salary.",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "description": "Gets or sets the monthly rate per unit.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution.",
            "format": "double"
          },
          "ageRangeFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age range value.",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "description": "Gets or sets the upper age range value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanLtdRates": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanLtdRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan LTD rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "coverageRoundingRuleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CoverageRoundingRuleType"
              }
            ],
            "description": "Gets or sets the CoverageRoundingRule and property is of type CoverageRoundingRuleType enum."
          },
          "roundToNearestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RoundToNearestType"
              }
            ],
            "description": "Gets or sets the RoundToNearest and property is of type RoundToNearestType enum.",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationFrequency"
              }
            ],
            "description": "Gets or sets the specified enum type and is of type AgeCalculationFrequency."
          },
          "rateBasedOnId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateBasedOnType"
              }
            ],
            "description": "Gets or sets the RateBasedOn property is of type RateBasedOnType enum."
          },
          "isLateEntrantRules": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of the late entrant in minutes.\r\nThis property allows null values.",
            "format": "int32",
            "nullable": true
          },
          "ltdRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanLtdRateDetails"
            },
            "description": "Gets or sets the list of BenefitPlanLtdRateDetails for LTD rate details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanLtdRateDetails": {
        "type": "object",
        "properties": {
          "percentOfMonthlySalary": {
            "type": "number",
            "description": "Gets or sets the percentage of monthly salary.",
            "format": "double"
          },
          "maximumMonthlySalary": {
            "type": "number",
            "description": "Gets or sets the maximum monthly salary.",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "description": "Gets or sets the monthly rate per unit.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution.",
            "format": "double"
          },
          "ageRangeFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age range value.",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "description": "Gets or sets the upper age range value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanLtdRates": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "coverageRoundingRuleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CoverageRoundingRuleType"
              }
            ],
            "description": "Gets or sets the CoverageRoundingRule and property is of type CoverageRoundingRuleType enum."
          },
          "roundToNearestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RoundToNearestType"
              }
            ],
            "description": "Gets or sets the RoundToNearest and property is of type RoundToNearestType enum.",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationFrequency"
              }
            ],
            "description": "Gets or sets the specified enum type and is of type AgeCalculationFrequency."
          },
          "rateBasedOnId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateBasedOnType"
              }
            ],
            "description": "Gets or sets the RateBasedOn property is of type RateBasedOnType enum."
          },
          "isLateEntrantRules": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of the late entrant in minutes.\r\nThis property allows null values.",
            "format": "int32",
            "nullable": true
          },
          "ltdRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanLtdRateDetails"
            },
            "description": "Gets or sets the list of BenefitPlanLtdRateDetails for LTD rate details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanLtdRateDetailsInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanLtdRateDetailId": {
            "type": "string",
            "description": "Gets or sets the Id of an object.",
            "format": "uuid"
          },
          "percentOfMonthlySalary": {
            "type": "number",
            "description": "Gets or sets the percentage of monthly salary.",
            "format": "double"
          },
          "maximumMonthlySalary": {
            "type": "number",
            "description": "Gets or sets the maximum monthly salary.",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "description": "Gets or sets the monthly rate per unit.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution.",
            "format": "double"
          },
          "ageRangeFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age range value.",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "description": "Gets or sets the upper age range value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanLtdRatesInfo": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanLtdRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "benefitPlanID": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan ID.",
            "format": "uuid"
          },
          "coverageRoundingRuleId": {
            "type": "integer",
            "description": "Gets or sets the value of the Coverage Rounding Rule Id property.",
            "format": "int32"
          },
          "roundToNearestId": {
            "type": "integer",
            "description": "Gets or sets the byte value to round to the nearest whole number.",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "type": "integer",
            "description": "Gets or sets the age calculation type as a byte value.",
            "format": "int32"
          },
          "rateBasedOnId": {
            "type": "integer",
            "description": "Gets or sets the rate based on a specific type.",
            "format": "int32"
          },
          "isLateEntrantRules": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of a late entrant, represented as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "ltdRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanLtdRateDetailsInfo"
            },
            "description": "Gets or sets the list of BenefitPlanLtdRateDetails for LTD rate details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_DaysOfMonth": {
        "enum": [
          "1 - 1 | Represents the 1st day of the month.",
          "2 - 2 | Represents the 2nd day of the month.",
          "3 - 3 | Represents the 3rd day of the month.",
          "4 - 4 | Represents the 4th day of the month.",
          "5 - 5 | Represents the 5th day of the month.",
          "6 - 6 | Represents the 6th day of the month.",
          "7 - 7 | Represents the 7th day of the month.",
          "8 - 8 | Represents the 8th day of the month.",
          "9 - 9 | Represents the 9th day of the month.",
          "10 - 10 | Represents the 10th day of the month.",
          "11 - 11 | Represents the 11th day of the month.",
          "12 - 12 | Represents the 12th day of the month.",
          "13 - 13 | Represents the 13th day of the month.",
          "14 - 14 | Represents the 14th day of the month.",
          "15 - 15 | Represents the 15th day of the month.",
          "16 - 16 | Represents the 16th day of the month.",
          "17 - 17 | Represents the 17th day of the month.",
          "18 - 18 | Represents the 18th day of the month.",
          "19 - 19 | Represents the 19th day of the month.",
          "20 - 20 | Represents the 20th day of the month.",
          "21 - 21 | Represents the 21st day of the month.",
          "22 - 22 | Represents the 22nd day of the month.",
          "23 - 23 | Represents the 23rd day of the month.",
          "24 - 24 | Represents the 24th day of the month.",
          "25 - 25 | Represents the 25th day of the month.",
          "26 - 26 | Represents the 26th day of the month.",
          "27 - 27 | Represents the 27th day of the month.",
          "28 - 28 | Represents the 28th day of the month.",
          "29 - 29 | Represents the 29th day of the month.",
          "30 - 30 | Represents the 30th day of the month.",
          "31 - 31 | Represents the 31st day of the month."
        ],
        "type": "string",
        "description": "Represents the days of the month in a calendar."
      },
      "BBSI_Benefits_Database_EmployerBilling": {
        "enum": [
          "98 - Per pay period | Represents a billing method where the employer is billed for each pay period.",
          "99 - First payroll of each month | Represents a billing method where the employer is billed on the first payroll of each month."
        ],
        "type": "string",
        "description": "Specifies the different billing methods for employers."
      },
      "BBSI_Benefits_Database_PlanMatchType": {
        "enum": [
          "1 - Per Pay Period Match | Represents a match that occurs per pay period, where the match is applied regularly each pay period.",
          "2 - One Time Match | Represents a one time match, where the match is applied only once."
        ],
        "type": "string",
        "description": "Specifies the different types of plan match options."
      },
      "BBSI_Benefits_Database_MatchAmountType": {
        "enum": [
          "1 - Flat | Represents a flat match amount, where the amount is a fixed value.",
          "2 - Percent | Represents a percentage based match amount, where the amount is calculated as a percentage."
        ],
        "type": "string",
        "description": "Specifies the types of match amounts for benefits or other programs."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanInfoOverrideDto": {
        "type": "object",
        "properties": {
          "tierNumber": {
            "type": "integer",
            "description": "Gets or sets the tier number which is required.",
            "format": "int32"
          },
          "companyDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "preTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the ID of the pre-tax deduction code as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "postTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the post tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "dayOfMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DaysOfMonth"
              }
            ],
            "description": "Gets or sets the day of the month as an optional enum value.",
            "nullable": true
          },
          "employerBilling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerBilling"
              }
            ],
            "description": "Gets or sets the EmployerBilling information for a specific employer.",
            "nullable": true
          },
          "billingWasRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the billing rule was applied.\r\nDefault value is false."
          },
          "annualDeductions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ],
            "description": "Gets or sets the frequency of annual deductions."
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "tpaId": {
            "type": "string",
            "description": "Gets or sets the TPAId property, which is a nullable string representing the TPA Id.",
            "nullable": true
          },
          "excludePayCodes": {
            "type": "string",
            "description": "Gets or sets the pay codes to be excluded.",
            "nullable": true
          },
          "planMatchType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_PlanMatchType"
              }
            ],
            "description": "Gets or sets the type of plan match.",
            "nullable": true
          },
          "matchAmount": {
            "type": "number",
            "description": "Gets or sets the match amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "matchAmountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MatchAmountType"
              }
            ],
            "description": "Gets or sets the type of match amount.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitRetirementPlanRateDetails": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitRetirementPlanRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Retirement Plan Rate Detail.",
            "format": "uuid",
            "nullable": true
          },
          "benefitRetirementPlanRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Retirement Plan Rate.",
            "format": "uuid"
          },
          "matchingPercent": {
            "type": "number",
            "description": "Gets or sets the matching percentage value as a decimal.",
            "format": "double"
          },
          "matchingPercentSalary": {
            "type": "number",
            "description": "Gets or sets the matching percentage of the salary.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitRetirementPlanRatesInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitRetirementPlanRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Retirement Plan Rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "retirementType": {
            "type": "integer",
            "description": "Gets or sets the retirement type as a byte value.",
            "format": "int32"
          },
          "employeeBasedOn": {
            "type": "integer",
            "description": "Gets or sets the byte value representing the employee based on a certain criteria.\r\nThis property allows for a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "employerBasedOn": {
            "type": "integer",
            "description": "Gets or sets the identifier for the employer based on which the data is being collected.",
            "format": "int32",
            "nullable": true
          },
          "employeeContributionType": {
            "type": "integer",
            "description": "Gets or sets the type of contribution made by the employee.\r\nThis property is nullable and can hold a byte value.",
            "format": "int32",
            "nullable": true
          },
          "employerContributionType": {
            "type": "integer",
            "description": "Gets or sets the type of employer contribution as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "sharedEmployerContributionType": {
            "type": "integer",
            "description": "Gets or sets the type of shared employer contribution as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "employerFlatContribution": {
            "type": "number",
            "description": "Gets or sets the employer's flat contribution amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "safeHarborContribution": {
            "type": "number",
            "description": "Gets or sets the Safe Harbor Contribution amount, which is a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "simpleMatching": {
            "type": "number",
            "description": "Gets or sets the SimpleMatching value as a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "simpleNonElective": {
            "type": "number",
            "description": "Gets or sets the value for a simple non-elective decimal property.",
            "format": "double",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "maxLimit": {
            "type": "number",
            "description": "Gets or sets the maximum limit value.",
            "format": "double"
          },
          "maxLimitOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum limit for old age.",
            "format": "double"
          },
          "benefitRetirementPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitRetirementPlanRateDetails"
            },
            "description": "Gets or sets the list of BenefitRetirementPlanRateDetails.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanEligibilityAssociationListItem": {
        "type": "object",
        "properties": {
          "benefitPlanEligibilityAssociationId": {
            "type": "string",
            "description": "Gets the Benefit Plan Eligibility Association Id which is required.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets the Benefit Plan Id which is required and can be initialized.",
            "format": "uuid"
          },
          "benefitPlanEligibilityRuleId": {
            "type": "string",
            "description": "Gets the unique identifier for the Benefit Plan Eligibility Rule.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets the CompanyId property which is required and can only be initialized during object creation.",
            "format": "uuid"
          },
          "employeeTierNumber": {
            "type": "integer",
            "description": "Gets the required employee tier number.",
            "format": "int32"
          },
          "benefitPlanEligibilityRuleName": {
            "type": "string",
            "description": "Gets or sets the name of the Benefit Plan Eligibility Rule.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Database_BenefitGroupTypes": {
        "enum": [
          "0 - NA | Represents no specific benefit group.",
          "6 - Medical | Represents a medical benefit group.",
          "7 - Dental | Represents a dental benefit group.",
          "8 - Vision | Represents a vision benefit group.",
          "9 - HRA | Represents a Health Reimbursement Account (HRA) benefit group.",
          "10 - HSA | Represents a Health Savings Account (HSA) benefit group.",
          "11 - FSA | Represents a Flexible Spending Account (FSA) benefit group.",
          "12 - Limited FSA | Represents a Limited Flexible Spending Account (Limited FSA) benefit group.",
          "13 - DCA | Represents a Dependent Care Assistance (DCA) benefit group.",
          "14 - Commuter Benefits | Represents an commuter benefits plan.",
          "15 - Group Life | Represents a group life insurance plan for employees.",
          "16 - Group Life (Child) | Represents a group life insurance plan for children.",
          "17 - Group Life (Spouse) | Represents a group life insurance plan for spouses.",
          "18 - Employer-Paid Group Life | Represents a group life employer paid benefit group.",
          "19 - Short-Term Disability | Represents a Short Term Disability (STD) benefit group.",
          "20 - Long-Term Disability | Represents a Long Term Disability (LTD) benefit group.",
          "21 - Hospital Indemnity | Represents a Hospital Indemnity benefit plan.",
          "22 - Critical Illness | Represents a Critical Illness benefit plan.",
          "23 - Accident | Represents a Accident benefit plan.",
          "24 - EAP (Employee Assistance Program) | Represents a EAP (Employee Assistance Program) benefit plan.",
          "25 - Telemedicine/Virtual Care | Represents a Telemedicine/Virtual Care benefit plan.",
          "26 - Wellness Program | Represents a Wellness Program benefit plan.",
          "26 - Age Band | No summary available",
          "27 - Custom Group Type | No summary available",
          "27 - Pet Insurance | Represents a Pet Insurance benefit plan.",
          "28 - Parking | No summary available",
          "28 - Legal Assistance Plan | Represents a Legal Assistance Plan benefit plan.",
          "29 - Custom Plan Type | Represents a Custom Plan Type benefit plan.",
          "29 - Transit 132 | No summary available",
          "30 - Retirement Plan | No summary available",
          "31 - Retirement 401k | No summary available",
          "32 - Retirement 403b | No summary available",
          "33 - Retirement 457 | No summary available",
          "34 - Retirement 408k | No summary available",
          "35 - Retirement 408p | No summary available",
          "36 - Retirement 409a | No summary available"
        ],
        "type": "string",
        "description": "Represents the different types of benefit groups available in the system."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanOverrideDto": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit with an initial value of an empty string.",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an organization.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the company name with an initial value of an empty string.",
            "nullable": true
          },
          "benefitPlanEligibilityRuleId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Eligibility Rule Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanDurationTemplateId": {
            "type": "string",
            "description": "Gets or sets the ID of the Benefit Plan Duration Template.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanInfoOverrideDto": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanInfoOverrideDto"
              }
            ],
            "description": "Gets or sets the BenefitPlanInfoOverrideDto for a benefit plan.",
            "nullable": true
          },
          "benefitFormId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the benefit form.",
            "format": "uuid",
            "nullable": true
          },
          "compatiblePlans": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the list of compatible plan IDs as nullable Guids.",
            "nullable": true
          },
          "inCompatiblePlans": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets a list of incompatible plan IDs represented as Guids.",
            "nullable": true
          },
          "availableTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of available tiers.",
            "nullable": true
          },
          "benefitPlanFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFlatRateListItem"
            },
            "description": "Gets or sets the list of Benefit Plan Flat Rate items.",
            "nullable": true
          },
          "benefitRetirementPlanRatesInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitRetirementPlanRatesInfo"
              }
            ],
            "description": "Gets or sets the information about retirement plan rates for benefits.",
            "nullable": true
          },
          "benefitPlanCafeteriaPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanCafeteriaPlanRateDetail"
            },
            "description": "Gets or sets the list of Benefit Plan Cafeteria Plan Rate Details.",
            "nullable": true
          },
          "benefitPlanEligibilityAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanEligibilityAssociationListItem"
            },
            "description": "Gets or sets the list of Benefit Plan Eligibility Association items.",
            "nullable": true
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets or sets the RateType and property is of the RateTypes enum type."
          },
          "benefitGroupType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ],
            "description": "Gets or sets the value of BenefitGroupType and property is a valid enum value of BenefitGroupTypes."
          },
          "createdByUserId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the user who created the entity.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Database_Enum_RetirementTypes": {
        "enum": [
          "1 - Tradional401k | Traditional 401(k) plan where contributions are made pre tax.",
          "2 - Roth401k | Roth 401(k) plan where contributions are made after tax, allowing for tax free withdrawals in retirement.",
          "3 - Simple401k | Simple 401(k) plan designed for small businesses.",
          "4 - SafeHarbor401k | Safe Harbor 401(k) plan which includes employer contributions to meet certain requirements."
        ],
        "type": "string",
        "description": "Represents different types of retirement plans."
      },
      "BBSI_Benefits_Database_Enum_EmployeeBasedOnTypes": {
        "enum": [
          "1 - PayPerPeriod | The employee contribution or benefit is based on their pay per period.",
          "2 - AnnualAmount | The employee contribution or benefit is based on an annual amount."
        ],
        "type": "string",
        "description": "Represents the basis on which the employee contribution or benefit amount is calculated."
      },
      "BBSI_Benefits_Database_Enum_EmployerBasedOnTypes": {
        "enum": [
          "1 - EmployeeContribution | The employer contribution is based on the employee contribution.",
          "2 - EmployeeSalary | The employer contribution is based on the employee salary."
        ],
        "type": "string",
        "description": "Represents the basis on which the employer contribution is calculated."
      },
      "BBSI_Benefits_Database_Enum_ContributionTypes": {
        "enum": [
          "0 - None | No contribution is made.",
          "1 - Flat | A flat amount is contributed.",
          "2 - Percentage | A percentage of the relevant value is contributed."
        ],
        "type": "string",
        "description": "Represents the type of contribution."
      },
      "BBSI_Benefits_Database_Enum_EmployerContributionTypes": {
        "enum": [
          "1 - Matching | Represents a matching employer contribution, where the employer matches the employee contribution.",
          "2 - NonElective | Represents a non elective employer contribution, where the employer contributes regardless of employee action."
        ],
        "type": "string",
        "description": "Represents the types of employer contributions for benefits or retirement plans."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitRetirementPlanRates": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitRetirementPlanRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Retirement Plan Rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "retirementType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_RetirementTypes"
              }
            ],
            "description": "Gets or sets the specified enum type is of type RetirementTypes."
          },
          "employeeBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployeeBasedOnTypes"
              }
            ],
            "description": "Gets or sets the provided enum value for EmployeeBasedOn and property is of type EmployeeBasedOnTypes.",
            "nullable": true
          },
          "employerBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployerBasedOnTypes"
              }
            ],
            "description": "Gets or sets the provided value for EmployerBasedOn and property is a valid enum value of EmployerBasedOnTypes.",
            "nullable": true
          },
          "employeeContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ],
            "description": "Gets or sets the EmployeeContributionType and property is of type ContributionTypes enum.",
            "nullable": true
          },
          "employerContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ],
            "description": "Gets or sets the EmployerContributionType and property is of type ContributionTypes enum.",
            "nullable": true
          },
          "sharedEmployerContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployerContributionTypes"
              }
            ],
            "description": "Gets or sets the SharedEmployerContributionType and property is of type EmployerContributionTypes enum.",
            "nullable": true
          },
          "employerFlatContribution": {
            "type": "number",
            "description": "Gets or sets the employer's flat contribution amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "safeHarborContribution": {
            "type": "number",
            "description": "Gets or sets the Safe Harbor Contribution amount.",
            "format": "double",
            "nullable": true
          },
          "simpleMatching": {
            "type": "number",
            "description": "Gets or sets the Simple Matching value as a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "simpleNonElective": {
            "type": "number",
            "description": "Gets or sets the value of a simple non-elective decimal property.",
            "format": "double",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "benefitRetirementPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitRetirementPlanRateDetails"
            },
            "description": "Gets or sets the list of Benefit Retirement Plan Rate Details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitRetirementPlanRates": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "retirementType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_RetirementTypes"
              }
            ],
            "description": "Gets or sets the specified enum type, is of type RetirementTypes."
          },
          "employeeBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployeeBasedOnTypes"
              }
            ],
            "description": "Gets or sets the provided enum value for EmployeeBasedOn and property is of type EmployeeBasedOnTypes.",
            "nullable": true
          },
          "employerBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployerBasedOnTypes"
              }
            ],
            "description": "Gets or sets the provided value for EmployerBasedOn and property is a valid enum value of EmployerBasedOnTypes.",
            "nullable": true
          },
          "employeeContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ],
            "description": "Gets or sets the EmployeeContributionType and property is of type ContributionTypes enum.",
            "nullable": true
          },
          "employerContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ],
            "description": "Gets or sets the EmployerContributionType and property is of type ContributionTypes enum.",
            "nullable": true
          },
          "sharedEmployerContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployerContributionTypes"
              }
            ],
            "description": "Gets or sets the SharedEmployerContributionType and property is of type EmployerContributionTypes enum.",
            "nullable": true
          },
          "employerFlatContribution": {
            "type": "number",
            "description": "Gets or sets the employer's flat contribution amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "safeHarborContribution": {
            "type": "number",
            "description": "Gets or sets the Safe Harbor Contribution amount, which is a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "simpleMatching": {
            "type": "number",
            "description": "Gets or sets the Simple Matching value as a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "simpleNonElective": {
            "type": "number",
            "description": "Gets or sets the value of a simple non-elective decimal property.",
            "format": "double",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "benefitRetirementPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitRetirementPlanRateDetails"
            },
            "description": "Gets or sets the list of Benefit Retirement Plan Rate Details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_Setup_BenefitPlanStdRates_Dtos_UpdateBenefitPlanStdRateDetails": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanStdRateDetailId": {
            "type": "string",
            "description": "Gets or sets the Id of an object.",
            "format": "uuid"
          },
          "percentOfWeeklySalary": {
            "type": "number",
            "description": "Gets or sets the percentage of weekly salary.",
            "format": "double"
          },
          "maximumWeeklySalary": {
            "type": "number",
            "description": "Gets or sets the maximum weekly salary.",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "description": "Gets or sets the monthly rate per unit.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution.",
            "format": "double"
          },
          "ageRangeFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age range value.",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "description": "Gets or sets the upper age range value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanStdRates": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanStdRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan STD rate.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "coverageRoundingRuleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CoverageRoundingRuleType"
              }
            ],
            "description": "Gets or sets the CoverageRoundingRule and property is of type CoverageRoundingRuleType enum."
          },
          "roundToNearestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RoundToNearestType"
              }
            ],
            "description": "Gets or sets the RoundToNearest and property is of type RoundToNearestType enum.",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationFrequency"
              }
            ],
            "description": "Gets or sets the specified enum type and is of type AgeCalculationFrequency."
          },
          "rateBasedOnId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateBasedOnType"
              }
            ],
            "description": "Gets or sets the RateBasedOn property is of type RateBasedOnType enum."
          },
          "isLateEntrantRules": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of the late entrant in minutes.\r\nThis property allows null values.",
            "format": "int32",
            "nullable": true
          },
          "stdRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Setup_BenefitPlanStdRates_Dtos_UpdateBenefitPlanStdRateDetails"
            },
            "description": "Gets or sets the list of BenefitPlanStdRateDetails for STD rate details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanStdRateDetails": {
        "type": "object",
        "properties": {
          "percentOfWeeklySalary": {
            "type": "number",
            "description": "Gets or sets the percentage of weekly salary.",
            "format": "double"
          },
          "maximumWeeklySalary": {
            "type": "number",
            "description": "Gets or sets the maximum weekly salary.",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "description": "Gets or sets the monthly rate per unit.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution.",
            "format": "double"
          },
          "ageRangeFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age range value.",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "description": "Gets or sets the upper age range value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanStdRates": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "coverageRoundingRuleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CoverageRoundingRuleType"
              }
            ],
            "description": "Gets or sets the CoverageRoundingRuleId and property is of type CoverageRoundingRuleType enum."
          },
          "roundToNearestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RoundToNearestType"
              }
            ],
            "description": "Gets or sets the RoundToNearestId and property is of type RoundToNearestType enum.",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationFrequency"
              }
            ],
            "description": "Gets or sets the specified enum type and is of type AgeCalculationFrequency."
          },
          "rateBasedOnId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateBasedOnType"
              }
            ],
            "description": "Gets or sets the RateBasedOnId property is of type RateBasedOnType enum."
          },
          "isLateEntrantRules": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of a late entrant, represented as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "stdRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanStdRateDetails"
            },
            "description": "Gets or sets the list of BenefitPlanStdRateDetails for the Benefit Plan Standard Rate Details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanStdRateDetailsInfo": {
        "type": "object",
        "properties": {
          "benefitPlanStdRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "percentOfWeeklySalary": {
            "type": "number",
            "description": "Gets or sets the percentage of weekly salary.",
            "format": "double"
          },
          "maximumWeeklySalary": {
            "type": "number",
            "description": "Gets or sets the maximum weekly salary.",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "description": "Gets or sets the monthly rate per unit.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution.",
            "format": "double"
          },
          "ageRangeFrom": {
            "type": "integer",
            "description": "Gets or sets the starting age range value.",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "description": "Gets or sets the upper age range value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanStdRatesInfo": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanStdRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "benefitPlanID": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan ID.",
            "format": "uuid"
          },
          "coverageRoundingRuleId": {
            "type": "integer",
            "description": "Gets or sets the value of the CoverageRoundingRuleId property as a int data type.",
            "format": "int32"
          },
          "roundToNearestId": {
            "type": "integer",
            "description": "Gets or sets the nullable int value to RoundToNearestId property.",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "type": "integer",
            "description": "Gets or sets the age calculation type as a byte value.",
            "format": "int32"
          },
          "rateBasedOnId": {
            "type": "integer",
            "description": "Gets or sets the rate based on a specific type.",
            "format": "int32"
          },
          "isLateEntrantRules": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entrant is late."
          },
          "lateEntrantDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of a late entrant, represented as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "stdRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanStdRateDetailsInfo"
            },
            "description": "Gets or sets the list of BenefitPlanStdRateDetails for the Benefit Plan Standard Rate Details.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanTypeOrderItem": {
        "type": "object",
        "properties": {
          "benefitPlanTypeOrderId": {
            "type": "integer",
            "description": "Gets or sets the order ID for Benefit Plan Groups.",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanTypeId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Type Id.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the object. Can be null.",
            "nullable": true
          },
          "sortIndex": {
            "type": "integer",
            "description": "Gets or sets the sort index value as a byte.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a sealed class for a benefit plan group order item."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanTypeOrder": {
        "type": "object",
        "properties": {
          "organizationID": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the organization.",
            "format": "uuid",
            "nullable": true
          },
          "companyID": {
            "type": "string",
            "description": "Gets or sets the CompanyID as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "loginSessionGuid": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a login session.",
            "format": "uuid"
          },
          "reOrderedBenefitsPlanTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets or sets the list of reordered benefit plane group IDs.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanType": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "planTypeId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Type Id.",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Name property with a maximum length specified by DataConstants.LengthBenefitPlanTypeName of 100 characters.\r\nand is sanitized for input.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the Plan Type is active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanType": {
        "required": [
          "isActive",
          "name",
          "planTypeId"
        ],
        "type": "object",
        "properties": {
          "planTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Name property with a maximum length specified by DataConstants.LengthTypeName and sanitized input."
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the Type is active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanTypeInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "planTypeId": {
            "type": "integer",
            "description": "Gets or sets the plan type.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the object. This property is required and cannot be null.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the Plan Type is active or not."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanTypeFilter": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "planTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanTypeListItem": {
        "type": "object",
        "properties": {
          "benefitPlanTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan type.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the required name property.",
            "nullable": true
          },
          "planTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "planTypeName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanTypeListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanTypeListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_LinkActionTypes": {
        "enum": [
          "0 - Add External Link | Represents an action to add an external link.",
          "1 - Upload To Azure Cloud | Represents an action to upload a file to the Azure Cloud.",
          "2 - Select Benefit Form | Represents an action to select from already uploaded benefit forms."
        ],
        "type": "string",
        "description": "Specifies the different types of actions for handling links."
      },
      "BBSI_Benefits_Database_InsuranceApplicationRequireStatus": {
        "enum": [
          "100 - Not Required | Represents a status where an application is not required.",
          "101 - Required | Represents a status where an application is required."
        ],
        "type": "string",
        "description": "Specifies the status of whether an application is required or not."
      },
      "BBSI_Benefits_Database_TaxStatus": {
        "enum": [
          "91 - Pre Tax | Represents a deduction or benefit that is applied before tax is calculated.",
          "92 - Post Tax | Represents a deduction or benefit that is applied after tax is calculated."
        ],
        "type": "string",
        "description": "Represents the tax status of a particular deduction or benefit."
      },
      "BBSI_Benefits_Database_WashRuleCalculationDay": {
        "enum": [
          "163 - One | No summary available",
          "164 - Two | No summary available",
          "165 - Three | No summary available",
          "166 - Four | No summary available",
          "167 - Five | No summary available",
          "168 - Six | No summary available",
          "169 - Seven | No summary available",
          "170 - Eight | No summary available",
          "171 - Nine | No summary available",
          "172 - Ten | No summary available",
          "173 - Eleven | No summary available",
          "174 - Twelve | No summary available",
          "175 - Thirteen | No summary available",
          "176 - Fourteen | No summary available",
          "177 - Fifteen | No summary available",
          "178 - Sixteen | No summary available",
          "179 - Seventeen | No summary available",
          "180 - Eighteen | No summary available",
          "181 - Nineteen | No summary available",
          "182 - Twenty | No summary available",
          "183 - TwentyOne | No summary available",
          "184 - TwentyTwo | No summary available",
          "185 - TwentyThree | No summary available",
          "186 - TwentyFour | No summary available",
          "187 - TwentyFive | No summary available",
          "188 - TwentySix | No summary available",
          "189 - TwentySeven | No summary available",
          "190 - TwentyEight | No summary available",
          "191 - TwentyNine | No summary available",
          "192 - Thirty | No summary available",
          "193 - ThirtyOne | No summary available"
        ],
        "type": "string",
        "description": "Represents the Wash Rule Calculation Day."
      },
      "BBSI_Benefits_Database_AgeCalculationMethod": {
        "enum": [
          "93 - At the Effective Date | Represents age calculation at the effective date of the plan or benefit.",
          "94 - At the Birthday | Represents age calculation based on the employee birthday.",
          "95 - 1st of the Birthday Month | Represents age calculation at the 1st of the birthday month.",
          "96 - 1st of the next Month after Birthday | Represents age calculation at the 1st of the next month after the employee birthday.",
          "97 - Start of Specific Month | Represents age calculation at the start of a specific month defined by the system or user."
        ],
        "type": "string",
        "description": "Specifies the different methods of calculating age based on specific months for benefits or eligibility."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanLinkListItem": {
        "required": [
          "description",
          "fileName"
        ],
        "type": "object",
        "properties": {
          "benefitPlanLinkId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the benefit plan link.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan, nullable.",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the required description with a maximum length of 100 characters after sanitizing the input."
          },
          "fileName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the FileName property of a model, which is required and has a maximum length of 255 characters."
          },
          "downloadUrl": {
            "type": "string",
            "description": "Gets or sets the download URL for a file. Can be null.",
            "nullable": true
          },
          "isRemove": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the item should be removed."
          },
          "isNewAdded": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is newly added."
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlan": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an organization.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "benefitName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the name of the benefit with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "planNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the plan number with a maximum length defined by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "deductionDescription": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Deduction Description with a maximum length defined by DataConstants.LengthDescription.",
            "nullable": true
          },
          "benefitExplanation": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the benefit explanation with a maximum length defined by DataConstants.LengthUrl.",
            "nullable": true
          },
          "benefitExplanationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_LinkActionTypes"
              }
            ],
            "description": "Gets or sets the specified enum value for BenefitExplanationType and property is of type LinkActionTypes."
          },
          "searchDoctorUrl": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the URL for searching doctors with a maximum length defined by DataConstants.LengthUrl.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "insuranceApplication": {
            "type": "string",
            "description": "Gets or sets the insurance application GUID.",
            "format": "uuid",
            "nullable": true
          },
          "isVisibleOnCobraReport": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the item is visible on the Cobra report."
          },
          "isBeneficiaryRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if a beneficiary is required."
          },
          "isBeneficiaryVisible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the beneficiary is visible."
          },
          "benefitCustomMessage": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the custom message for benefits with a maximum length defined by DataConstants.LengthTextArea.\r\nThe input is sanitized to prevent malicious input.",
            "nullable": true
          },
          "isApplicationStatusRequired": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_InsuranceApplicationRequireStatus"
              }
            ],
            "description": "Gets or sets the specified enum type is of type ApplicationRequireStatus."
          },
          "childrenAgeLimit": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets property representing the age limit for children, with string length validation, custom age range validation, and input sanitization.",
            "nullable": true
          },
          "fullTimeStudentAgeLimit": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the full-time student age limit with minimum length validation, age range validation, and input sanitization.",
            "nullable": true
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets or sets the RateType and property is of the RateTypes enum type."
          },
          "taxStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_TaxStatus"
              }
            ],
            "description": "Gets or sets the value of TaxStatus and property is a valid member of the TaxStatus enum.",
            "nullable": true
          },
          "washRuleCalculationDayId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WashRuleCalculationDay"
              }
            ],
            "description": "Gets or sets the value of WashRuleCalculationDay enum value to WashRuleCalculationDayId property."
          },
          "ageCalculationMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationMethod"
              }
            ],
            "description": "Gets or sets the specified enum type is of type AgeCalculationMonth.",
            "nullable": true
          },
          "specificMonth": {
            "type": "integer",
            "description": "Gets or sets the specific month as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "billingWashRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the billing wash rule is enabled."
          },
          "dayOfMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DaysOfMonth"
              }
            ],
            "description": "Gets or sets the value of DayOfMonth and property is a member of the DaysOfMonth enum type.",
            "nullable": true
          },
          "employerBilling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerBilling"
              }
            ],
            "description": "Gets or sets the value of EmployerBilling and property is of type EmployerBilling enum."
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was created.",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "integer",
            "description": "Gets or sets the user ID of the creator of the entity.",
            "format": "int32"
          },
          "isOrganizationalPlan": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the plan is an organizational plan."
          },
          "planGroupType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ],
            "description": "Gets or sets the PlanGroupType and property is of the BenefitGroupTypes enum type."
          },
          "retirementType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_RetirementTypes"
              }
            ],
            "description": "Gets or sets the provided value for RetirementType is a valid enum value of type RetirementTypes.",
            "nullable": true
          },
          "customGroupTypeRowId": {
            "type": "string",
            "description": "Gets or sets the custom group type row ID as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "companyIds": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the CompanyIds with a maximum length defined by DataConstants.LengthMax.",
            "nullable": true
          },
          "glCodeId": {
            "type": "string",
            "description": "Gets or sets the Guid value for GlCodeId property.",
            "format": "uuid",
            "nullable": true
          },
          "billCodeId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Bill Code Id with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "w2Reporting": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether W2 reporting is enabled."
          },
          "tpaId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the TPAId with a maximum length of 50 characters after sanitizing the input.",
            "nullable": true
          },
          "excludePayCodes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the string value for excluding pay codes with a maximum length of 500 characters.\r\nThe input will be sanitized to prevent any malicious content.",
            "nullable": true
          },
          "benefitPlanLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanLinkListItem"
            },
            "description": "Gets or sets the list of BenefitPlanLinkListItem objects for a benefit plan.",
            "nullable": true
          },
          "cobra": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the Cobra property is true or false."
          },
          "planMatchType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_PlanMatchType"
              }
            ],
            "description": "Gets or sets the type of plan match.",
            "nullable": true
          },
          "matchAmount": {
            "type": "number",
            "description": "Gets or sets the match amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "matchAmountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MatchAmountType"
              }
            ],
            "description": "Gets or sets the type of match amount.",
            "nullable": true
          },
          "deductionCodeId": {
            "type": "string",
            "description": "Gets or sets the Deduction Code Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "preTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the pre-tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "postTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the post tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "benefitFormId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the benefit form.",
            "format": "uuid",
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the plan year.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CreateUpdateCarrierDataFields": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the benefit plan.",
            "format": "uuid"
          },
          "groupNumber": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Gets or sets the nullable string for GroupNumber property.",
            "nullable": true
          },
          "subCode": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Gets or sets the nullable string for SubCode property.",
            "nullable": true
          },
          "branch": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Gets or sets the nullable string for Branch property.",
            "nullable": true
          },
          "controlNumber": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Gets or sets the nullable string for ControlNumber property.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CarrierDataFieldsInfo": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier of the benefit plan.",
            "format": "uuid"
          },
          "groupNumber": {
            "type": "string",
            "description": "Gets or sets the nullable string for GroupNumber property.",
            "nullable": true
          },
          "subCode": {
            "type": "string",
            "description": "Gets or sets the nullable string for SubCode property.",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "description": "Gets or sets the nullable string for Branch property.",
            "nullable": true
          },
          "controlNumber": {
            "type": "string",
            "description": "Gets or sets the nullable string for ControlNumber property.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_FinalStatus": {
        "enum": [
          "120 - Incomplete | Represents a final status of Benefit Plan when all required fields/pages are not completed.",
          "121 - Inactive | Represents a final status of Benefit Plan when completed plan status is changed to Inactive.",
          "122 - Active | Represents a final status of Benefit Plan when all required fields/pages are completed."
        ],
        "type": "string",
        "description": "Represents the different final statuses that a Benefit Plan can have."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanOptionsFilter": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "Gets the required OrganizationId property of type Guid with init accessor.",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Gets the CompanyId property which is required and can only be initialized during object creation.",
            "format": "uuid",
            "nullable": true
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets the benefit year for a specific object.",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets the unique identifier of the benefit plan group.",
            "format": "uuid",
            "nullable": true
          },
          "planTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets Plan type Ids.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets IsActive flag.",
            "nullable": true
          },
          "finalStatusId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_FinalStatus"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanFilter": {
        "type": "object",
        "properties": {
          "codeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets list of Ids for Benefit plan codes.",
            "nullable": true
          },
          "nameIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets list of Ids for Benefit plan names.",
            "nullable": true
          },
          "planTypeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets list of Ids for Benefit plan types.",
            "nullable": true
          },
          "planYears": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Plan Years.",
            "nullable": true
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets list of Statuses.",
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanListItem": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "planId": {
            "type": "string",
            "description": "Gets or sets the plan id.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Gets or sets the Code of the object. Can be null.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the object. Can be null.",
            "nullable": true
          },
          "benefitPlanTypeName": {
            "type": "string",
            "description": "Gets or sets the benefit group for a specific entity.",
            "nullable": true
          },
          "planTypeId": {
            "type": "integer",
            "description": "Gets or sets the benefit group for a specific entity.",
            "format": "int32",
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status of an object, which can be null.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitPlanListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_MonthNames": {
        "enum": [
          "105 - January | Represents a January month name.",
          "106 - February | Represents a February month name.",
          "107 - March | Represents a March month name.",
          "108 - April | Represents a April month name.",
          "109 - May | Represents a May month name.",
          "110 - June | Represents a June month name.",
          "111 - July | Represents a July month name.",
          "112 - August | Represents a August month name.",
          "113 - September | Represents a September month name.",
          "114 - October | Represents a October month name.",
          "115 - November | Represents a November month name.",
          "116 - December | Represents a December month name."
        ],
        "type": "string",
        "description": "Represents the different statuses that a step in a process can have."
      },
      "BBSI_Benefits_Model_Default_SaveBenefitPlan": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the required Benefit Plan Id.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "benefitPlanName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the benefit plan name with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "planId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the plan number with a maximum length defined by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "deductionDescription": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Deduction Description with a maximum length defined by DataConstants.LengthDescription.",
            "nullable": true
          },
          "providerSearchURL": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the URL used for searching doctors, with a maximum length defined by DataConstants.LengthUrl.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "isBeneficiaryVisible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the beneficiary is visible.",
            "nullable": true
          },
          "childrenAgeLimit": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the children age limit with minimum length validation, age range validation, and input sanitization.",
            "nullable": true
          },
          "taxStatusId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_TaxStatus"
              }
            ],
            "description": "Gets or sets the value of TaxStatus enum value to TaxStatusId property.",
            "nullable": true
          },
          "washRuleCalculationDayId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WashRuleCalculationDay"
              }
            ],
            "description": "Gets or sets the value of WashRuleCalculationDay enum value to WashRuleCalculationDayId property.",
            "nullable": true
          },
          "ageCalculationMethodId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationMethod"
              }
            ],
            "description": "Gets or sets the AgeCalculationMethod enum type value to AgeCalculationMonthId property.",
            "nullable": true
          },
          "specificMonthId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MonthNames"
              }
            ],
            "description": "Gets or sets the MonthNames enum value to SpecificMonthId property.",
            "nullable": true
          },
          "billingWashRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the billing wash rule is enabled.",
            "nullable": true
          },
          "dayOfMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DaysOfMonth"
              }
            ],
            "description": "Gets or sets the value of DayOfMonth and property is a valid member of the DaysOfMonth enum.",
            "nullable": true
          },
          "employerBillingFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerBilling"
              }
            ],
            "description": "Gets or sets the value of EmployerBilling enum value to EmployerBillingId property.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the object was created.",
            "format": "date-time",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "description": "Gets or sets the ID of the user who created the entity.",
            "format": "int32",
            "nullable": true
          },
          "billCodeId": {
            "type": "string",
            "description": "Gets or sets the Bill Code Id with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "format": "uuid",
            "nullable": true
          },
          "w2Reporting": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether W2 reporting is enabled.",
            "nullable": true
          },
          "isCobraEligible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if Cobra is enabled or not.",
            "nullable": true
          },
          "preTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the pre-tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "postTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the post tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "benefitFormIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the unique identifier of the benefit form.",
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the plan year.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_SubmitBenefitPlan": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the required Benefit Plan Id.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "benefitPlanName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the benefit plan name with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "planId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the plan number with a maximum length defined by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the plan year.",
            "format": "int32"
          },
          "taxStatusId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_TaxStatus"
              }
            ],
            "description": "Gets or sets the value of TaxStatusId property is a valid member of the TaxStatus enum."
          },
          "washRuleCalculationDayId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WashRuleCalculationDay"
              }
            ],
            "description": "Gets or sets the value of WashRuleCalculationDay enum value to WashRuleCalculationDayId property.",
            "nullable": true
          },
          "isCobraEligible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if Cobra is enabled or not."
          },
          "ageCalculationMethodId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationMethod"
              }
            ],
            "description": "Gets or sets the AgeCalculationMonth enum value to AgeCalculationMonthId property.",
            "nullable": true
          },
          "specificMonthId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MonthNames"
              }
            ],
            "description": "Gets or sets the MonthNames enum value to SpecificMonthId property.",
            "nullable": true
          },
          "w2Reporting": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether W2 reporting is enabled."
          },
          "providerSearchURL": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the URL used for searching doctors, with a maximum length defined by DataConstants.LengthUrl.\r\nThe input is sanitized to prevent any malicious input.",
            "nullable": true
          },
          "status": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets the boolean value which will set Benefit Plan is active or not.",
            "nullable": true
          },
          "billingWashRule": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the billing wash rule is enabled.",
            "nullable": true
          },
          "employerBillingFrequencyId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerBilling"
              }
            ],
            "description": "Gets or sets the value of EmployerBillingFrequencyId property is of type EmployerBilling enum."
          },
          "preTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the pre-tax deduction code.",
            "format": "uuid",
            "nullable": true
          },
          "postTaxDeductionCodeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the post tax deduction code.",
            "format": "uuid"
          },
          "deductionDescription": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Deduction Description with a maximum length defined by DataConstants.LengthDescription.",
            "nullable": true
          },
          "billCodeId": {
            "type": "string",
            "description": "Gets or sets the Bill Code Id with a maximum length specified by DataConstants.LengthItemName.\r\nThe input is sanitized to prevent any malicious input.",
            "format": "uuid"
          },
          "benefitFormIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the unique identifier of the benefit form.",
            "nullable": true
          },
          "childrenAgeLimit": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the children age limit with minimum length validation, age range validation, and input sanitization.",
            "nullable": true
          },
          "isBeneficiaryVisible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the beneficiary is visible.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Database_StepStatus": {
        "enum": [
          "102 - NA | Represents a step that has not been assigned or is not applicable.",
          "103 - Incomplete | Represents a step that has been incomplete during the process.",
          "104 - Completed | Represents a step that has been successfully completed."
        ],
        "type": "string",
        "description": "Represents the different statuses that a step in a process can have."
      },
      "BBSI_Benefits_Model_Default_UpdateStepStatus": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the required Benefit Plan Id.",
            "format": "uuid"
          },
          "stepStatusColumn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ColumnNames"
              }
            ],
            "description": "Gets or sets the specified enum value for StepStatusColumn property belongs to the ColumnNames enum type."
          },
          "stepStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_StepStatus"
              }
            ],
            "description": "Gets or sets the StepStatus and property is of type StepStatus enum."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitSettingsListItem": {
        "type": "object",
        "properties": {
          "benefitSettingId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit setting.",
            "format": "uuid"
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year as a nullable integer.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitSettingsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitSettingsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_WaitingPeriodPriority": {
        "enum": [
          "1 - NewHire | New hire employee can enroll during open enrollment without.",
          "2 - OpenEnrollment | New hire emmployee shall wait until the waiting period ends."
        ],
        "type": "string",
        "description": "When open enrollment and new hire waiting periods conflict for an employee, choose which will have priority."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitSettings": {
        "required": [
          "signatureAcknowledgementText",
          "signaturePageMessage",
          "waitingPeriodPriority",
          "welcomePageMessage",
          "welcomePageTitle"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitSettingId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit setting.",
            "format": "uuid"
          },
          "welcomePageTitle": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the title for the welcome step with input sanitization and length validation."
          },
          "welcomePageMessage": {
            "type": "string",
            "description": "Gets or sets the welcome step message with required validation, maximum string length, and input sanitization."
          },
          "waitingPeriodPriority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodPriority"
              }
            ],
            "description": "Gets or sets the WaitingPeriodPriority and property is of type WaitingPeriodPriority enum."
          },
          "signaturePageMessage": {
            "type": "string",
            "description": "Gets or sets the electronic signature note with a maximum length defined by DataConstants.LengthHtmlEditor.\r\nThe input is sanitized to prevent any malicious content."
          },
          "signatureAcknowledgementText": {
            "type": "string",
            "description": "Gets or sets the electronic signature footer note with a maximum length defined by DataConstants.LengthHtmlEditor.\r\nThe input is sanitized to prevent any malicious content."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitSettings": {
        "required": [
          "planYear",
          "signatureAcknowledgementText",
          "signaturePageMessage",
          "waitingPeriodPriority",
          "welcomePageMessage",
          "welcomePageTitle"
        ],
        "type": "object",
        "properties": {
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year as a nullable integer.",
            "format": "int32"
          },
          "welcomePageTitle": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the title for the welcome step with input sanitization and length validation."
          },
          "welcomePageMessage": {
            "type": "string",
            "description": "Gets or sets the welcome step message with required validation, maximum string length, and input sanitization."
          },
          "waitingPeriodPriority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodPriority"
              }
            ],
            "description": "Gets or sets the WaitingPeriodPriority and property is of type WaitingPeriodPriority enum."
          },
          "signaturePageMessage": {
            "type": "string",
            "description": "Gets or sets the electronic signature note with a maximum length defined by DataConstants.LengthHtmlEditor.\r\nThe input is sanitized to prevent any malicious content."
          },
          "signatureAcknowledgementText": {
            "type": "string",
            "description": "Gets or sets the electronic signature footer note with a maximum length defined by DataConstants.LengthHtmlEditor.\r\nThe input is sanitized to prevent any malicious content."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitSettingInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year as a nullable integer.",
            "format": "int32"
          },
          "benefitSettingId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for BenefitSettings.",
            "format": "uuid"
          },
          "welcomePageTitle": {
            "type": "string",
            "description": "Gets or sets the title for the welcome step in a process.",
            "nullable": true
          },
          "welcomePageMessage": {
            "type": "string",
            "description": "Gets or sets the required welcome step message.",
            "nullable": true
          },
          "waitingPeriodPriority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodPriority"
              }
            ],
            "description": "Gets or sets the priority of the waiting period."
          },
          "signaturePageMessage": {
            "type": "string",
            "nullable": true
          },
          "signatureAcknowledgementText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetupTemplate": {
        "required": [
          "benefitClientEnrollmentSetupId",
          "companyId",
          "isActive",
          "newHireEnrollmentDuration",
          "openEnrollmentEndDate",
          "openEnrollmentStartDate",
          "planEndDate",
          "planStartDate",
          "planYear"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitClientEnrollmentSetupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit client enrollment setup.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId which is required.",
            "format": "uuid"
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the Year property and is required.\r\nAlso, the input for Year should be sanitized.",
            "format": "int32"
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or sets the start date which is required.",
            "format": "date-time"
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or sets the end date which is required.",
            "format": "date-time"
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the start date for enrollment, which is required.",
            "format": "date-time"
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the end date for enrollment, which is required.",
            "format": "date-time"
          },
          "newHireEnrollmentDuration": {
            "type": "integer",
            "description": "Gets or sets the duration for new hire enrollment, which is required.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets boolean value for enrollment."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_DurationTypes": {
        "enum": [
          "1 - Day | Represents a duration measured in days.",
          "2 - Month | Represents a duration measured in months."
        ],
        "type": "string",
        "description": "Specifies the different types of durations available."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitClientEnrollmentSetup": {
        "required": [
          "companyId",
          "newHireEnrollmentDuration",
          "newHireEnrollmentDurationType",
          "openEnrollmentEndDate",
          "openEnrollmentStartDate",
          "planEndDate",
          "planStartDate",
          "planYear",
          "status"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a Guid.",
            "format": "uuid"
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year value which is required.",
            "format": "int32"
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or sets the required start date.",
            "format": "date-time"
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or sets the required end date.",
            "format": "date-time"
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the open enrollment start date which is required.",
            "format": "date-time"
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the open enrollment end date which is required.",
            "format": "date-time"
          },
          "newHireEnrollmentDurationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DurationTypes"
              }
            ],
            "description": "Gets or sets the new hire enrollment duration type to DurationTypes enum."
          },
          "newHireEnrollmentDuration": {
            "type": "integer",
            "description": "Gets or sets the duration for new hire enrollment, which is required.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status of the enrollment setup to Active or Inactive."
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitClientEnrollmentSetupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit client enrollment setup.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId.",
            "format": "uuid"
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or sets the start date.",
            "format": "date-time"
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or sets the stop date for a specific event or task.",
            "format": "date-time"
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the start date for enrollment.",
            "format": "date-time"
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the end date for enrollment.",
            "format": "date-time"
          },
          "newHireEnrollmentDuration": {
            "type": "integer",
            "description": "Gets or sets the duration of new hire enrollment for a course in days.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status of the client enrollment setup to Active or Inactive.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupFilter": {
        "type": "object",
        "properties": {
          "companyGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or initializes the unique identifier of the company, which is nullable.",
            "nullable": true
          },
          "planYears": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets or initializes the plan year as a nullable integer.",
            "nullable": true
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the open enrollment start date which is required.",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the open enrollment end date which is required.",
            "format": "date-time",
            "nullable": true
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or initializes the status of the enrollment setup to Active or Inactive.",
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupListItem": {
        "type": "object",
        "properties": {
          "benefitClientEnrollmentSetupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a row.",
            "format": "uuid"
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the company name with an initial value of an empty string.",
            "nullable": true
          },
          "companyCode": {
            "type": "integer",
            "description": "Gets or sets the CompanyId.",
            "format": "int32"
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the start date for enrollment.",
            "format": "date-time"
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the end date for enrollment.",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status of the enrollment setup to Active or Inactive.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitClientEnrollmentSetupListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateClientEnrollmentSetup": {
        "type": "object",
        "properties": {
          "clientEnrollmentSetupRowId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_NewHireWaitingPeriodType": {
        "enum": [
          "117 - First of the Month Following Date of Hire | No summary available",
          "118 - First of the Month Following 30 Days | No summary available",
          "119 - First of the Month Following 60 Days | No summary available"
        ],
        "type": "string",
        "description": "Represents the different types of New Hire Waiting Period types in the system."
      },
      "BBSI_Benefits_Model_Default_SaveCompanyPlanFlatRateDetail": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyPlanFlatRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate Detail.",
            "format": "uuid",
            "nullable": true
          },
          "planCoverageId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a Benefit Plan Coverage.",
            "format": "int32"
          },
          "planCoverageCode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the coverage code.",
            "nullable": true
          },
          "ageRangeFrom": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthlyPremium": {
            "type": "number",
            "description": "Gets or sets the net total value, which is a nullable decimal.",
            "format": "double"
          },
          "markup": {
            "pattern": "^\\d+(\\.\\d{1,6})?$",
            "type": "number",
            "description": "Gets or sets the markup as a nullable decimal value.",
            "format": "double"
          },
          "markupTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets the specified Enum type is of type MarkupShareTypes."
          },
          "monthlyBilledRates": {
            "type": "number",
            "description": "Gets or sets the monthly billed rates value, which is a nullable decimal.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution as a required decimal value.",
            "format": "double"
          },
          "employerContributionTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets the specified Enum type is of type MarkupShareTypes."
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the markup as a nullable decimal value.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_SaveCompanyPlanFlatRate": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyPlanFlatRateId": {
            "type": "string",
            "description": "Gets or sets CompanyPlanFlatRateId.",
            "format": "uuid",
            "nullable": true
          },
          "planFlatRateId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a company plan flat rate.",
            "format": "int32"
          },
          "rateTier": {
            "pattern": "^(?:\\d{1,10}|\\d{1,9}\\.\\d{1}|\\d{1,8}\\.\\d{2}|\\d{1,7}\\.\\d{3})$",
            "type": "number",
            "description": "Gets or sets the rate tier number with up to 3 decimal places.",
            "format": "double"
          },
          "isAgeBanded": {
            "type": "boolean"
          },
          "planFlatRateItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveCompanyPlanFlatRateDetail"
            },
            "description": "Gets or sets the rate amount with up to 2 decimal places.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_SaveCompanyPlan": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "gets or sets Company Id.",
            "format": "uuid"
          },
          "benefitClassId": {
            "type": "string",
            "description": "gets or sets Benefit Class Id.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "gets or sets Benefit Plan Id.",
            "format": "uuid"
          },
          "planStartDateTime": {
            "type": "string",
            "description": "gets or sets PlanStartDateTime.",
            "format": "date-time"
          },
          "newHireWaitingPeriodId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_NewHireWaitingPeriodType"
              }
            ],
            "description": "gets or sets NewHireWaitingPeriodId."
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether Company Plan Offering is Active."
          },
          "employerContributionTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets EmployerContributionType.",
            "nullable": true
          },
          "employerContribution": {
            "type": "integer",
            "description": "Gets or sets EmployerContribution.",
            "format": "int32",
            "nullable": true
          },
          "markupTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets MarkupType.",
            "nullable": true
          },
          "markup": {
            "type": "number",
            "description": "Gets or sets Markup.",
            "format": "double",
            "nullable": true
          },
          "planFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveCompanyPlanFlatRate"
            },
            "description": "Gets or sets the list of flat rates.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_UpdateCompanyPlan": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyPlanId": {
            "type": "string",
            "description": "gets or sets CompanyPlan Id.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "gets or sets Company Id.",
            "format": "uuid"
          },
          "benefitClassId": {
            "type": "string",
            "description": "gets or sets Benefit Class Id.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "gets or sets Benefit Plan Id.",
            "format": "uuid"
          },
          "planStartDateTime": {
            "type": "string",
            "description": "gets or sets PlanStartDateTime.",
            "format": "date-time"
          },
          "newHireWaitingPeriodId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_NewHireWaitingPeriodType"
              }
            ],
            "description": "gets or sets NewHireWaitingPeriodId."
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether Company Plan Offering is Active."
          },
          "employerContributionTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets EmployerContributionType.",
            "nullable": true
          },
          "employerContribution": {
            "type": "integer",
            "description": "Gets or sets EmployerContribution.",
            "format": "int32",
            "nullable": true
          },
          "markupTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ],
            "description": "Gets or sets MarkupType.",
            "nullable": true
          },
          "markup": {
            "type": "number",
            "description": "Gets or sets Markup.",
            "format": "double",
            "nullable": true
          },
          "planFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveCompanyPlanFlatRate"
            },
            "description": "Gets or sets the list of flat rates.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CompanyPlanFlatRateDetailInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyPlanFlatRateDetailId": {
            "type": "string",
            "format": "uuid"
          },
          "planCoverageId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a Benefit Plan Coverage.",
            "format": "int32"
          },
          "planCoverageCode": {
            "type": "string",
            "description": "Gets or sets the coverage code.",
            "nullable": true
          },
          "ageRangeFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthlyPremium": {
            "type": "number",
            "description": "Gets or sets the net total value, which is a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "markup": {
            "type": "number",
            "description": "Gets or sets the markup as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupTypeId": {
            "type": "integer",
            "description": "Gets or sets the specified Enum type is of type MarkupShareTypes.",
            "format": "int32",
            "nullable": true
          },
          "monthlyBilledRates": {
            "type": "number",
            "description": "Gets or sets the monthly billed rates value, which is a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the Employer Contribution as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerContributionTypeId": {
            "type": "integer",
            "description": "Gets or sets the specified Enum type is of type MarkupShareTypes.",
            "format": "int32",
            "nullable": true
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the markup as a nullable decimal value.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CompanyPlanFlatRateInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyPlanFlatRateId": {
            "type": "string",
            "format": "uuid"
          },
          "planFlatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateTier": {
            "type": "number",
            "description": "Gets or sets the rate tier number with up to 3 decimal places.",
            "format": "double"
          },
          "isAgeBanded": {
            "type": "boolean"
          },
          "planFlatRateItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanFlatRateDetailInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CompanyPlanInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "companyPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the coverage.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitClassId": {
            "type": "string",
            "description": "gets or sets Benefit Class Id.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "gets or sets Benefit Plan Id.",
            "format": "uuid"
          },
          "planStartDateTime": {
            "type": "string",
            "description": "gets or sets PlanStartDateTime.",
            "format": "date-time"
          },
          "newHireWaitingPeriodId": {
            "type": "integer",
            "description": "gets or sets NewHireWaitingPeriodId.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether Company Plan Offering is Active."
          },
          "employerContributionTypeId": {
            "type": "integer",
            "description": "Gets or sets EmployerContributionTypeId.",
            "format": "int32",
            "nullable": true
          },
          "employerContribution": {
            "type": "integer",
            "description": "Gets or sets EmployerContribution.",
            "format": "int32",
            "nullable": true
          },
          "markupTypeId": {
            "type": "integer",
            "description": "Gets or sets MarkupTypeId.",
            "format": "int32",
            "nullable": true
          },
          "markup": {
            "type": "number",
            "description": "Gets or sets Markup.",
            "format": "double",
            "nullable": true
          },
          "planFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CompanyPlanFlatRateInfo"
            },
            "description": "Gets or sets the list of flat rates.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_PlanComparisonDto": {
        "type": "object",
        "properties": {
          "companyPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanComparisonTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanName": {
            "type": "string",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanComparisonTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanComparisonTemplateFields"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CompanyPlanFilter": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "benefitClassIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "benefitPlanIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CompanyFilter": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_DcaMaximumsListItem": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "dcaMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for the DCA (Data Collection Agent) as a Guid value.",
            "format": "uuid"
          },
          "dcaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for a decimal number.",
            "format": "double",
            "nullable": true
          },
          "dcaMaxJoint": {
            "type": "number",
            "description": "Gets or sets the maximum joint value for a decimal number.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_DcaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_DcaMaximumsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateDcaMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean value indicating if the entity is deleted.",
            "nullable": true
          },
          "dcaMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for the DCA (Data Collection Agent) as a Guid value.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "dcaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for a decimal data type.",
            "format": "double"
          },
          "dcaMaxJoint": {
            "type": "number",
            "description": "Gets or sets the maximum joint value for Direct Current Ammeter (DCA).",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateDcaMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is deleted."
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "dcaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for a decimal data type.",
            "format": "double"
          },
          "dcaMaxJoint": {
            "type": "number",
            "description": "Gets or sets the maximum joint value for Direct Current Ammeter (DCA).",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_DcaMaximumsInfo": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "dcaMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for a DCAMaximumId property.",
            "format": "uuid"
          },
          "dcaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for a decimal data type.",
            "format": "double"
          },
          "dcaMaxJoint": {
            "type": "number",
            "description": "Gets or sets the maximum joint value for Direct Current Ammeter (DCA).",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Database_DependentRelationships": {
        "enum": [
          "147 - Domestic Partner (SPS) | Domestic Partner (SPS).",
          "148 - Child (CHD) | Child (CHD).",
          "149 - Spouse | Spouse."
        ],
        "type": "string",
        "description": "Represents different types of relationships for dependents."
      },
      "BBSI_Benefits_Model_Default_UpdateDependent": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "dependentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the dependent.",
            "format": "uuid"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the first name of the dependent.",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the last name of the dependent.",
            "nullable": true
          },
          "genderId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Genders"
              }
            ],
            "description": "Gets or sets the gender of the dependent."
          },
          "relationshipId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DependentRelationships"
              }
            ],
            "description": "Gets or sets the relationship type of the dependent."
          },
          "ssn": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the SSN of the dependent.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the dependent."
          },
          "homePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the home phone number of the dependent.",
            "nullable": true
          },
          "mobilePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the mobile phone number of the dependent.",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the primary address line of the dependent.",
            "nullable": true
          },
          "addressLine2": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the secondary address line of the dependent.",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the city of the dependent's address.",
            "nullable": true
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the state of the dependent's address.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the zip code of the dependent's address.",
            "nullable": true
          },
          "county": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the county of the dependent's address.",
            "nullable": true
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use the employee's address for the dependent.",
            "nullable": true
          },
          "isDisable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is disabled.",
            "nullable": true
          },
          "isTobaccoUser": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is a tobacco user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for updating a dependent's information."
      },
      "BBSI_Benefits_Model_Default_CreateDependent": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee associated with the dependent.",
            "format": "uuid"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the first name of the dependent.",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the last name of the dependent.",
            "nullable": true
          },
          "genderId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Genders"
              }
            ],
            "description": "Gets or sets the gender of the dependent."
          },
          "relationshipId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DependentRelationships"
              }
            ],
            "description": "Gets or sets the relationship type of the dependent."
          },
          "ssn": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the SSN of the dependent.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the dependent."
          },
          "homePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the home phone number of the dependent.",
            "nullable": true
          },
          "mobilePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the mobile phone number of the dependent.",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the primary address line of the dependent.",
            "nullable": true
          },
          "addressLine2": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the secondary address line of the dependent.",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the city of the dependent's address.",
            "nullable": true
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the state of the dependent's address.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the zip code of the dependent's address.",
            "nullable": true
          },
          "county": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the county of the dependent's address.",
            "nullable": true
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use the employee's address for the dependent.",
            "nullable": true
          },
          "isDisable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is disabled.",
            "nullable": true
          },
          "isTobaccoUser": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is a tobacco user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for creating a new dependent."
      },
      "BBSI_Benefits_Model_Default_DependentInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "dependentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the dependent.",
            "format": "uuid"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee associated with the dependent.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of the dependent.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of the dependent.",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "Gets or sets the gender of the dependent.",
            "format": "int32"
          },
          "relationshipId": {
            "type": "integer",
            "description": "Gets or sets the relationship type of the dependent.",
            "format": "int32"
          },
          "ssn": {
            "type": "string",
            "description": "Gets or sets the SSN of the dependent.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the dependent."
          },
          "homePhoneNo": {
            "type": "string",
            "description": "Gets or sets the home phone number of the dependent.",
            "nullable": true
          },
          "mobilePhoneNo": {
            "type": "string",
            "description": "Gets or sets the mobile phone number of the dependent.",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "description": "Gets or sets the primary address line of the dependent.",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "description": "Gets or sets the secondary address line of the dependent.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Gets or sets the city of the dependent's address.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Gets or sets the state of the dependent's address.",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Gets or sets the zip code of the dependent's address.",
            "nullable": true
          },
          "county": {
            "type": "string",
            "description": "Gets or sets the county of the dependent's address.",
            "nullable": true
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use the employee's address for the dependent.",
            "nullable": true
          },
          "isDisable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is disabled.",
            "nullable": true
          },
          "isTobaccoUser": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is a tobacco user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for returning dependent information."
      },
      "BBSI_Benefits_Model_Default_Dependents_Dtos_DependentReportListItem": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the EmployeeId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "employeeStatus": {
            "type": "boolean",
            "description": "Gets or sets the status of the employee.",
            "nullable": true
          },
          "country": {
            "type": "integer",
            "description": "Gets or sets the country as a nullable short value.",
            "format": "int32",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean value indicating if the object is disabled.",
            "nullable": true
          },
          "dependentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the dependent.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of a person. Defaults to an empty string.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of a person. Defaults to an empty string.",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Gets or sets the gender as a string value.",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "description": "Gets or sets the relation string. Default value is an empty string.",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Gets or sets the date of birth as a string. Default value is an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Dependents_Dtos_DependentReportListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_Dependents_Dtos_DependentFilter": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets the year value, which can be nullable.",
            "format": "int32",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the Employee ID as a Guid.",
            "format": "uuid",
            "nullable": true
          },
          "jobStatus": {
            "type": "boolean",
            "description": "Gets or sets the job status as a nullable boolean value.",
            "nullable": true
          },
          "relationship": {
            "type": "integer",
            "description": "Gets or sets the relationship ID as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "type": "integer",
            "description": "Gets or sets the state as a nullable byte.",
            "format": "int32",
            "nullable": true
          },
          "search": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the search query string with a maximum length defined by DataConstants.LengthGeneralInput.",
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_Dependents_Dtos_DependentListItem": {
        "type": "object",
        "properties": {
          "dependentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the dependent.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of a person. Defaults to an empty string.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of a person. Defaults to an empty string.",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Gets or sets the gender as a string value.",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "description": "Gets or sets the relation string. Default value is an empty string.",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Gets or sets the date of birth as a string. Default value is an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_Dependents_Dtos_DependentListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Dependents_Dtos_DependentListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateEmployeeDeductionAdjustment": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeeDeductionAdjustmentId": {
            "type": "string",
            "description": "Gets or sets the employee deduction adjustment.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the benefit plan name.",
            "format": "uuid"
          },
          "startDateTime": {
            "type": "string",
            "description": "Gets or sets the start date.",
            "format": "date-time"
          },
          "period": {
            "type": "string",
            "description": "Gets or sets the period.",
            "nullable": true
          },
          "totalBillAmount": {
            "type": "number",
            "description": "Gets or sets the total bill amount.",
            "format": "double"
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the employee contribution.",
            "format": "double"
          },
          "companyContribution": {
            "type": "number",
            "description": "Gets or sets the company contribution.",
            "format": "double"
          },
          "cycles": {
            "type": "integer",
            "description": "Gets or sets the cycles.",
            "format": "int32"
          },
          "cyclesBilled": {
            "type": "integer",
            "description": "Gets or sets the cycle billed.",
            "format": "int32"
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the notes.",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether trur or false."
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateEmployeeBenefits": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeeInfoId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee's information.",
            "format": "uuid"
          },
          "taxEligibilityId": {
            "type": "integer",
            "description": "Gets or sets the TaxStatus and property is of type TaxStatus enum.",
            "format": "int32"
          },
          "benefitClassId": {
            "type": "string",
            "description": "Gets or sets the tier number, which is nullable.",
            "format": "uuid"
          },
          "employeeDeductionAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateEmployeeDeductionAdjustment"
            },
            "description": "Gets or sets the list of employee deduction adjustments.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateEmployeeInfo": {
        "type": "object",
        "properties": {
          "employeeInfoId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee information.",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an organization.",
            "format": "uuid"
          },
          "companyId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "int32"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "taxStatus": {
            "type": "integer",
            "description": "Gets or sets the value of TaxStatus and property is a valid member of the TaxStatus enum.",
            "format": "int32"
          },
          "tierNumber": {
            "type": "integer",
            "description": "Gets or sets the tier number, which is nullable integer.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeDeductionAdjustmentListItem": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeeDeductionAdjustmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee deduction adjustment.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the benefit plan id.",
            "format": "uuid"
          },
          "benefitPlanName": {
            "type": "string",
            "description": "Gets or sets the benefit plan name.",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "description": "Gets or sets the start date.",
            "format": "date-time",
            "nullable": true
          },
          "period": {
            "type": "string",
            "description": "Gets or sets the period.",
            "nullable": true
          },
          "totalBillAmount": {
            "type": "number",
            "description": "Gets or sets the total bill amount.",
            "format": "double"
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the employee contribution.",
            "format": "double"
          },
          "companyContribution": {
            "type": "number",
            "description": "Gets or sets the company contribution.",
            "format": "double"
          },
          "cycles": {
            "type": "integer",
            "description": "Gets or sets the cycles.",
            "format": "int32"
          },
          "cyclesBilled": {
            "type": "integer",
            "description": "Gets or sets the cycles billed.",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "description": "Gets or sets the notes.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeBenefitsInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeeInfoId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee information.",
            "format": "uuid"
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the employee name.",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "taxEligibilityId": {
            "type": "integer",
            "description": "Gets or sets the tax status of an entity.",
            "format": "int32"
          },
          "benefitClassId": {
            "type": "string",
            "description": "Gets or sets the tier number, which is nullable.",
            "format": "uuid",
            "nullable": true
          },
          "employeeCode": {
            "type": "integer",
            "description": "Gets or sets the employee id.",
            "format": "int32"
          },
          "employeeDeductionAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionAdjustmentListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeBenefitsFilter": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "nullable": true
          },
          "employeeStatuses": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "employeeTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "benefitClasses": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "taxEligibilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeBenefitsListItem": {
        "type": "object",
        "properties": {
          "employeeInfoId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee information.",
            "format": "uuid"
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the employee name.",
            "nullable": true
          },
          "employeeCode": {
            "type": "integer",
            "description": "Gets or sets the employee id.",
            "format": "int32"
          },
          "companyCode": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "nullable": true
          },
          "employeeStatus": {
            "type": "string",
            "description": "Gets or sets the status of the employee.",
            "nullable": true
          },
          "employeeType": {
            "type": "string",
            "description": "Gets or sets the type of the employee.",
            "nullable": true
          },
          "benefitClass": {
            "type": "string",
            "description": "Gets or sets the type of the employee.",
            "nullable": true
          },
          "taxEligibility": {
            "type": "string",
            "description": "Gets or sets the tax status of an entity.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeBenefitsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateEmployeeDeductionFrequency": {
        "required": [
          "annualMaximumDeductionsId",
          "companyId",
          "employeeDeductionFrequencyId",
          "isActive",
          "payGroupId"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeeDeductionFrequencyId": {
            "type": "string",
            "description": "Gets or sets the EmployeeDeductionFrequencyId which is required.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId which is required.",
            "format": "uuid"
          },
          "payGroupId": {
            "type": "integer",
            "description": "Gets or sets the frequency type of the company.",
            "format": "int32"
          },
          "annualMaximumDeductionsId": {
            "type": "integer",
            "description": "Gets or sets the maximum deductions allowed.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateEmployeeDeductionFrequency": {
        "required": [
          "annualMaximumDeductionsId",
          "companyId",
          "isActive",
          "payGroupId"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId which is required.",
            "format": "uuid"
          },
          "payGroupId": {
            "type": "integer",
            "description": "Gets or sets the frequency type of the company.",
            "format": "int32"
          },
          "annualMaximumDeductionsId": {
            "type": "integer",
            "description": "Gets or sets the maximum deductions value that is required.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeeDeductionFrequencyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company deduction frequency.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "uuid"
          },
          "payGroupId": {
            "type": "integer",
            "description": "Gets or sets the base type of the frequency code for a company.",
            "format": "int32"
          },
          "annualMaximumDeductionsId": {
            "type": "integer",
            "description": "Gets or sets the maximum deductions allowed.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyFilter": {
        "type": "object",
        "properties": {
          "companyGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "payGroupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "annualMaxDeductionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyListItem": {
        "type": "object",
        "properties": {
          "employeeDeductionFrequencyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company deduction frequency.",
            "format": "uuid"
          },
          "companyCode": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "payGroupName": {
            "type": "string",
            "description": "Gets or sets the base type of the frequency code for a company.",
            "nullable": true
          },
          "annualMaximumDeduction": {
            "type": "string",
            "description": "Gets or sets the maximum deductions allowed.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDeductionFrequencyListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeLifeEventListItem": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "eventType": {
            "type": "integer",
            "description": "Gets or sets the type of event.",
            "format": "int32"
          },
          "eventSubType": {
            "type": "integer",
            "description": "Gets or sets the event sub type as an integer value.",
            "format": "int32"
          },
          "lifeEventDate": {
            "type": "string",
            "description": "Gets or sets the date and time of a life event.",
            "format": "date-time"
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether an item is approved."
          },
          "benefitEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date of a benefit, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "dependent": {
            "type": "string",
            "description": "Gets or sets the dependent property, which can be null.",
            "nullable": true
          },
          "dependentRelation": {
            "type": "integer",
            "description": "Gets or sets the dependent relation, which can be null or an integer value.\r\nDefault value is 0.",
            "format": "int32",
            "nullable": true
          },
          "documentTitle": {
            "type": "string",
            "description": "Gets or sets the document title. The value is initialized to null and should be set to a non-null value before accessing it.",
            "nullable": true
          },
          "uploadDocumentUrl": {
            "type": "string",
            "description": "Gets or sets the URL for uploading a document. The URL is initialized to null and must be set before use.",
            "nullable": true
          },
          "status": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the status is true or false, default value is false."
          },
          "cancelled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the operation is cancelled.\r\nDefault value is false."
          },
          "dateProcessed": {
            "type": "string",
            "description": "Gets or sets the date and time when the processing was completed.",
            "format": "date-time",
            "nullable": true
          },
          "employeeLifeEventId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee life event.",
            "format": "uuid"
          },
          "approvedDate": {
            "type": "string",
            "description": "Gets or sets the approved date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the cancellation occurred.\r\nThis property is nullable.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployeeLifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeLifeEventListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateEmployeeLifeEvents": {
        "type": "object",
        "properties": {
          "lifeEventId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a life event.",
            "format": "uuid"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the EmployeeId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "eventType": {
            "type": "integer",
            "description": "Gets or sets the event type.",
            "format": "int32"
          },
          "eventSubType": {
            "type": "integer",
            "description": "Gets or sets the event sub type.",
            "format": "int32"
          },
          "lifeEventDate": {
            "type": "string",
            "description": "Gets or sets the date of a life event.",
            "format": "date-time"
          },
          "uploadDocumentUrl": {
            "type": "string",
            "description": "Gets or sets the URL of the document being uploaded.",
            "nullable": true
          },
          "uploadDocumentDate": {
            "type": "string",
            "description": "Gets or sets the document upload date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "dateSubmitted": {
            "type": "string",
            "description": "Gets or sets the date when the submission was made.",
            "format": "date-time",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the approval is done."
          },
          "approvedDate": {
            "type": "string",
            "description": "Gets or sets the date when the item was approved.",
            "format": "date-time",
            "nullable": true
          },
          "processDate": {
            "type": "string",
            "description": "Gets or sets the date when the process was completed.",
            "format": "date-time",
            "nullable": true
          },
          "benefitEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the Benefit Effective Date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "dependentId": {
            "type": "string",
            "description": "Gets or sets the Dependent ID.",
            "format": "uuid",
            "nullable": true
          },
          "dependentLastName": {
            "type": "string",
            "description": "Gets or sets the dependent's last name.",
            "nullable": true
          },
          "dependentFirstName": {
            "type": "string",
            "description": "Gets or sets the dependent's first name.",
            "nullable": true
          },
          "dependentGender": {
            "type": "integer",
            "description": "Gets or sets the gender of the dependent.",
            "format": "int32",
            "nullable": true
          },
          "dependentRelationCCodeId": {
            "type": "integer",
            "description": "Gets or sets the Dependent Relation Code ID.",
            "format": "int32",
            "nullable": true
          },
          "dependentSSN": {
            "type": "string",
            "description": "Gets or sets the dependent's Social Security Number.",
            "nullable": true
          },
          "dependentDateOfBirth": {
            "type": "string",
            "description": "Gets or sets the dependent's date of birth.",
            "nullable": true
          },
          "dependentChildCourt": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the individual has a dependent child court case."
          },
          "dependentDisabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the dependent is disabled."
          },
          "isDependentAdded": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a dependent is added."
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets property representing comments with a default value of null.",
            "nullable": true
          },
          "cancelled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the operation is cancelled."
          },
          "cancelledDate": {
            "type": "string",
            "description": "Gets or sets the date when the item was cancelled.",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the start date for open enrollment.",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the Open Enrollment End Date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "createdByUserID": {
            "type": "integer",
            "description": "Gets or sets the ID of the user who created the entity.",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the created date of the object.",
            "format": "date-time",
            "nullable": true
          },
          "unlockWholeWizard": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the whole wizard should be unlocked."
          },
          "updatedByUserId": {
            "type": "integer",
            "description": "Gets or sets the ID of the user who updated the entity. Can be null.",
            "format": "int32",
            "nullable": true
          },
          "documentTitle": {
            "type": "string",
            "description": "Gets or sets the document title.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateEmployeeLifeEvent": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the EmployeeId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "eventType": {
            "type": "integer",
            "description": "Gets or sets the type of the event.",
            "format": "int32"
          },
          "eventSubType": {
            "type": "integer",
            "description": "Gets or sets the event sub type.",
            "format": "int32"
          },
          "lifeEventDate": {
            "type": "string",
            "description": "Gets or sets the date and time of a life event.",
            "format": "date-time"
          },
          "uploadDocumentUrl": {
            "type": "string",
            "description": "Gets or sets the URL for uploading a document. The URL can be null.",
            "nullable": true
          },
          "uploadDocumentDate": {
            "type": "string",
            "description": "Gets or sets the date and time when a document was uploaded.\r\nThis property allows for a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "dateSubmitted": {
            "type": "string",
            "description": "Gets or sets the date and time when the submission was made, nullable.",
            "format": "date-time",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether an item is approved."
          },
          "approvedDate": {
            "type": "string",
            "description": "Gets or sets the approved date, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "processDate": {
            "type": "string",
            "description": "Gets or sets the process date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "benefitEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date of a benefit, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "dependentId": {
            "type": "string",
            "description": "Gets or sets the dependent ID as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "dependentLastName": {
            "type": "string",
            "description": "Gets or sets the dependent's last name. Can be null.",
            "nullable": true
          },
          "dependentFirstName": {
            "type": "string",
            "description": "Gets or sets the dependent's first name. Can be null.",
            "nullable": true
          },
          "dependentGender": {
            "type": "integer",
            "description": "Gets or sets the gender of the dependent as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "dependentRelationCCodeId": {
            "type": "integer",
            "description": "Gets or sets the nullable integer value representing the Dependent Relation C Code Id.",
            "format": "int32",
            "nullable": true
          },
          "dependentSSN": {
            "type": "string",
            "description": "Gets or sets the dependent's Social Security Number.",
            "nullable": true
          },
          "dependentDateOfBirth": {
            "type": "string",
            "description": "Gets or sets the dependent's date of birth. Can be null.",
            "nullable": true
          },
          "dependentChildCourt": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether individual has a dependent child court."
          },
          "dependentDisabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is disabled."
          },
          "isDependentAdded": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a dependent is added."
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets the comments for a specific item. Can be null.",
            "nullable": true
          },
          "cancelled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the operation has been cancelled."
          },
          "cancelledDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the event was cancelled, nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the start date of the open enrollment period.",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the end date of the open enrollment period.",
            "format": "date-time",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "description": "Gets or sets the ID of the user who created the entity.",
            "format": "int32"
          },
          "unlockWholeWizard": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the whole wizard is unlocked."
          },
          "updatedByUserId": {
            "type": "integer",
            "description": "Gets or sets the user ID of the user who last updated the entity. Can be null.",
            "format": "int32",
            "nullable": true
          },
          "documentTitle": {
            "type": "string",
            "description": "Gets or sets the document title. Can be null.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployeeLifeEventsInfo": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "eventType": {
            "type": "integer",
            "description": "Gets or sets the event type.",
            "format": "int32"
          },
          "eventSubType": {
            "type": "integer",
            "description": "Gets or sets the event sub type as an integer value.",
            "format": "int32"
          },
          "lifeEventDate": {
            "type": "string",
            "description": "Gets or sets the date and time of a life event.",
            "format": "date-time"
          },
          "uploadDocumentUrl": {
            "type": "string",
            "description": "Gets or sets the URL for uploading a document.",
            "nullable": true
          },
          "uploadDocumentDate": {
            "type": "string",
            "description": "Gets or sets the date when a document was uploaded.",
            "format": "date-time",
            "nullable": true
          },
          "dateSubmitted": {
            "type": "string",
            "description": "Gets or sets the date and time when the submission was made, nullable.",
            "format": "date-time",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether an item is approved."
          },
          "approvedDate": {
            "type": "string",
            "description": "Gets or sets the approved date, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "processDate": {
            "type": "string",
            "description": "Gets or sets the process date as a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "benefitEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date of a benefit, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "dependentId": {
            "type": "integer",
            "description": "Gets or sets the dependent ID which is nullable.",
            "format": "int32",
            "nullable": true
          },
          "dependentLastName": {
            "type": "string",
            "description": "Gets or sets the last name of the dependent. This property is initialized to null and should be set to a non-null value before accessing it.",
            "nullable": true
          },
          "dependentFirstName": {
            "type": "string",
            "description": "Gets or sets the first name of the dependent. This property is initialized to null and should be set to a non-null value before accessing it.",
            "nullable": true
          },
          "dependentGender": {
            "type": "integer",
            "description": "Gets or sets the gender of a dependent as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "dependentRelationCCodeId": {
            "type": "integer",
            "description": "Gets or sets the nullable integer value representing the Dependent Relation C Code Id.",
            "format": "int32",
            "nullable": true
          },
          "dependentSSN": {
            "type": "string",
            "description": "Gets or sets the dependent's Social Security Number.",
            "nullable": true
          },
          "dependentDateOfBirth": {
            "type": "string",
            "description": "Gets or sets the dependent's date of birth. This property is initialized to null and cannot be null during runtime.",
            "nullable": true
          },
          "dependentChildCourt": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the individual has a dependent child court."
          },
          "dependentDisabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is disabled."
          },
          "isDependentAdded": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a dependent is added."
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets the comments for a specific item.",
            "nullable": true
          },
          "cancelled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the operation has been cancelled."
          },
          "cancelledDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the event was cancelled, nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the start date for open enrollment, which is nullable and represented as a DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the end date of the open enrollment period.",
            "format": "date-time",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "description": "Gets or sets the user ID of the creator of the entity.",
            "format": "int32"
          },
          "unlockWholeWizard": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the whole wizard is unlocked."
          },
          "updatedByUserId": {
            "type": "integer",
            "description": "Gets or sets the nullable integer value representing the user ID who updated the entity.",
            "format": "int32",
            "nullable": true
          },
          "documentTitle": {
            "type": "string",
            "description": "Gets or sets the document title. The value is initialized to null and must be set to a non-null value before accessing.",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "description": "Gets or sets the date and time of the action.",
            "format": "date-time"
          },
          "benefitPlanTypesCommaSeparated": {
            "type": "string",
            "description": "Gets or sets new property for comma-separated Plan Types.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Database_EmployeePlanEnrollmentType": {
        "enum": [
          "161 - Active | No summary available",
          "162 - COBRA | No summary available"
        ],
        "type": "string"
      },
      "BBSI_Benefits_Database_EmployeePlanEnrollmentStatus": {
        "enum": [
          "158 - Active | No summary available",
          "159 - Pending | No summary available",
          "160 - Inactive | No summary available"
        ],
        "type": "string"
      },
      "BBSI_Benefits_Model_Default_CoverageDependentInput": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeePlanDependentId": {
            "type": "integer",
            "description": "Gets or sets the employee plan dependent id.",
            "format": "int32"
          },
          "dependentId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the dependent.",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of the dependent.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of the dependent.",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "Gets or sets the gender of the dependent.",
            "format": "int32"
          },
          "relationshipId": {
            "type": "integer",
            "description": "Gets or sets the relationship type of the dependent.",
            "format": "int32"
          },
          "ssn": {
            "type": "string",
            "description": "Gets or sets the SSN of the dependent.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the dependent."
          },
          "isDisable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is disabled."
          }
        },
        "additionalProperties": false,
        "description": "Input DTO for coverage Dependent information."
      },
      "BBSI_Benefits_Model_Default_SubmitEmployeePlanEnrollment": {
        "type": "object",
        "properties": {
          "employeeBenefitId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee benefit.",
            "format": "uuid"
          },
          "companyPlanId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the company plan.",
            "format": "int32"
          },
          "enrollmentTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployeePlanEnrollmentType"
              }
            ],
            "description": "Gets or sets the enrollment type.",
            "nullable": true
          },
          "statusId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployeePlanEnrollmentStatus"
              }
            ],
            "description": "Gets or sets the status of employee benefits enrollment."
          },
          "enrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the coverage start date.",
            "format": "date-time",
            "nullable": true
          },
          "enrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the coverage end date.",
            "format": "date-time",
            "nullable": true
          },
          "coverageEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the coverage effective date.",
            "format": "date-time"
          },
          "coverageTierId": {
            "type": "integer",
            "description": "Gets or sets the coverage tier id.",
            "format": "int32",
            "nullable": true
          },
          "coverageAmount": {
            "type": "number",
            "description": "Gets or sets the coverage amount.",
            "format": "double",
            "nullable": true
          },
          "coverageDependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CoverageDependentInput"
            },
            "description": "Gets or sets the dependents info for Dental and Vision plan types.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generates Employee Plan Enrollment Info class."
      },
      "BBSI_Benefits_Model_Default_UpdateEmployeePlanStatus": {
        "type": "object",
        "properties": {
          "employeePlanId": {
            "type": "integer",
            "description": "Gets the Id of Employee Plan.",
            "format": "int32"
          },
          "statusId": {
            "type": "integer",
            "description": "Gets the status of Employee Plan.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This is the input to take action on employee plan."
      },
      "BBSI_Benefits_Model_Default_EmployeeCostCalculationInput": {
        "type": "object",
        "properties": {
          "companyPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "coverageAmount": {
            "type": "integer",
            "format": "int32"
          },
          "enrollmentYear": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeePlanTypeInfo": {
        "type": "object",
        "properties": {
          "benefitPlanTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanTypeName": {
            "type": "string",
            "nullable": true
          },
          "enrollmentPlanMessage": {
            "type": "string",
            "nullable": true
          },
          "isWaived": {
            "type": "boolean"
          },
          "waiveReason": {
            "type": "string",
            "nullable": true
          },
          "waivedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "version": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeePlanBeneficiaryInfo": {
        "type": "object",
        "properties": {
          "employeePlanBeneficiaryId": {
            "type": "string",
            "format": "uuid"
          },
          "beneficiaryId": {
            "type": "integer",
            "format": "int32"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeePlanDependentInfo": {
        "type": "object",
        "properties": {
          "employeePlanDependentId": {
            "type": "string",
            "format": "uuid"
          },
          "dependentId": {
            "type": "integer",
            "format": "int32"
          },
          "relationshipName": {
            "type": "string",
            "nullable": true
          },
          "relationshipId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "version": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EnrollmentPlanInfo": {
        "type": "object",
        "properties": {
          "employeePlanId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanComparisonTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isElected": {
            "type": "boolean"
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "costPerPayPeriod": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "providerSearchUrl": {
            "type": "string",
            "nullable": true
          },
          "isBeneficiaryVisible": {
            "type": "boolean"
          },
          "isBenefitFormAvailable": {
            "type": "boolean"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "electedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "minCoverageAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxCoverageAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "coverageIncrement": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "guaranteedIssueAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dependentCoverageLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "selectedCoverageAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "coverageTierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanBeneficiaryInfo"
            },
            "nullable": true
          },
          "dependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanDependentInfo"
            },
            "nullable": true
          },
          "version": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeeBeneficiaryInfo": {
        "type": "object",
        "properties": {
          "beneficiaryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeeDependentInfo": {
        "type": "object",
        "properties": {
          "dependentId": {
            "type": "integer",
            "format": "int32"
          },
          "relationShipId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeePlanTypePlansInfo": {
        "type": "object",
        "properties": {
          "employeePlanType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeePlanTypeInfo"
              }
            ],
            "nullable": true
          },
          "employeePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentPlanInfo"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBeneficiaryInfo"
            },
            "nullable": true
          },
          "dependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeDependentInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CoverageDependentInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "employeePlanDependentId": {
            "type": "integer",
            "description": "Gets or sets the employee plan dependent id.",
            "format": "int32"
          },
          "dependentId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the dependent.",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of the dependent.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of the dependent.",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "Gets or sets the gender of the dependent.",
            "format": "int32"
          },
          "relationshipId": {
            "type": "integer",
            "description": "Gets or sets the relationship type of the dependent.",
            "format": "int32"
          },
          "ssn": {
            "type": "string",
            "description": "Gets or sets the SSN of the dependent.",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "description": "Gets or sets the date of birth of the dependent."
          },
          "isDisable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the dependent is disabled.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for returning dependent information."
      },
      "BBSI_Benefits_Model_Default_CoverageDetailsInfo": {
        "type": "object",
        "properties": {
          "coverageAmount": {
            "type": "number",
            "description": "Gets or sets the coverage amount.",
            "format": "double",
            "nullable": true
          },
          "coverageEffectiveDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of coverage effective dates.",
            "nullable": true
          },
          "coverageTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of coverage tiers.",
            "nullable": true
          },
          "coverageDependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CoverageDependentInfo"
            },
            "description": "Gets or sets the list of enrolled dependent info.",
            "nullable": true
          },
          "eligibleCoverageDependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CoverageDependentInfo"
            },
            "description": "Gets or sets the list of eligible dependent info.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generates class which holds coverage details of selected Benefit Plan to enroll."
      },
      "BBSI_Benefits_Database_BeneficiaryTypes": {
        "enum": [
          "150 - Primary | No summary available",
          "151 - Contingent | No summary available"
        ],
        "type": "string"
      },
      "BBSI_Benefits_Model_Default_SaveEmployeePlanBeneficiary": {
        "type": "object",
        "properties": {
          "beneficiaryId": {
            "type": "integer",
            "format": "int32"
          },
          "typeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BeneficiaryTypes"
              }
            ]
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_SaveEmployeePlan": {
        "type": "object",
        "properties": {
          "companyPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "enrollmentYear": {
            "type": "integer",
            "format": "int32"
          },
          "coverageAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SaveEmployeePlanBeneficiary"
            },
            "nullable": true
          },
          "dependents": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeePlanFilteredOptionsInfo": {
        "type": "object",
        "properties": {
          "companyDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "nullable": true
          },
          "employeeDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "nullable": true
          },
          "planYears": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "nullable": true
          },
          "benefitPlanNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "nullable": true
          },
          "planTypeNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeePlanFilter": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Ids for Companies.",
            "nullable": true
          },
          "employeeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Ids for Employees.",
            "nullable": true
          },
          "planYears": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Plan Years.",
            "nullable": true
          },
          "planNameIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Ids for Benefit plan names.",
            "nullable": true
          },
          "planTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Ids for Benefit plan types.",
            "nullable": true
          },
          "coverageTierIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Ids for Coverage Tiers.",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "description": "Gets the start of the effective date range.",
            "format": "date-time",
            "nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "Gets the end of the effective date range.",
            "format": "date-time",
            "nullable": true
          },
          "enrollmentStartDate": {
            "type": "string",
            "description": "Gets the start of the enrollment date range.",
            "format": "date-time",
            "nullable": true
          },
          "enrollmentEndDate": {
            "type": "string",
            "description": "Gets the end of the enrollment date range.",
            "format": "date-time",
            "nullable": true
          },
          "statusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets list of Statuses.",
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_SaveEmployeePlanType": {
        "type": "object",
        "properties": {
          "benefitPlanTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "enrollmentYear": {
            "type": "integer",
            "format": "int32"
          },
          "isWaived": {
            "type": "boolean"
          },
          "waiveReason": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeeBenefitPlanInfo": {
        "type": "object",
        "properties": {
          "companyPlanId": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the company plan.",
            "format": "int32"
          },
          "benefitPlanName": {
            "type": "string",
            "description": "Gets or sets the benefit plan name.",
            "nullable": true
          },
          "benefitPlanBaseTypeId": {
            "type": "integer",
            "description": "Gets or sets the benefit plan base type id.",
            "format": "int32"
          },
          "enrollmentTypeId": {
            "type": "integer",
            "description": "Gets or sets the enrollment type.",
            "format": "int32",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "description": "Gets or sets the status of employee benefits enrollment.",
            "format": "int32",
            "nullable": true
          },
          "enrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the coverage start date.",
            "format": "date-time",
            "nullable": true
          },
          "enrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the coverage end date.",
            "format": "date-time",
            "nullable": true
          },
          "coverageTierId": {
            "type": "integer",
            "description": "Gets or sets the coverage tier id.",
            "format": "int32",
            "nullable": true
          },
          "coverageAmount": {
            "type": "number",
            "description": "Gets or sets the coverage amount.",
            "format": "double",
            "nullable": true
          },
          "coverageEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date time.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generates class which holds eligible Benefit Plans to enroll."
      },
      "BBSI_Benefits_Model_Default_EmployeePlanEnrollmentInfo": {
        "type": "object",
        "properties": {
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeBenefitPlanInfo"
            },
            "description": "Gets or sets the all the eligible benefit plans.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generates Employee Plan Enrollment Info class."
      },
      "BBSI_Benefits_Model_Default_SubmitEmployeePlan": {
        "type": "object",
        "properties": {
          "enrollmentYear": {
            "type": "integer",
            "format": "int32"
          },
          "signatureImage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeeLifeEventPlanTypeInfo": {
        "required": [
          "companyId",
          "employeeId"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "DTO for rejecting a Life Event."
      },
      "BBSI_Benefits_Model_Default_EmployeeCompanyFilter": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets list of Ids for Companies.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeeProfileAddressInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployeeProfileInfo": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ]
          },
          "socialSecurityNumber": {
            "type": "string",
            "nullable": true
          },
          "homeTelephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "mobilePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "personalEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "originalHireDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "residentialAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeProfileAddressInfo"
              }
            ],
            "nullable": true
          },
          "mailingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployeeProfileAddressInfo"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_EmployerLifeEventsListItem": {
        "type": "object",
        "properties": {
          "lifeEventId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a life event.",
            "format": "uuid"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "employerId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employer.",
            "format": "uuid"
          },
          "eventType": {
            "type": "integer",
            "description": "Gets or sets the event type.",
            "format": "int32"
          },
          "subEventType": {
            "type": "integer",
            "description": "Gets or sets the sub event type. Default value is 0.",
            "format": "int32",
            "nullable": true
          },
          "documentTitle": {
            "type": "string",
            "description": "Gets or sets the document title. The value is initialized to null and must be set before accessing.",
            "nullable": true
          },
          "lifeEventDate": {
            "type": "string",
            "description": "Gets or sets the date of a life event.",
            "format": "date-time"
          },
          "uploadDocumentUrl": {
            "type": "string",
            "description": "Gets or sets the URL of the document being uploaded.",
            "nullable": true
          },
          "dependentFullName": {
            "type": "string",
            "description": "Gets or sets the dependent's full name.",
            "nullable": true
          },
          "dependentRelation": {
            "type": "integer",
            "description": "Gets or sets the dependent relation, which can be null or an integer value.\r\nDefault value is 0.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether status is set, default value is false."
          },
          "cancelled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the operation is cancelled."
          },
          "processDate": {
            "type": "string",
            "description": "Gets or sets the date when the process was completed.",
            "format": "date-time",
            "nullable": true
          },
          "approvedDate": {
            "type": "string",
            "description": "Gets or sets the approved date, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "type": "string",
            "description": "Gets or sets the date and time when the event was cancelled, nullable.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EmployerLifeEventsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EmployerLifeEventsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EmployerLifeEventsInfo": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "description": "Gets or sets the Life Event ID.",
            "format": "int32"
          },
          "benefitPlanGroupId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Group ID.",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the created date for an object.",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "integer",
            "description": "Gets or sets the ID of the user who created the entity.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_ApproveEmployerLifeEvents": {
        "type": "object",
        "properties": {
          "lifeEventId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a life event.",
            "format": "uuid"
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the start date for open enrollment.",
            "format": "date-time"
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the end date of the open enrollment period.",
            "format": "date-time"
          },
          "benefitEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date of a benefit.",
            "format": "date-time"
          },
          "unlockWholeWizard": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the whole wizard is unlocked."
          },
          "benefitPlansGroupToUnlock": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets or sets the list of benefit plan group IDs that need to be unlocked.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a sealed class for approving employer life events."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentPlanMessage": {
        "required": [
          "benefitEnrollmentPlanMessageId",
          "message",
          "planYear",
          "status",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitEnrollmentPlanMessageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Enrollment Plan Message.",
            "format": "uuid"
          },
          "typeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status value for Enrollment Plan Message as Active or Inactive."
          },
          "message": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Enrollment Plan Message for the benefit type with a maximum length defined by DataConstants.LengthHtmlEditor.\r\nThe input is sanitized to prevent any malicious content."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitEnrollmentPlanMessage": {
        "required": [
          "message",
          "planYear",
          "status"
        ],
        "type": "object",
        "properties": {
          "typeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "message": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Enrollment Plan Message for the benefit type with a maximum length specified by DataConstants.LengthHtmlEditor.\r\nThe input is sanitized to prevent any malicious content."
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the Plan year value.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status value as Active or Inactive for Enrollment Plan Message."
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitEnrollmentPlanMessageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Group Company Setting.",
            "format": "uuid"
          },
          "typeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether Enrollment Plan Message is active or not."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the verbiage for the benefit group.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageFilter": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageListItem": {
        "type": "object",
        "properties": {
          "benefitEnrollmentPlanMessageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Enrollment Plan Message.",
            "format": "uuid"
          },
          "typeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan type.",
            "format": "uuid"
          },
          "planName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit plan.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the enrollment plan message for the benefit type.",
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status of Benefit Enrollment Plan Message to be Active or Inactive.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentPlanMessageListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_ClearEnrollmentStepFilter": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets the EmployeeId property which is required and can only be initialized during object creation.",
            "format": "uuid"
          },
          "enrollmentYear": {
            "type": "integer",
            "description": "Gets or sets the enrollment year for a student.",
            "format": "int32"
          },
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan enrollment.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Group.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Represents a filter used to clear enrollment steps in a process.\r\nThis class is sealed and cannot be inherited."
      },
      "BBSI_Benefits_Database_EnrollmentStatuses": {
        "enum": [
          "0 - None | No enrollment status.",
          "1 - New | The enrollment is newly created.",
          "2 - Enrolled | The individual is enrolled.",
          "3 - Locked | The enrollment is locked.",
          "4 - Terminated | The enrollment has been terminated.",
          "5 - Waived | The enrollment was waived by the individual."
        ],
        "type": "string",
        "description": "Represents the different statuses an enrollment can have."
      },
      "BBSI_Benefits_Database_Public_Common_EnrollmentChangeTypes": {
        "enum": [
          "0 - None | No change.",
          "1 - Plan Changed | Plan has been changed.",
          "2 - Coverage Changed | Coverage has been changed.",
          "3 - Rate Changed | Rate has been changed.",
          "4 - Effective DateChanged | Effective date has been changed.",
          "5 - Data Changed | General data has been changed."
        ],
        "type": "string",
        "description": "Represents the different types of changes that can occur in an enrollment."
      },
      "BBSI_Benefits_Model_Default_EnrolledDependent": {
        "type": "object",
        "properties": {
          "dependentEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the dependent enrollment.",
            "format": "uuid"
          },
          "dependentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a dependent.",
            "format": "uuid"
          },
          "enrollmentStatus": {
            "type": "integer",
            "description": "Gets or sets the enrollment status as a byte value.",
            "format": "int32"
          },
          "planCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the plan coverage.",
            "format": "uuid",
            "nullable": true
          },
          "planCoverageRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the plan coverage rate.",
            "format": "uuid",
            "nullable": true
          },
          "ageBandRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Age Band Rate.",
            "format": "uuid",
            "nullable": true
          },
          "coverageName": {
            "type": "string",
            "description": "Gets or sets the name of the coverage.",
            "nullable": true
          },
          "coverageCode": {
            "type": "integer",
            "description": "Gets or sets the coverage code as a byte value.",
            "format": "int32"
          },
          "employeeRate": {
            "type": "number",
            "description": "Gets or sets the rate of an employee as a decimal value.",
            "format": "double"
          },
          "employerRate": {
            "type": "number",
            "description": "Gets or sets the employer rate as a decimal value.",
            "format": "double"
          },
          "netEmployeeRate": {
            "type": "number",
            "description": "Gets or sets the net employee rate.",
            "format": "double"
          },
          "netEmployerRate": {
            "type": "number",
            "description": "Gets or sets the net employer rate as a decimal value.",
            "format": "double"
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date for a specific event or action.\r\nThis property allows for a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the original effective date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is deleted."
          },
          "isNew": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether an object is new."
          },
          "dependentRelationCompanyCodeId": {
            "type": "integer",
            "description": "Gets or sets the ID of the dependent relation company code.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_EnrolledBeneficiary": {
        "type": "object",
        "properties": {
          "beneficiaryEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the beneficiary enrollment.",
            "format": "uuid"
          },
          "beneficiaryId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a beneficiary.",
            "format": "uuid"
          },
          "beneficiaryType": {
            "type": "integer",
            "description": "Gets or sets the beneficiary type as a byte value.",
            "format": "int32"
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is primary."
          },
          "primaryAmount": {
            "type": "number",
            "description": "Gets or sets the primary amount as a nullable double value.",
            "format": "double",
            "nullable": true
          },
          "secondryAmount": {
            "type": "number",
            "description": "Gets or sets the secondary amount as a nullable double value.",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is deleted."
          },
          "isNew": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether an object is new."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CustomCafeteriaRateDetail": {
        "type": "object",
        "properties": {
          "coverage": {
            "type": "string",
            "description": "Gets or sets the coverage value, default value is an empty string.",
            "nullable": true
          },
          "coverageDescription": {
            "type": "string",
            "description": "Gets or sets the coverage description with a default value of an empty string.",
            "nullable": true
          },
          "benefitCafeteriaPlanRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Cafeteria Plan Rate Detail.",
            "format": "uuid"
          },
          "rateFrequency": {
            "type": "integer",
            "description": "Gets or sets the rate frequency in bytes.",
            "format": "int32"
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the employee's contribution amount.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer contribution amount.",
            "format": "double"
          },
          "payPeriodEmployeeContribution": {
            "type": "number",
            "description": "Gets or sets the employee contribution amount for a pay period.",
            "format": "double"
          },
          "payPeriodEmployerContribution": {
            "type": "number",
            "description": "Gets or sets the employer's contribution amount for a pay period.",
            "format": "double"
          },
          "maximum": {
            "type": "number",
            "description": "Gets or sets the maximum value of type decimal.",
            "format": "double"
          },
          "isJointFiller": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is a joint filler."
          },
          "jointMaximum": {
            "type": "number",
            "description": "Gets or sets the joint maximum value.",
            "format": "double"
          },
          "employerContributionJoint": {
            "type": "number",
            "description": "Gets or sets the employer contribution for a joint account.",
            "format": "double"
          },
          "payPeriodEmployerContributionJoint": {
            "type": "number",
            "description": "Gets or sets the employer contribution amount for a pay period for a joint account.",
            "format": "double"
          },
          "enrolledDependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrolledDependent"
            },
            "description": "Gets or sets the list of enrolled dependents for a particular entity.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_Custom401KRateModel": {
        "type": "object",
        "properties": {
          "benefitEnrollmentRetirementRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Enrollment Retirement Rate.",
            "format": "uuid"
          },
          "flatAmount": {
            "type": "number",
            "description": "Gets or sets the flat amount value.",
            "format": "double"
          },
          "perPayAmount": {
            "type": "number",
            "description": "Gets or sets the per pay amount for a specific item.",
            "format": "double"
          },
          "percentageAmount": {
            "type": "number",
            "description": "Gets or sets the percentage amount as a double value.",
            "format": "double"
          },
          "eePercentAmount": {
            "type": "number",
            "description": "Gets or sets the percentage amount for EE (Employee) in double data type.",
            "format": "double"
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the employee's contribution amount.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer's contribution amount.",
            "format": "double"
          },
          "erPercentAmount": {
            "type": "number",
            "description": "Gets or sets the ER (Expense Ratio) percentage amount.",
            "format": "double"
          },
          "preTaxFlatAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax flat amount.",
            "format": "double"
          },
          "preTaxPerPayAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax per pay amount for an employee.",
            "format": "double"
          },
          "preTaxPercentageAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax percentage amount.",
            "format": "double"
          },
          "preTaxEEPercentAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee percent amount.",
            "format": "double"
          },
          "preTaxEmployeeContribution": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee contribution amount.",
            "format": "double"
          },
          "postTaxFlatAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax flat amount.",
            "format": "double"
          },
          "postTaxPerPayAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax per pay amount for an individual.",
            "format": "double"
          },
          "postTaxPercentageAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax percentage amount.",
            "format": "double"
          },
          "postTaxEEPercentAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax employee percent amount.",
            "format": "double"
          },
          "postTaxEmployeeContribution": {
            "type": "number",
            "description": "Gets or sets the post-tax employee contribution amount.",
            "format": "double"
          },
          "preTaxType": {
            "type": "integer",
            "description": "Gets or sets the pre-tax type as a byte value.",
            "format": "int32"
          },
          "postTaxType": {
            "type": "integer",
            "description": "Gets or sets the post tax type as a byte value.",
            "format": "int32"
          },
          "empContributionType": {
            "type": "integer",
            "description": "Gets or sets the employee contribution type as a byte value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomSavingAccount": {
        "type": "object",
        "properties": {
          "customSavingAccountId": {
            "type": "string",
            "description": "Gets or sets the custom saving account ID as a Guid.",
            "format": "uuid"
          },
          "benefitCafeteriaPlanCalculatorId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Cafeteria Plan Calculator.",
            "format": "uuid"
          },
          "category": {
            "type": "string",
            "description": "Gets or sets the category of the item. Default value is an empty string.",
            "nullable": true
          },
          "inputAmount": {
            "type": "number",
            "description": "Gets or sets the input amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "rateFrequency": {
            "type": "integer",
            "description": "Gets or sets the rate frequency in bytes.",
            "format": "int32"
          },
          "annualContribution": {
            "type": "number",
            "description": "Gets or sets the annual contribution amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          },
          "payPeriodContribution": {
            "type": "number",
            "description": "Gets Calculated the pay period contribution for cafeteria plans based on the plan group type, annual contribution, and pay cycle.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "planGroupType": {
            "type": "integer",
            "description": "Gets or sets the type of plan group as a byte value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_EnrollmentModelDetail": {
        "type": "object",
        "properties": {
          "isPlanCovered": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the plan is covered."
          },
          "isWaived": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the fee is waived."
          },
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan enrollment.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Enrollment Detail.",
            "format": "uuid"
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit with an initial value of an empty string.",
            "nullable": true
          },
          "enrollmentStatus": {
            "type": "integer",
            "description": "Gets or sets the enrollment status as a byte value.",
            "format": "int32"
          },
          "planCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the plan coverage.",
            "format": "uuid",
            "nullable": true
          },
          "planCoverageRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the plan coverage rate.",
            "format": "uuid",
            "nullable": true
          },
          "planAgeBandRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the plan age band rate.",
            "format": "uuid",
            "nullable": true
          },
          "planSTDRateId": {
            "type": "string",
            "description": "Gets or sets the PlanSTDRateId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "planLTDRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Plan LTDRate.",
            "format": "uuid",
            "nullable": true
          },
          "planCafeteriaRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the cafeteria rate plan.",
            "format": "uuid",
            "nullable": true
          },
          "additionalCost": {
            "type": "number",
            "description": "Gets or sets the additional cost associated with an item.",
            "format": "double"
          },
          "coverageName": {
            "type": "string",
            "description": "Gets or sets the name of the coverage.",
            "nullable": true
          },
          "coverageCode": {
            "type": "integer",
            "description": "Gets or sets the coverage code as a byte value.",
            "format": "int32"
          },
          "rateType": {
            "type": "integer",
            "description": "Gets or sets the rate type as a byte value.",
            "format": "int32"
          },
          "employeeRate": {
            "type": "number",
            "description": "Gets or sets the rate of pay for an employee.",
            "format": "double"
          },
          "employerRate": {
            "type": "number",
            "description": "Gets or sets the employer rate as a decimal value.",
            "format": "double"
          },
          "netEmployeeRate": {
            "type": "number",
            "description": "Gets or sets the net employee rate.",
            "format": "double"
          },
          "netEmployerRate": {
            "type": "number",
            "description": "Gets or sets the net employer rate as a decimal value.",
            "format": "double"
          },
          "flexCredit": {
            "type": "number",
            "description": "Gets or sets the FlexCredit amount, which is a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "calculatedEffectiveDate": {
            "type": "string",
            "description": "Gets the calculated effective date as a short date string if the EffectiveDate is not null.",
            "nullable": true,
            "readOnly": true
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date for a specific event or action.\r\nThis property allows for a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the original effective date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "enrolledDependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrolledDependent"
            },
            "description": "Gets or sets the list of enrolled dependents for a particular entity.",
            "nullable": true
          },
          "enrolledBeneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrolledBeneficiary"
            },
            "description": "Gets or sets the list of enrolled beneficiaries.",
            "nullable": true
          },
          "cafeteriaRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomCafeteriaRateDetail"
            },
            "description": "Gets or sets the list of CustomCafeteriaRateDetail objects representing cafeteria rate details.",
            "nullable": true
          },
          "customRateModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Custom401KRateModel"
              }
            ],
            "description": "Gets or sets the custom 401K rate model.",
            "nullable": true
          },
          "premiumFormulaJson": {
            "type": "string",
            "description": "Gets or sets the premium formula in JSON format.",
            "nullable": true
          },
          "groupLifeEnrollmentString": {
            "type": "string",
            "description": "Gets or sets the Group Life Enrollment String, initialized with an empty string.",
            "nullable": true
          },
          "employeeDirectDepositId": {
            "type": "integer",
            "description": "Gets or sets the Employee Direct Deposit Id.",
            "format": "int32",
            "nullable": true
          },
          "savingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomSavingAccount"
            },
            "description": "Gets or sets the list of CustomSavingAccount objects representing saving accounts.",
            "nullable": true
          },
          "coverageCodeName": {
            "type": "string",
            "description": "Gets or sets the coverage code name with a default value of an empty string.",
            "nullable": true
          },
          "physician": {
            "type": "string",
            "description": "Gets or sets the name of the physician. Default value is an empty string.",
            "nullable": true
          },
          "isStepLocked": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the step is locked."
          },
          "employeePayCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle of an employee.",
            "format": "int32"
          },
          "employerPayCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for the employer.",
            "format": "int32"
          },
          "cobra": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the Cobra property is true or false."
          },
          "isJointFiller": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is a joint filler."
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Database_OpenEnrollmentStatus": {
        "enum": [
          "0 - InOpenEnrollment | The employee is currently in open enrollment.",
          "1 - NotInOpenEnrollment | The employee is not in open enrollment."
        ],
        "type": "string",
        "description": "Represents the status of open enrollment."
      },
      "BBSI_Benefits_Model_Default_EnrollmentWizard_PostEnrollmentStep_Dtos_CreateEnrollment": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the required EmployeeId as a Guid.",
            "format": "uuid"
          },
          "enrollmentYear": {
            "type": "integer",
            "description": "Gets or sets the enrollment year for a student.",
            "format": "int32"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "enrollmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ],
            "description": "Gets or Sets Validates that the EnrollmentStatus property is of type EnrollmentStatuses enum."
          },
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the Benefit Plan Enrollment Id as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanGroupName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Benefit Plan Group Name with a maximum length defined by DataConstants.LengthItemName.",
            "nullable": true
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_Common_EnrollmentChangeTypes"
              }
            ],
            "description": "Gets or Sets Validates if the provided value for ChangeType property is a valid member of the EnrollmentChangeTypes enum."
          },
          "waiveReason": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the Waive Reason with a maximum length of 100 characters after sanitizing the input.",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentModelDetail"
            },
            "description": "Gets or sets the list of EnrollmentModelDetail objects representing plans.",
            "nullable": true
          },
          "enrollmentEventType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_OpenEnrollmentStatus"
              }
            ],
            "description": "Gets or sets the enrollment event type for open enrollment status.",
            "nullable": true
          },
          "activeLifeEventId": {
            "type": "string",
            "description": "Gets or sets the active life event ID, which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "isStepLocked": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the step is locked or not."
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomDependentEnrollments": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the list of plans.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a custom class for managing dependent enrollments in a system."
      },
      "BBSI_Benefits_Model_Default_CustomDependents": {
        "type": "object",
        "properties": {
          "secureDependentID": {
            "type": "string",
            "description": "Gets or sets the SecureDependentID property, which is a string representing a secure identifier for a dependent.\r\nThe property is initialized to an empty string by default.",
            "nullable": true
          },
          "dependentID": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a dependent.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of a person.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of a person. Defaults to an empty string.",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Gets or sets the gender of a person. Default value is an empty string.",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "Gets or sets the gender ID as a byte value.",
            "format": "int32"
          },
          "relation": {
            "type": "string",
            "description": "Gets or sets the relation string, initialized to an empty string.",
            "nullable": true
          },
          "relationId": {
            "type": "integer",
            "description": "Gets or sets the relation ID.",
            "format": "int32"
          },
          "ssn": {
            "type": "string",
            "description": "Gets or sets the Social Security Number (SSN) with an initial value of an empty string.",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Gets or sets the date of birth as a string. Default value is an empty string.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Gets or sets the address with a default value of an empty string.",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Gets or sets the second line of the address.\r\nDefault value is an empty string.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Gets or sets the phone number as a string. Defaults to an empty string.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Gets or sets the city name with a default value of an empty string.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Gets or sets the state of an object.",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Gets or sets the ZipCode property with a default value of an empty string.",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "description": "Gets or sets the state ID as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "isSmoker": {
            "type": "string",
            "description": "Gets or sets the value indicating if a person is a smoker.",
            "nullable": true
          },
          "isCollegeStudent": {
            "type": "string",
            "description": "Gets or sets the property indicating whether a person is a college student.",
            "nullable": true
          },
          "isDisabled": {
            "type": "string",
            "description": "Gets or sets the value indicating if the item is disabled.",
            "nullable": true
          },
          "isSmokerBool": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a person is a smoker."
          },
          "isCollegeStudentBool": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the person is a college student."
          },
          "isDisabledBool": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is disabled."
          },
          "country": {
            "type": "string",
            "description": "Gets or sets the country name. Default value is an empty string.",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "Gets or sets the nullable short value representing the country ID.",
            "format": "int32",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "description": "Gets or sets the age of a person.",
            "format": "int32"
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use the employee's address."
          },
          "enrollment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomDependentEnrollments"
              }
            ],
            "description": "Gets or sets the CustomDependentEnrollments object for Enrollment, with a default value of a new instance of CustomDependentEnrollments.",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Represents a custom class for managing dependents in a system."
      },
      "BBSI_Benefits_Model_Default_EnrolledPlansSummary": {
        "type": "object",
        "properties": {
          "eBenefitPlanEnrollmentID": {
            "type": "integer",
            "description": "Gets or sets the ID of the EBenefitPlanEnrollment.",
            "format": "int32"
          },
          "eBenefitPlanEnrollmentDetailID": {
            "type": "integer",
            "description": "Gets or sets the ID of the EBenefitPlanEnrollmentDetail.",
            "format": "int32"
          },
          "cBenefitPlanID": {
            "type": "integer",
            "description": "Gets or sets the ID of the benefit plan.",
            "format": "int32"
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year for a specific entity.",
            "format": "int32"
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee. Default value is an empty string.",
            "nullable": true
          },
          "benefitGroup": {
            "type": "string",
            "description": "Gets or sets the benefit group for a particular entity. Default value is an empty string.",
            "nullable": true
          },
          "benefitPlan": {
            "type": "string",
            "description": "Gets or sets the benefit plan for a person, default value is an empty string.",
            "nullable": true
          },
          "contribution": {
            "type": "number",
            "description": "Gets or sets the contribution amount as a decimal value.",
            "format": "double"
          },
          "contributionFormatted": {
            "type": "string",
            "description": "Gets or sets the formatted contribution string.",
            "nullable": true
          },
          "coverage": {
            "type": "string",
            "description": "Gets or sets the coverage value as a string. Default value is an empty string.",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the original effective date as a string. Default value is an empty string.",
            "nullable": true
          },
          "eligibilityDate": {
            "type": "string",
            "description": "Gets or sets the eligibility date as a string. Default value is an empty string.",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date as a string. Default value is an empty string.",
            "nullable": true
          },
          "signUpDate": {
            "type": "string",
            "description": "Gets or sets the sign-up date for a user. Defaults to an empty string.",
            "nullable": true
          },
          "planDetail": {
            "type": "string",
            "description": "Gets or sets the plan detail, initialized with an empty string.",
            "nullable": true
          },
          "insuranceApplication": {
            "type": "string",
            "description": "Gets or sets the insurance application string with default value of an empty string.",
            "nullable": true
          },
          "eoiApplication": {
            "type": "string",
            "description": "Gets or sets the EOI (Expression of Interest) application string. Default value is an empty string.",
            "nullable": true
          },
          "insuranceFormPrintDate": {
            "type": "string",
            "description": "Gets or sets the Insurance Form Print Date. Default value is an empty string.",
            "nullable": true
          },
          "insuranceApplicationDownloadUrl": {
            "type": "string",
            "description": "Gets or sets the URL for downloading the insurance application.",
            "nullable": true
          },
          "eoiFormPrintDate": {
            "type": "string",
            "description": "Gets or sets the EOI form print date. Default value is an empty string.",
            "nullable": true
          },
          "employeePercent": {
            "type": "string",
            "description": "Gets or sets the percentage of an employee.",
            "nullable": true
          },
          "insuranceFormType": {
            "type": "integer",
            "description": "Gets or sets the insurance form type as a byte value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a summary of enrolled plans for a user."
      },
      "BBSI_Benefits_Model_Default_WaivedTerminatedPlansSummary": {
        "type": "object",
        "properties": {
          "benefitGroup": {
            "type": "string",
            "description": "Gets or sets the benefit group for a specific entity.",
            "nullable": true
          },
          "benefitPlan": {
            "type": "string",
            "description": "Gets or sets the benefit plan for a person, default value is an empty string.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Gets or sets the reason for a specific action or decision.",
            "nullable": true
          },
          "dateWaived": {
            "type": "string",
            "description": "Gets or sets the DateWaived property, initialized with an empty string.",
            "nullable": true
          },
          "waiverEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date of the waiver.",
            "nullable": true
          },
          "terminatedDate": {
            "type": "string",
            "description": "Gets or sets the TerminatedDate property, initialized with an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a summary of waived or terminated plans."
      },
      "BBSI_Benefits_Model_Default_SummaryStep": {
        "type": "object",
        "properties": {
          "dependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomDependents"
            },
            "description": "Gets or sets the list of custom dependents.",
            "nullable": true
          },
          "enrolledPlansSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrolledPlansSummary"
            },
            "description": "Gets or sets the list of enrolled plans summary.",
            "nullable": true
          },
          "waivedTerminatedPlansSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WaivedTerminatedPlansSummary"
            },
            "description": "Gets or sets the list of WaivedTerminatedPlansSummary objects.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a class for providing a summary step in a process or workflow."
      },
      "BBSI_Benefits_Model_Default_EnrollmentWizardSummaryStep": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Gets or sets the title of an object. Defaults to an empty string.",
            "nullable": true
          },
          "summaryStep": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SummaryStep"
              }
            ],
            "description": "Gets or sets the SummaryStep object with default value initialized.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a step in an enrollment wizard that displays a summary of the enrollment details."
      },
      "BBSI_Benefits_Model_Default_FinalSubmissionFilter": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets the EmployeeId property which is required and can only be initialized during object creation.",
            "format": "uuid"
          },
          "enrollmentYear": {
            "type": "integer",
            "description": "Gets or initializes the enrollment year for a student.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Integrations_VertexAPI_City": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isPrefix": {
            "type": "boolean",
            "nullable": true
          },
          "isCompressed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Integrations_VertexAPI_County": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isPrefix": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Integrations_VertexAPI_State": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isPrefix": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Integrations_VertexAPI_GeocodeLookupRequestDto": {
        "type": "object",
        "properties": {
          "city": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Integrations_VertexAPI_City"
              }
            ],
            "nullable": true
          },
          "county": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Integrations_VertexAPI_County"
              }
            ],
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Integrations_VertexAPI_State"
              }
            ],
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "geocodeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_SignatureCreateUpdate": {
        "type": "object",
        "properties": {
          "signatureId": {
            "type": "string",
            "format": "uuid"
          },
          "signedBy": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "signedByIP": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "signedDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "signatureImage": {
            "type": "string",
            "nullable": true
          },
          "isSignatureChanged": {
            "type": "boolean"
          },
          "isSignatureRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_CreateSignature": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "Gets the unique identifier of the organization. Can be null.",
            "format": "uuid",
            "nullable": true
          },
          "enrollmentYear": {
            "type": "integer",
            "description": "Gets or sets the enrollment year for a student.",
            "format": "int32"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the required EmployeeId as a Guid.",
            "format": "uuid"
          },
          "signatureInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SignatureCreateUpdate"
              }
            ],
            "description": "Gets or sets the SignatureCreateUpdate object for creating or updating signature information.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a class for creating a signature."
      },
      "BBSI_Benefits_Model_NoContent204": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_UpdateSignature": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "Gets the unique identifier of the organization. Can be null.",
            "format": "uuid",
            "nullable": true
          },
          "enrollmentYear": {
            "type": "integer",
            "description": "Gets or sets the enrollment year for a student.",
            "format": "int32"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the required EmployeeId as a Guid.",
            "format": "uuid"
          },
          "signatureInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_SignatureCreateUpdate"
              }
            ],
            "description": "Gets or sets the SignatureCreateUpdate object for creating or updating signature information.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a class for updating a signature."
      },
      "BBSI_Benefits_Model_Default_EnrollmentSignatureInfo": {
        "type": "object",
        "properties": {
          "enrollmentSignatureInfoId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Enrollment Signature Info.",
            "format": "uuid"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "signedBy": {
            "type": "string",
            "description": "Gets or sets the name of the person who signed the document.",
            "nullable": true
          },
          "signedByIP": {
            "type": "string",
            "description": "Gets or sets the IP address of the entity who signed the document.",
            "nullable": true
          },
          "signedDate": {
            "type": "string",
            "description": "Gets or sets the signed date as a nullable string.",
            "nullable": true
          },
          "signatureImage": {
            "type": "string",
            "description": "Gets or sets the signature image as a nullable string.",
            "nullable": true
          },
          "isSignatureChanged": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the signature has been changed."
          },
          "isSignatureRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a signature is required."
          }
        },
        "additionalProperties": false,
        "description": "Represents information related to the signature of an enrollment."
      },
      "BBSI_Benefits_Model_Default_SignatureInfoItem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Gets or sets the title of an object.",
            "nullable": true
          },
          "signatureNote": {
            "type": "string",
            "description": "Gets or sets the signature note for a document.",
            "nullable": true
          },
          "signatureFooterNote": {
            "type": "string",
            "description": "Gets or sets the signature footer note for a document.",
            "nullable": true
          },
          "signatureInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentSignatureInfo"
              }
            ],
            "description": "Gets or sets the enrollment signature information.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a class for storing information related to a signature."
      },
      "BBSI_Benefits_Database_Public_User_User": {
        "required": [
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "profilePictureUrl": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "eventTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCompanyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_UserCompanyRole"
            },
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_Public_User_Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": -1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_Public_User_UserCompanyRole": {
        "required": [
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "endDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "eventTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_User"
              }
            ],
            "nullable": true
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Company"
              }
            ],
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_Role"
              }
            ],
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_Public_User_CompanyEmployee": {
        "required": [
          "companyId",
          "employeeCode",
          "employeeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeCode": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Company"
              }
            ],
            "nullable": true
          },
          "employee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_User"
              }
            ],
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_CompanyBenefitClass": {
        "required": [
          "benefitClass",
          "classNumber",
          "companyId",
          "isActive",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "classNumber": {
            "type": "integer",
            "format": "int32"
          },
          "benefitClass": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Company"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_LookupType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_Lookup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sequenceNo": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_LookupType"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCoverageTypes": {
        "enum": [
          "0 - NA | No coverage selected (NA).",
          "1 - EE | Coverage for employee only.",
          "2 - ES | Coverage for employee plus spouse.",
          "3 - EC | Coverage for employee and one child.",
          "4 - FAM | Coverage for employee and family.",
          "5 - DP | Coverage for domestic partner only.",
          "6 - EE + CH | Coverage for employee plus children.",
          "7 - EE + DP | Coverage for employee plus domestic partner.",
          "8 - EE + 2 | Coverage for employee plus two dependents.",
          "9 - SP | Coverage for spouse only.",
          "10 - C | Coverage for one child only.",
          "11 - CH | Coverage for children only.",
          "12 - EE + 1 | Coverage for employee plus one dependent."
        ],
        "type": "string",
        "description": "Specifies the different types of benefit coverage available."
      },
      "BBSI_Benefits_Database_EnrollmentApprovalStatuses": {
        "enum": [
          "0 - Pending | Pending approval.",
          "1 - Approved | Approved.",
          "2 - Cancelled | Cancelled."
        ],
        "type": "string",
        "description": "Represents the different statuses of enrollment approval."
      },
      "BBSI_Benefits_Database_BenefitPlanEligibilityAssociation": {
        "required": [
          "benefitPlanEligibilityRuleId",
          "benefitPlanId",
          "employeeTierNumber",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "employeeTierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEligibilityCode": {
        "required": [
          "benefitPlanEligibilityRuleId",
          "codeType",
          "companyCodeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyCodeId": {
            "type": "string",
            "format": "uuid"
          },
          "codeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CodeCategories"
              }
            ]
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEligibilityRuleCompanyLevelBinding": {
        "required": [
          "benefitPlanEligibilityRuleId",
          "companyLevelBindingId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyLevelBindingId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitEligibilityRulesColumnNames": {
        "enum": [
          "0 - CompanyId | Represents the company ID column in the benefit eligibility rules.",
          "1 - RuleName | Represents the rule name column in the benefit eligibility rules.",
          "2 - Description | Represents the description column in the benefit eligibility rules.",
          "3 - TierNumber | Represents the tier number column in the benefit eligibility rules.",
          "4 - EmployeeType | Represents the employee type column in the benefit eligibility rules.",
          "5 - PayType | Represents the pay type column in the benefit eligibility rules.",
          "6 - WeeklyHourFilter | Represents the weekly hour filter column in the benefit eligibility rules.",
          "7 - WeeklyHour | Represents the weekly hour column in the benefit eligibility rules.",
          "8 - AnnualSalaryFilter | Represents the annual salary filter column in the benefit eligibility rules.",
          "9 - AnnualSalary | Represents the annual salary column in the benefit eligibility rules.",
          "10 - ServiceYearFilter | Represents the service year filter column in the benefit eligibility rules.",
          "11 - ServiceYear | Represents the service year column in the benefit eligibility rules.",
          "12 - IsEmployeeExempted | Represents the employee exemption status column in the benefit eligibility rules.",
          "13 - WaitingPeriod | Represents the waiting period column in the benefit eligibility rules.",
          "14 - WaitingPeriodFilter | Represents the waiting period filter column in the benefit eligibility rules.",
          "15 - EligibleDateFormat | Represents the eligible date format column in the benefit eligibility rules.",
          "16 - EligibleJobPositions | Represents the eligible job positions column in the benefit eligibility rules.",
          "17 - EligibleCompanyLevels | Represents the eligible company levels column in the benefit eligibility rules.",
          "18 - EligibleStates | Represents the eligible states column in the benefit eligibility rules.",
          "19 - EligibleCounties | Represents the eligible counties column in the benefit eligibility rules.",
          "20 - EligibleZipCodes | Represents the eligible zip codes column in the benefit eligibility rules.",
          "21 - OrganizationId | Represents the organization ID column in the benefit eligibility rules.",
          "22 - IsOrganizationalRule | Represents the organizational rule status column in the benefit eligibility rules."
        ],
        "type": "string",
        "description": "Specifies the column names for the benefit eligibility rules."
      },
      "BBSI_Benefits_Database_BenefitPlanEligibilityRuleHistory": {
        "required": [
          "benefitPlanEligibilityRuleId",
          "changedDate",
          "changeType",
          "columnName",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryUserId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ]
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEligibilityRulesColumnNames"
              }
            ]
          },
          "oldValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginHistoryUserId": {
            "type": "string",
            "format": "uuid"
          },
          "changedDate": {
            "type": "string",
            "format": "date-time"
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEligibilityRulePayType": {
        "required": [
          "benefitPlanEligibilityRuleId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "payType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "payType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployeePayTypes"
              }
            ]
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEligibilityRulePosition": {
        "required": [
          "benefitPlanEligibilityRuleId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "positionId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEligibilityRule": {
        "required": [
          "createdDate",
          "eligibleDateFormat",
          "isOrganizationalRule",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "organizationId",
          "rowId",
          "ruleName"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "format": "uuid"
          },
          "ruleName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "weeklyHourFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "annualSalaryFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "nullable": true
          },
          "annualSalaryFrom": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annualSalaryTo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEmployeeExempted": {
            "type": "boolean",
            "nullable": true
          },
          "waitingPeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "nullable": true
          },
          "eligibleDateFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EligibleDateFormats"
              }
            ]
          },
          "eligibleStates": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "eligibleCounties": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "eligibleZipCodes": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isOrganizationalRule": {
            "type": "boolean"
          },
          "eligibleJobStatuses": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmploymentType"
              }
            ],
            "nullable": true
          },
          "benefitClones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClone"
            },
            "nullable": true
          },
          "benefitPlanEligibilityAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityAssociation"
            },
            "nullable": true
          },
          "benefitPlanEligibilityCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityCode"
            },
            "nullable": true
          },
          "benefitPlanEligibilityRuleCLevelBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRuleCompanyLevelBinding"
            },
            "nullable": true
          },
          "benefitPlanEligibilityRuleHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRuleHistory"
            },
            "nullable": true
          },
          "benefitPlanEligibilityRulePayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRulePayType"
            },
            "nullable": true
          },
          "benefitPlanEligibilityRuleRPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRulePosition"
            },
            "nullable": true
          },
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCloneLog": {
        "required": [
          "benefitCloneId",
          "clonePlanComparisonStatus",
          "clonePlanDurationStatus",
          "clonePlanEligibilityStatus",
          "clonePlanInfoStatus",
          "clonePlanRateStatus",
          "clonePlanScheduleStatus",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "newBenefitPlanId",
          "oldBenefitPlanId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitCloneId": {
            "type": "integer",
            "format": "int32"
          },
          "oldBenefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "newBenefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "clonePlanInfoStatus": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "clonePlanDurationStatus": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "clonePlanEligibilityStatus": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "clonePlanScheduleStatus": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "clonePlanRateStatus": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "clonePlanComparisonStatus": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "benefitClone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClone"
              }
            ],
            "nullable": true
          },
          "benefitPlanNew": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanOld": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCloneTargetCompany": {
        "required": [
          "benefitCloneId",
          "companyId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitCloneId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitClone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClone"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitClone": {
        "required": [
          "cloneDate",
          "clonePlanComparison",
          "clonePlanDuration",
          "clonePlanEligibility",
          "clonePlanInfo",
          "clonePlanRate",
          "clonePlanSchedule",
          "cloneStatus",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId",
          "selectedPlans",
          "sourceOrganizationId",
          "sourcePlanYear",
          "targetOrganizationId",
          "targetPlanYear"
        ],
        "type": "object",
        "properties": {
          "sourceOrganizationId": {
            "type": "string",
            "format": "uuid"
          },
          "sourceCompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sourcePlanYear": {
            "type": "integer",
            "format": "int32"
          },
          "targetOrganizationId": {
            "type": "string",
            "format": "uuid"
          },
          "targetPlanYear": {
            "type": "integer",
            "format": "int32"
          },
          "selectedPlans": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string"
          },
          "clonePlanInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ]
          },
          "clonePlanDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ]
          },
          "benefitClientEnrollmentSetupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clonePlanEligibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ]
          },
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clonePlanSchedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ]
          },
          "clonePlanRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ]
          },
          "clonePlanComparison": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneTypes"
              }
            ]
          },
          "benefitPlanComparisonTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cloneDate": {
            "type": "string",
            "format": "date-time"
          },
          "cloneStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CloneStatuses"
              }
            ]
          },
          "completedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "benefitPlanComparisonTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplate"
              }
            ],
            "nullable": true
          },
          "benefitClientEnrollmentSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClientEnrollmentSetup"
              }
            ],
            "nullable": true
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "benefitCloneLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCloneLog"
            },
            "nullable": true
          },
          "benefitCloneTargetCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCloneTargetCompany"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanComparisonTemplateField": {
        "required": [
          "benefitPlanComparisonTemplateId",
          "fieldLabel",
          "fieldOrder",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "fieldLabel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "fieldOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "benefitPlanComparisonTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanComparisonTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplate"
              }
            ],
            "nullable": true
          },
          "benefitPlanComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonSummaryTemplateField"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanComparisonTemplateColumnNames": {
        "enum": [
          "0 - CompanyId | Represents the company ID column in the summary template.",
          "1 - Name | Represents the name column in the summary template.",
          "2 - BenefitPlanGroup | Represents the benefit plan group column in the summary template.",
          "3 - IsSystemDefault | Represents the system default status column in the summary template.",
          "4 - ComparisonSummaryTemplateFields | Represents the comparison summary template fields column.",
          "5 - IsActive | Represents the template is active or not."
        ],
        "type": "string",
        "description": "Specifies the column names for the Benefit Plan Comparison template."
      },
      "BBSI_Benefits_Database_BenefitPlanComparisonTemplateHistory": {
        "required": [
          "benefitPlanComparisonTemplateId",
          "changedDate",
          "changeType",
          "columnName",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId",
          "userLoginHistoryId"
        ],
        "type": "object",
        "properties": {
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ]
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplateColumnNames"
              }
            ]
          },
          "oldValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "userLoginHistoryId": {
            "type": "string",
            "format": "uuid"
          },
          "changedDate": {
            "type": "string",
            "format": "date-time"
          },
          "benefitPlanComparisonTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanComparisonTemplate": {
        "required": [
          "benefitPlanTypeId",
          "createdByUserId",
          "createdDate",
          "isActive",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "name",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "benefitPlanType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanType"
              }
            ],
            "nullable": true
          },
          "benefitClones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClone"
            },
            "nullable": true
          },
          "benefitPlanComparisonTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplateField"
            },
            "nullable": true
          },
          "benefitPlanComparisonTemplateHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplateHistory"
            },
            "nullable": true
          },
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFlexCreditCode": {
        "required": [
          "benefitFlexCreditId",
          "codeType",
          "companyCodeId",
          "companyId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "companyCodeId": {
            "type": "string",
            "format": "uuid"
          },
          "codeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CodeCategories"
              }
            ]
          },
          "benefitFlexCredit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCredit"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFlexCreditLevelBinding": {
        "required": [
          "benefitFlexCreditId",
          "companyId",
          "companyLevelBindingId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "companyLevelBindingId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitFlexCredit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCredit"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFlexCreditHistory": {
        "required": [
          "benefitFlexCreditId",
          "changedDate",
          "changeType",
          "columnName",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryId",
          "newValue",
          "oldValue",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ]
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditColumnNames"
              }
            ]
          },
          "oldValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string"
          },
          "newValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string"
          },
          "loginHistoryId": {
            "type": "string",
            "format": "uuid"
          },
          "changedDate": {
            "type": "string",
            "format": "date-time"
          },
          "benefitFlexCredit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCredit"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFlexCreditPayType": {
        "required": [
          "benefitFlexCreditId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "payType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32"
          },
          "payType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployeePayTypes"
              }
            ]
          },
          "benefitFlexCredit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCredit"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFlexCreditPositions": {
        "required": [
          "benefitFlexCreditId",
          "companyId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "positionId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitFlexCredit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCredit"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFlexCredit": {
        "required": [
          "companyId",
          "createdByUserId",
          "createdDate",
          "flexCreditAmount",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "organizationId",
          "rowId",
          "templateName",
          "year"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "templateName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "flexCreditAmount": {
            "type": "number",
            "format": "double"
          },
          "weeklyHourFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "anualSalaryFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "nullable": true
          },
          "anualSalaryFrom": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "anualSalaryTo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "nullable": true
          },
          "eligibleStates": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "eligibleZipCodes": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitFlexCreditBenefitPlanGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditBenefitPlanGroup"
            },
            "nullable": true
          },
          "benefitFlexCreditCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditCode"
            },
            "nullable": true
          },
          "benefitFlexCreditLevelBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditLevelBinding"
            },
            "nullable": true
          },
          "benefitFlexCreditHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditHistory"
            },
            "nullable": true
          },
          "benefitFlexCreditPayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditPayType"
            },
            "nullable": true
          },
          "benefitFlexCreditPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditPositions"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFlexCreditBenefitPlanGroup": {
        "required": [
          "benefitFlexCreditId",
          "benefitPlanGroupId",
          "companyId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitFlexCredit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCredit"
              }
            ],
            "nullable": true
          },
          "benefitPlanType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanType"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanTypeOrder": {
        "required": [
          "benefitPlanTypeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId",
          "sortIndex"
        ],
        "type": "object",
        "properties": {
          "sortIndex": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanType"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_LifeEvent": {
        "required": [
          "companyId",
          "employeeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "lifeEventDate",
          "lifeEventDateTime",
          "qualifiedEventId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "qualifiedEventId": {
            "type": "integer",
            "format": "int32"
          },
          "requiredFormTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lifeEventDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lifeEventDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ]
          },
          "attachmentUrl": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comments": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "newBenefitEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "newEnrollmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "newEnrollmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unlockWholeWizard": {
            "type": "boolean"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Company"
              }
            ],
            "nullable": true
          },
          "employee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_User"
              }
            ],
            "nullable": true
          },
          "qualifiedEvent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "requiredFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "lifeEventsBenefitPlanTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_LifeEventsBenefitPlanType"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_LifeEventsBenefitPlanType": {
        "required": [
          "createdDate",
          "employeeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "lifeEventId",
          "planTypeId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "lifeEventId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "planTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanType"
              }
            ],
            "nullable": true
          },
          "lifeEvent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_LifeEvent"
              }
            ],
            "nullable": true
          },
          "planType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "employee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_User"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitEnrollmentPlanMessage": {
        "required": [
          "isActive",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "message",
          "planYear",
          "rowId",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "planType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanType"
              }
            ],
            "nullable": true
          },
          "planYear": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanType": {
        "required": [
          "createdByUserId",
          "createdDate",
          "isActive",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "name",
          "planType",
          "planTypeId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "planType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ]
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "planTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanComparisonTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplate"
            },
            "nullable": true
          },
          "benefitFlexCreditBenefitPlanGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFlexCreditBenefitPlanGroup"
            },
            "nullable": true
          },
          "benefitPlanTypeOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanTypeOrder"
            },
            "nullable": true
          },
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
            },
            "nullable": true
          },
          "benefitPlanEnrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollment"
            },
            "nullable": true
          },
          "lifeEventsBenefitPlanTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_LifeEventsBenefitPlanType"
            },
            "nullable": true
          },
          "benefitEnrollmentPlanMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentPlanMessage"
            },
            "nullable": true
          },
          "lookups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_ActivityTypes": {
        "enum": [
          "0 - Plan Waived | Represents a plan that has been waived.",
          "1 - Plan Enrolled | Represents a plan that has been enrolled in.",
          "2 - Plan Submitted | Represents a plan that has been submitted.",
          "3 - Plan Changed | Represents a plan that has been changed.",
          "4 - Plan Coverage Changed | Represents a change in the coverage of a plan.",
          "5 - Plan Data Changed | Represents a change in the data associated with the plan.",
          "6 - Plan Terminated | Represents a plan that has been terminated.",
          "7 - Plan Cleaned | Represents a plan that has been cleaned.",
          "8 - Plan Approved | Represents a plan that has been approved.",
          "9 - No Activity | Represents a state where no activity has occurred for the plan."
        ],
        "type": "string",
        "description": "Represents the different types of activities related to a benefit plan."
      },
      "BBSI_Benefits_Database_EmployeeLifeEvent": {
        "required": [
          "companyId",
          "employeeId",
          "eventSubType",
          "eventType",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "lifeEventDate",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "eventType": {
            "type": "integer",
            "format": "int32"
          },
          "eventSubType": {
            "type": "integer",
            "format": "int32"
          },
          "lifeEventDate": {
            "type": "string",
            "format": "date-time"
          },
          "uploadDocumentUrl": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "uploadDocumentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateSubmitted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean"
          },
          "approvedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "benefitEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dependentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependentLastName": {
            "type": "string",
            "nullable": true
          },
          "dependentFirstName": {
            "type": "string",
            "nullable": true
          },
          "dependentGender": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependentRelationCompanyCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependentSSN": {
            "type": "string",
            "nullable": true
          },
          "dependentDateOfBirth": {
            "type": "string",
            "nullable": true
          },
          "dependentChildCourt": {
            "type": "boolean",
            "nullable": true
          },
          "dependentDisabled": {
            "type": "boolean",
            "nullable": true
          },
          "isDependentAdded": {
            "type": "boolean",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "cancelled": {
            "type": "boolean"
          },
          "cancelledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "unlockWholeWizard": {
            "type": "boolean"
          },
          "updatedByUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentTitle": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_Dependent": {
        "required": [
          "addressLine1",
          "city",
          "county",
          "dateOfBirth",
          "employeeId",
          "firstName",
          "genderId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "lastName",
          "relationshipId",
          "rowId",
          "ssn",
          "state",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "genderId": {
            "type": "integer",
            "format": "int32"
          },
          "relationshipId": {
            "type": "integer",
            "format": "int32"
          },
          "ssn": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string"
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ]
          },
          "homePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "county": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "nullable": true
          },
          "isDisable": {
            "type": "boolean",
            "nullable": true
          },
          "isTobaccoUser": {
            "type": "boolean",
            "nullable": true
          },
          "employee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_User"
              }
            ],
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "relationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "dependentBenefitEnrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_DependentBenefitEnrollment"
            },
            "nullable": true
          },
          "employeeLifeEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployeeLifeEvent"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_DependentBenefitEnrollment": {
        "required": [
          "approvalStatus",
          "benefitPlanEnrollmentDetailId",
          "coverageName",
          "dependentId",
          "employeeRate",
          "employerRate",
          "enrollmentStatus",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryId",
          "netEmployeeRate",
          "netEmployerRate",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "dependentId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanCoverageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverageName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "benefitPlanFlatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanAgeBandRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeRate": {
            "type": "number",
            "format": "double"
          },
          "employerRate": {
            "type": "number",
            "format": "double"
          },
          "netEmployeeRate": {
            "type": "number",
            "format": "double"
          },
          "netEmployerRate": {
            "type": "number",
            "format": "double"
          },
          "enrollmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ]
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "signupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approvalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ]
          },
          "flag1": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "flag2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "flag3": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "flag4": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isClone": {
            "type": "boolean",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loginHistoryId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanEnrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
              }
            ],
            "nullable": true
          },
          "dependent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Dependent"
              }
            ],
            "nullable": true
          },
          "benefitEnrollmentActivityDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentActivityDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitEnrollmentActivityDetail": {
        "required": [
          "actionDate",
          "approvalStatus",
          "benefitEnrollmentActivityId",
          "coverageName",
          "enrollmentStatus",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitEnrollmentActivityId": {
            "type": "integer",
            "format": "int32"
          },
          "dependentBenefitEnrollmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanCoverageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanFlatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanAgeBandRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverageName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "enrollmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ]
          },
          "approvalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ]
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employeeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employerRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netEmployeeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netEmployerRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "loginHistoryId": {
            "type": "string",
            "format": "uuid"
          },
          "actionDate": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitEnrollmentActivity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentActivity"
              }
            ],
            "nullable": true
          },
          "dependentBenefitEnrollment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DependentBenefitEnrollment"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitEnrollmentActivity": {
        "required": [
          "actionDate",
          "actionTagName",
          "activityType",
          "benefitGroupName",
          "benefitName",
          "benefitPlanEnrollmentId",
          "benefitPlanGroupId",
          "benefitYear",
          "coverageName",
          "employeeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryId",
          "pageTagName",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanEnrollmentId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitYear": {
            "type": "integer",
            "format": "int32"
          },
          "benefitGroupName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "benefitPlanId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanEnrollmentDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "benefitPlanFlatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanCoverageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanSTDRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanLTDRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanCafeteriaRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverageName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "signupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employeeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employerRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netEmployeeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netEmployerRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "flexCredit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enrollmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ],
            "nullable": true
          },
          "approvalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ],
            "nullable": true
          },
          "isEmployeeSubmitted": {
            "type": "boolean",
            "nullable": true
          },
          "isDeductionApproved": {
            "type": "boolean",
            "nullable": true
          },
          "lastBenefitPlanId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageTagName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "actionTagName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "activityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ActivityTypes"
              }
            ]
          },
          "openEnrollmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_OpenEnrollmentStatus"
              }
            ],
            "nullable": true
          },
          "lifeEventId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loginHistoryId": {
            "type": "string",
            "format": "uuid"
          },
          "actionDate": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollment"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
              }
            ],
            "nullable": true
          },
          "benefitEnrollmentActivityDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentActivityDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEnrollment": {
        "required": [
          "benefitGroupName",
          "benefitPlanGroupId",
          "benefitYear",
          "employeeId",
          "enrollmentStatus",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryId",
          "rowId",
          "waiveReason"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitYear": {
            "type": "integer",
            "format": "int32"
          },
          "benefitGroupName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "enrollmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ]
          },
          "waiveReason": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "loginHistoryId": {
            "type": "string",
            "format": "uuid"
          },
          "isLocked": {
            "type": "boolean",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isCobraPlan": {
            "type": "boolean"
          },
          "benefitPlanType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanType"
              }
            ],
            "nullable": true
          },
          "benefitEnrollmentActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentActivity"
            },
            "nullable": true
          },
          "benefitPlanEnrollmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_Beneficiary": {
        "required": [
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationship": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ssn": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "homePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhoneNo": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "county": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "useEmployeeAddress": {
            "type": "boolean",
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "employee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_User"
              }
            ],
            "nullable": true
          },
          "beneficiaryBenefitEnrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BeneficiaryBenefitEnrollment"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BeneficiaryBenefitEnrollment": {
        "required": [
          "beneficiaryId",
          "beneficiaryType",
          "benefitPlanEnrollmentDetailId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "beneficiaryId": {
            "type": "integer",
            "format": "int32"
          },
          "beneficiaryType": {
            "type": "integer",
            "format": "int32"
          },
          "primaryPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "contingentPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isClone": {
            "type": "boolean",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loginHistoryId": {
            "type": "integer",
            "format": "int64"
          },
          "beneficiary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Beneficiary"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitEnrollmentRetirementRate": {
        "required": [
          "benefitPlanEnrollmentDetailId",
          "employeeContribution",
          "employeeContributionType",
          "employeeDollarAmount",
          "employeePercentAmount",
          "employerContribution",
          "employerPercentAmount",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "postTaxEmployeeContribution",
          "postTaxEmployeeDollarAmount",
          "postTaxEmployeePercentAmount",
          "postTaxType",
          "preTaxEmployeeContribution",
          "preTaxEmployeeDollarAmount",
          "preTaxEmployeePercentAmount",
          "preTaxType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeDollarAmount": {
            "type": "number",
            "format": "double"
          },
          "employeePercentAmount": {
            "type": "number",
            "format": "double"
          },
          "employerPercentAmount": {
            "type": "number",
            "format": "double"
          },
          "employeeContribution": {
            "type": "number",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "format": "double"
          },
          "preTaxEmployeeDollarAmount": {
            "type": "number",
            "format": "double"
          },
          "preTaxEmployeePercentAmount": {
            "type": "number",
            "format": "double"
          },
          "preTaxEmployeeContribution": {
            "type": "number",
            "format": "double"
          },
          "postTaxEmployeeDollarAmount": {
            "type": "number",
            "format": "double"
          },
          "postTaxEmployeePercentAmount": {
            "type": "number",
            "format": "double"
          },
          "postTaxEmployeeContribution": {
            "type": "number",
            "format": "double"
          },
          "preTaxType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ]
          },
          "postTaxType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ]
          },
          "employeeContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ]
          },
          "benefitPlanEnrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitFormCompany": {
        "required": [
          "benefitFormId",
          "companyId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitFormId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitForm"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanForm": {
        "required": [
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitForm"
              }
            ],
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitForm": {
        "required": [
          "formName",
          "formTemplate",
          "formTypeId",
          "isActive",
          "language",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "formName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "formTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "formTemplate": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "language": {
            "type": "integer",
            "format": "int32"
          },
          "planYearStartDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "planYearStartDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "benefitFormCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitFormCompany"
            },
            "nullable": true
          },
          "benefitPlanInsuranceForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanInsuranceForm"
            },
            "nullable": true
          },
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
            },
            "nullable": true
          },
          "benefitPlanForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanForm"
            },
            "nullable": true
          },
          "formType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEnrollmentInsuranceApplicationHistory": {
        "required": [
          "applicationData",
          "applicationFile",
          "benefitPlanEnrollmentInsuranceApplicationId",
          "benefitPlanInsuranceFormId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentInsuranceApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanInsuranceFormId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationFile": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "applicationData": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "benefitPlanInsuranceForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanInsuranceForm"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentInsuranceApplication": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentInsuranceApplication"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanInsuranceForm": {
        "required": [
          "benefitFormId",
          "benefitPlanId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitFormId": {
            "type": "integer",
            "format": "int32"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitForm"
              }
            ],
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentInsuranceApplicationHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentInsuranceApplicationHistory"
            },
            "nullable": true
          },
          "benefitPlanEnrollmentInsuranceApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentInsuranceApplication"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEnrollmentInsuranceApplication": {
        "required": [
          "applicationData",
          "applicationFile",
          "benefitPlanEnrollmentDetailId",
          "benefitPlanInsuranceFormId",
          "isApplicationSubmitted",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanInsuranceFormId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationFile": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "applicationData": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "isApplicationSubmitted": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlanInsuranceForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanInsuranceForm"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentInsuranceApplicationHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentInsuranceApplicationHistory"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEnrollmentDetail": {
        "required": [
          "additionalCost",
          "approvalStatus",
          "benefitName",
          "benefitPlanEnrollmentId",
          "benefitPlanId",
          "coverageCode",
          "coverageName",
          "employeeRate",
          "employerRate",
          "enrollmentStatus",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryId",
          "netEmployeeRate",
          "netEmployerRate",
          "oneTimeMatchRate",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanCoverageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanFlatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanAgeBandRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanSTDRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanLTDRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanCafeteriaRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "directDepositId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "physicianName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "coverageName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "coverageCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "employeeRate": {
            "type": "number",
            "format": "double"
          },
          "employerRate": {
            "type": "number",
            "format": "double"
          },
          "netEmployeeRate": {
            "type": "number",
            "format": "double"
          },
          "netEmployerRate": {
            "type": "number",
            "format": "double"
          },
          "oneTimeMatchRate": {
            "type": "number",
            "format": "double"
          },
          "flexCredit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "benefitFlexCreditId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enrollmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ]
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "signupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "waivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approvalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ]
          },
          "approvalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "flag1": {
            "type": "string",
            "nullable": true
          },
          "flag2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "flag3": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "flag4": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isClone": {
            "type": "boolean",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loginHistoryId": {
            "type": "string",
            "format": "uuid"
          },
          "premiumFormulaJson": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "additionalCost": {
            "type": "number",
            "format": "double"
          },
          "insuranceFormPrintDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eoiFormPrintDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isJointFiller": {
            "type": "boolean",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanCoverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCoverage"
              }
            ],
            "nullable": true
          },
          "benefitPlanFlatRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRate"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollment"
              }
            ],
            "nullable": true
          },
          "beneficiaryBenefitEnrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BeneficiaryBenefitEnrollment"
            },
            "nullable": true
          },
          "benefitEnrollmentActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentActivity"
            },
            "nullable": true
          },
          "benefitEnrollmentRetirementRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentRetirementRate"
            },
            "nullable": true
          },
          "benefitPlanEnrollmentInsuranceApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentInsuranceApplication"
            },
            "nullable": true
          },
          "benefitPlanEnrollmentSavingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentSavingAccount"
            },
            "nullable": true
          },
          "dependentBenefitEnrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_DependentBenefitEnrollment"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEnrollmentSavingAccount": {
        "required": [
          "amount",
          "benefitCafeteriaPlanCalculatorId",
          "benefitPlanEnrollmentDetailId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitCafeteriaPlanCalculatorId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitCafeteriaPlanCalculator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanCalculator"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCafeteriaPlanCalculator": {
        "required": [
          "benefitCafeteriaPlanRateId",
          "category",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "benefitCafeteriaPlanRateId": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "benefitCafeteriaPlanRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanRate"
              }
            ],
            "nullable": true
          },
          "benefitPlanEnrollmentSavingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentSavingAccount"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCafeteriaPlanRate": {
        "required": [
          "agreementText",
          "benefitPlanId",
          "employeeDeductionType",
          "employerDeductionType",
          "isCalculatorEnabled",
          "isConfirmationEnabled",
          "isDirectDepositEnabled",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rateFrequency",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "rateFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateInputFrequency"
              }
            ]
          },
          "employerDeductionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionTypes"
              }
            ]
          },
          "employeeDeductionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionTypes"
              }
            ]
          },
          "isCalculatorEnabled": {
            "type": "boolean"
          },
          "isConfirmationEnabled": {
            "type": "boolean"
          },
          "agreementText": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "isDirectDepositEnabled": {
            "type": "boolean"
          },
          "isDirectDepositRequired": {
            "type": "boolean",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitCafeteriaPlanCalculators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanCalculator"
            },
            "nullable": true
          },
          "benefitCafeteriaPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanRateDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCafeteriaPlanRateDetailOverride": {
        "required": [
          "benefitCafeteriaPlanRateDetailId",
          "employeeContribution",
          "employerContribution",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitCafeteriaPlanRateDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "employerContribution": {
            "type": "number",
            "format": "double"
          },
          "employerContributionOldAge": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "employeeContribution": {
            "type": "number",
            "format": "double"
          },
          "employeeContributionOldAge": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "benefitCafeteriaPlanRateDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanRateDetail"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCafeteriaPlanRateDetail": {
        "required": [
          "benefitCafeteriaPlanRateId",
          "coverageId",
          "employeeContribution",
          "employerContribution",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "maxLimitation",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitCafeteriaPlanRateId": {
            "type": "integer",
            "format": "int32"
          },
          "coverageId": {
            "type": "integer",
            "format": "int32"
          },
          "maxLimitation": {
            "type": "number",
            "format": "double"
          },
          "employeeContribution": {
            "type": "number",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "format": "double"
          },
          "maxLimitationOldAge": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employeeContributionOldAge": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employerContributionOldAge": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "benefitCafeteriaPlanRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanRate"
              }
            ],
            "nullable": true
          },
          "coverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCoverage"
              }
            ],
            "nullable": true
          },
          "benefitCafeteriaPlanRateDetailOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanRateDetailOverride"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitCoverage": {
        "required": [
          "coverageTierLookupId",
          "coverageType",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "coverageType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCoverageTypes"
              }
            ]
          },
          "coverageTierLookupId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isSystemDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "benefitCafeteriaPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanRateDetail"
            },
            "nullable": true
          },
          "benefitPlanCoverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCoverage"
            },
            "nullable": true
          },
          "coverageTierLookup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanFlatRateDetailsOverride": {
        "required": [
          "benefitPlanCoverageId",
          "benefitPlanFlatRateId",
          "employeeTierNumber",
          "employerShareType",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "markupShareType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanFlatRateId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanCoverageId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeTierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "employerShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "markupShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerShareTypes"
              }
            ]
          },
          "markupShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ]
          },
          "benefitPlanCoverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCoverage"
              }
            ],
            "nullable": true
          },
          "benefitPlanFlatRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanCoverage": {
        "required": [
          "benefitCoverageId",
          "benefitPlanId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "orderNumber",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitCoverageId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "benefitCoverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCoverage"
              }
            ],
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanFlatRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRateDetail"
            },
            "nullable": true
          },
          "benefitPlanFlatRateDetailsOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRateDetailsOverride"
            },
            "nullable": true
          },
          "benefitPlanEnrollmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanFlatRateDetail": {
        "required": [
          "benefitPlanCoverageId",
          "benefitPlanFlatRateId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "markupShareTypeId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanFlatRateId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanCoverageId": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyPremium": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ageRangeFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "markupShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markupShareTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyBilledRates": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "benefitPlanCoverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCoverage"
              }
            ],
            "nullable": true
          },
          "benefitPlanFlatRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanFlatRate": {
        "required": [
          "benefitPlanId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "rateTier": {
            "type": "number",
            "format": "double"
          },
          "isAgeBanded": {
            "type": "boolean"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanFlatRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRateDetail"
            },
            "nullable": true
          },
          "benefitPlanFlatRateDetailsOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRateDetailsOverride"
            },
            "nullable": true
          },
          "benefitPlanEnrollmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_CompanyPlanFlatRateDetail": {
        "required": [
          "benefitPlanCoverageId",
          "companyPlanFlatRateId",
          "employerContributionTypeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "markupTypeId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "companyPlanFlatRateId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanCoverageId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanCoverageCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "monthlyPremium": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markupShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyBilledRates": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employerContributionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "employerContribution": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employeeContribution": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ageRangeFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanCoverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCoverage"
              }
            ],
            "nullable": true
          },
          "companyPlanFlatRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyPlanFlatRate"
              }
            ],
            "nullable": true
          },
          "markupType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "employerContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_CompanyPlanFlatRate": {
        "required": [
          "companyPlanId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "planFlatRateId",
          "rateTier",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "companyPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "planFlatRateId": {
            "type": "integer",
            "format": "int32"
          },
          "rateTier": {
            "type": "number",
            "format": "double"
          },
          "isAgeBanded": {
            "type": "boolean"
          },
          "companyPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyPlan"
              }
            ],
            "nullable": true
          },
          "planFlatRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRate"
              }
            ],
            "nullable": true
          },
          "companyPlanFlatRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyPlanFlatRateDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_CompanyPlan": {
        "required": [
          "benefitClassId",
          "benefitPlanId",
          "companyId",
          "isActive",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "newHireWaitingPeriodId",
          "planStartDate",
          "planStartDateTime",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitClassId": {
            "type": "integer",
            "format": "int32"
          },
          "planStartDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ]
          },
          "planStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "newHireWaitingPeriodId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "employerContributionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employerContribution": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markupTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "markupShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Company"
              }
            ],
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyBenefitClass"
              }
            ],
            "nullable": true
          },
          "newHireWaitingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "companyPlanFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyPlanFlatRate"
            },
            "nullable": true
          },
          "markupType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "employerContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_Company": {
        "required": [
          "code",
          "dbaName",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "legalName",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 6,
            "type": "integer",
            "format": "int32"
          },
          "dbaName": {
            "maxLength": 157,
            "minLength": 0,
            "type": "string"
          },
          "legalName": {
            "maxLength": 114,
            "minLength": 0,
            "type": "string"
          },
          "statusCode": {
            "maxLength": 114,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "endDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System_DateOnly"
              }
            ],
            "nullable": true
          },
          "eventTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userCompanyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_UserCompanyRole"
            },
            "nullable": true
          },
          "companyEmployees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_Public_User_CompanyEmployee"
            },
            "nullable": true
          },
          "companyPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyPlan"
            },
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitDurationTemplateColumnNames": {
        "enum": [
          "0 - Name | Represents the name column in the benefit duration template.",
          "1 - Year | Represents the year column in the benefit duration template.",
          "2 - StartDate | Represents the start date column in the benefit duration template.",
          "3 - StopDate | Represents the stop date column in the benefit duration template.",
          "4 - EnrollmentStartDate | Represents the enrollment start date column in the benefit duration template.",
          "5 - EnrollmentEndDate | Represents the enrollment end date column in the benefit duration template.",
          "6 - OrganizationID | Represents the organization ID column in the benefit duration template.",
          "7 - CompanyID | Represents the company ID column in the benefit duration template.",
          "8 - EnrollmentDuration | Represents the enrollment duration column in the benefit duration template.",
          "9 - EnrollmentDurationType | Represents the enrollment duration type column in the benefit duration template.",
          "10 - NewHireEnrollmentDuration | Represents the new hire enrollment duration column in the benefit duration template.",
          "11 - NewHireEnrollmentDurationType | Represents the new hire enrollment duration type column in the benefit duration template.",
          "12 - IsEnrollmentClosed | Represents the enrollment closed status column in the benefit duration template.",
          "13 - IsSystemDefault | Represents the system default status column in the benefit duration template.",
          "14 - IsOrganizational | Represents the organizational status column in the benefit duration template."
        ],
        "type": "string",
        "description": "Specifies the column names for the benefit duration template."
      },
      "BBSI_Benefits_Database_BenefitDurationTemplateHistory": {
        "required": [
          "benefitClientEnrollmentSetupId",
          "changeType",
          "columnName",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "newValue",
          "oldValue",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitClientEnrollmentSetupId": {
            "type": "integer",
            "format": "int32"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ]
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitDurationTemplateColumnNames"
              }
            ]
          },
          "oldValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string"
          },
          "newValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string"
          },
          "benefitClientEnrollmentSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClientEnrollmentSetup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanDurationAssociation": {
        "required": [
          "benefitClientEnrollmentSetupId",
          "benefitPlanId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitClientEnrollmentSetupId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitClientEnrollmentSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClientEnrollmentSetup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitClientEnrollmentSetup": {
        "required": [
          "companyId",
          "isActive",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "newHireEnrollmentDuration",
          "newHireEnrollmentDurationType",
          "openEnrollmentEndDate",
          "openEnrollmentStartDate",
          "planEndDate",
          "planStartDate",
          "planYear",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "planYear": {
            "type": "integer",
            "format": "int32"
          },
          "planStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "planEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "openEnrollmentStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "newHireEnrollmentDurationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DurationTypes"
              }
            ]
          },
          "newHireEnrollmentDuration": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Company"
              }
            ],
            "nullable": true
          },
          "benefitClones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClone"
            },
            "nullable": true
          },
          "benefitDurationTemplateHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitDurationTemplateHistory"
            },
            "nullable": true
          },
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
            },
            "nullable": true
          },
          "benefitPlanDurationAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanDurationAssociation"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanCustomGroup": {
        "required": [
          "createdDate",
          "groupName",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "groupName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BillCode": {
        "required": [
          "code",
          "description",
          "isActive",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_DeductionCode": {
        "required": [
          "code",
          "description",
          "isActive",
          "isPostTaxDeductionCode",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "name",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "isPostTaxDeductionCode": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanAgeBandRate": {
        "required": [
          "age",
          "benefitPlanId",
          "employeeShare",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryUserId",
          "markupShareType",
          "netRate",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "netRate": {
            "type": "number",
            "format": "double"
          },
          "employerShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "employerShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerShareTypes"
              }
            ],
            "nullable": true
          },
          "employeeShare": {
            "type": "number",
            "format": "double"
          },
          "loginHistoryUserId": {
            "type": "string",
            "format": "uuid"
          },
          "markupShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MarkupShareTypes"
              }
            ]
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanCompany": {
        "required": [
          "benefitPlanId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanInfoOverride": {
        "required": [
          "benefitPlanId",
          "companyTierNumber",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyDeductionCodeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "preTaxDeductionCodeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "postTaxDeductionCodeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyTierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DaysOfMonth"
              }
            ],
            "nullable": true
          },
          "employerBilling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployerBilling"
              }
            ],
            "nullable": true
          },
          "annualDeductions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ]
          },
          "annualDeductionsCap": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tpaId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "excludePayCodes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "planMatchType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_PlanMatchType"
              }
            ],
            "nullable": true
          },
          "matchAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "matchAmountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MatchAmountType"
              }
            ],
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_CompatibilityTypes": {
        "enum": [
          "1 - Compatible | Represents a state where the plans or systems are compatible with each other.",
          "2 - In-Compatible | Represents a state where the plans or systems are not compatible with each other."
        ],
        "type": "string",
        "description": "Specifies the types of compatibility between plans or systems."
      },
      "BBSI_Benefits_Database_BenefitPlanCompatibility": {
        "required": [
          "benefitPlanId",
          "compatibilityType",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId",
          "tiedBenefitPlanId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "compatibilityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompatibilityTypes"
              }
            ]
          },
          "tiedBenefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "tiedBenefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanGroupLifeRateDetail": {
        "required": [
          "benefitPlanGroupLifeRateId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "maxCoverageAmount",
          "monthlyPremium",
          "rateBillingUnit",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanGroupLifeRateId": {
            "type": "integer",
            "format": "int32"
          },
          "ageRangeFrom": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRangeTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverageIncrement": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minCoverageAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxCoverageAmount": {
            "type": "number",
            "format": "double"
          },
          "applicationRequire": {
            "type": "boolean",
            "nullable": true
          },
          "guaranteedIssueLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rateBillingUnit": {
            "type": "number",
            "format": "double"
          },
          "monthlyPremium": {
            "type": "number",
            "format": "double"
          },
          "markupAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isLateEntrant": {
            "type": "boolean"
          },
          "benefitPlanGroupLifeRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanGroupLifeRate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanGroupLifeRateReductionSchedule": {
        "required": [
          "ageBandFrom",
          "ageBandTo",
          "benefitPlanGroupLifeRateId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanGroupLifeRateId": {
            "type": "integer",
            "format": "int32"
          },
          "ageBandFrom": {
            "type": "integer",
            "format": "int32"
          },
          "ageBandTo": {
            "type": "integer",
            "format": "int32"
          },
          "reductionPercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "benefitPlanGroupLifeRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanGroupLifeRate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanGroupLifeRate": {
        "required": [
          "benefitPlanId",
          "coverageRoundingRuleId",
          "isLateEntrant",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "salaryMultiplierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roundToNearestId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "coverageRoundingRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationForm": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dependentCoverageLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "useSpouseAge": {
            "type": "boolean",
            "nullable": true
          },
          "lateEntrantDuration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isLateEntrant": {
            "type": "boolean"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "salaryMultiplier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "coverageRoundingRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "roundToNearest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "ageCalculationFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "benefitPlanGroupLifeRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanGroupLifeRateDetail"
            },
            "nullable": true
          },
          "benefitPlanGroupLifeRateReductionSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanGroupLifeRateReductionSchedule"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanHistory": {
        "required": [
          "benefitPlanId",
          "changedDate",
          "changeType",
          "columnName",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "loginHistoryUserId",
          "newValue",
          "oldValue",
          "rowId",
          "stepNumber"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "stepNumber": {
            "type": "integer",
            "format": "int32"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ChangeTypes"
              }
            ]
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_ColumnNames"
              }
            ]
          },
          "oldValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string"
          },
          "newValue": {
            "maxLength": 7000,
            "minLength": 0,
            "type": "string"
          },
          "changedDate": {
            "type": "string",
            "format": "date-time"
          },
          "loginHistoryUserId": {
            "type": "string",
            "format": "uuid"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanLink": {
        "required": [
          "benefitPlanId",
          "description",
          "filename",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "filename": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanLtdRateDetail": {
        "required": [
          "ageRangeFrom",
          "ageRangeTo",
          "benefitPlanLTDRateId",
          "employerContribution",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "maximumMonthlySalary",
          "monthlyRatePerUnit",
          "percentOfMonthlySalary",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanLTDRateId": {
            "type": "integer",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "format": "int32"
          },
          "ageRangeFrom": {
            "type": "integer",
            "format": "int32"
          },
          "percentOfMonthlySalary": {
            "type": "number",
            "format": "double"
          },
          "maximumMonthlySalary": {
            "type": "number",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "format": "double"
          },
          "benefitPlanLTDRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanLtdRate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanLtdRate": {
        "required": [
          "ageCalculationFrequencyId",
          "benefitPlanId",
          "coverageRoundingRuleId",
          "isLateEntrantRules",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rateBasedOnId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "roundToNearestId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "type": "integer",
            "format": "int32"
          },
          "coverageRoundingRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "rateBasedOnId": {
            "type": "integer",
            "format": "int32"
          },
          "isLateEntrantRules": {
            "type": "boolean"
          },
          "lateEntrantDuration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "coverageRoundingRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "roundToNearest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "ageCalculationFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "rateBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "benefitPlanLTDRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanLtdRateDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanStdRateDetail": {
        "required": [
          "ageRangeFrom",
          "ageRangeTo",
          "benefitPlanSTDRateId",
          "employerContribution",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "maximumWeeklySalary",
          "monthlyRatePerUnit",
          "percentOfWeeklySalary",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanSTDRateId": {
            "type": "integer",
            "format": "int32"
          },
          "percentOfWeeklySalary": {
            "type": "number",
            "format": "double"
          },
          "maximumWeeklySalary": {
            "type": "number",
            "format": "double"
          },
          "monthlyRatePerUnit": {
            "type": "number",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "format": "double"
          },
          "ageRangeFrom": {
            "type": "integer",
            "format": "int32"
          },
          "ageRangeTo": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanSTDRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanStdRate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanStdRate": {
        "required": [
          "ageCalculationFrequencyId",
          "benefitPlanId",
          "coverageRoundingRuleId",
          "isLateEntrantRules",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rateBasedOnId",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "coverageRoundingRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "roundToNearestId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationFrequencyId": {
            "type": "integer",
            "format": "int32"
          },
          "rateBasedOnId": {
            "type": "integer",
            "format": "int32"
          },
          "isLateEntrantRules": {
            "type": "boolean"
          },
          "lateEntrantDuration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "coverageRoundingRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "roundToNearest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "ageCalculationFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "rateBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "benefitPlanSTDRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanStdRateDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitRetirementPlanRateDetail": {
        "required": [
          "benefitRetirementPlanRateId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "matchingPercent",
          "matchingPercentSalary",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitRetirementPlanRateId": {
            "type": "integer",
            "format": "int32"
          },
          "matchingPercent": {
            "type": "number",
            "format": "double"
          },
          "matchingPercentSalary": {
            "type": "number",
            "format": "double"
          },
          "benefitRetirementPlanRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitRetirementPlanRate"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitRetirementPlanRate": {
        "required": [
          "benefitPlanId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "retirementType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "retirementType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_RetirementTypes"
              }
            ]
          },
          "employeeBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployeeBasedOnTypes"
              }
            ],
            "nullable": true
          },
          "employerBasedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_EmployerBasedOnTypes"
              }
            ],
            "nullable": true
          },
          "employeeContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ],
            "nullable": true
          },
          "employerContributionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Enum_ContributionTypes"
              }
            ],
            "nullable": true
          },
          "employerFlatContribution": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "safeHarborContribution": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "simpleMatching": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "simpleNonElective": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitRetirementPlanRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitRetirementPlanRateDetail"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEmployeeType": {
        "required": [
          "benefitPlanId",
          "employeeTypeId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "employeeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanEmployeeStatus": {
        "required": [
          "benefitPlanId",
          "employeeStatusId",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "employeeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlan": {
        "required": [
          "benefitPlanTypeId",
          "createdByUserId",
          "createdDate",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "planID",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitClientEnrollmentSetupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanEligibilityRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanCustomGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "planName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "planID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "deductionDescription": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "benefitExplanation": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "benefitExplanationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_LinkActionTypes"
              }
            ]
          },
          "providerSearchURL": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isFlexibleCreditApplicable": {
            "type": "boolean"
          },
          "isVisibleOnCobraReport": {
            "type": "boolean"
          },
          "isBeneficiaryRequired": {
            "type": "boolean"
          },
          "isBeneficiaryVisible": {
            "type": "boolean"
          },
          "benefitCustomMessage": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "insuranceApplication": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "insuranceApplicationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_LinkActionTypes"
              }
            ],
            "nullable": true
          },
          "childrenAgeLimit": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullTimeStudentAgeLimit": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "annualDeductions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ]
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ]
          },
          "step1StatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "step2StatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "step3StatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "step4StatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "step5StatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finalStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "washRuleCalculationDayId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "specificMonthId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billingWashRule": {
            "type": "boolean"
          },
          "dayOfMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DaysOfMonth"
              }
            ],
            "nullable": true
          },
          "employerBillingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "glCodeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "billCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "w2Reporting": {
            "type": "boolean"
          },
          "annualDeductionsCap": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tpaId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "excludePayCodes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isCobraEligible": {
            "type": "boolean"
          },
          "planMatchType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_PlanMatchType"
              }
            ],
            "nullable": true
          },
          "matchAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "matchAmountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_MatchAmountType"
              }
            ],
            "nullable": true
          },
          "deductionCodeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "preTaxDeductionCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "postTaxDeductionCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "planYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "groupNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "subCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "branch": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "controlNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "benefitClientEnrollmentSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitClientEnrollmentSetup"
              }
            ],
            "nullable": true
          },
          "benefitForm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitForm"
              }
            ],
            "nullable": true
          },
          "benefitPlanEligibilityRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityRule"
              }
            ],
            "nullable": true
          },
          "benefitPlanComparisonTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplate"
              }
            ],
            "nullable": true
          },
          "benefitPlanType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanType"
              }
            ],
            "nullable": true
          },
          "benefitPlanCustomGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCustomGroup"
              }
            ],
            "nullable": true
          },
          "billCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BillCode"
              }
            ],
            "nullable": true
          },
          "preTaxDeductionCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionCode"
              }
            ],
            "nullable": true
          },
          "postTaxDeductionCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionCode"
              }
            ],
            "nullable": true
          },
          "step1Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "step2Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "step3Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "step4Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "step5Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "finalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "taxStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "washRuleCalculationDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "ageCalculationMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "specificMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "employerBilling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_Lookup"
              }
            ],
            "nullable": true
          },
          "benefitPlanForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanForm"
            },
            "nullable": true
          },
          "benefitCafeteriaPlanRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCafeteriaPlanRate"
            },
            "nullable": true
          },
          "benefitCloneLogsNew": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCloneLog"
            },
            "nullable": true
          },
          "benefitCloneLogsOld": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitCloneLog"
            },
            "nullable": true
          },
          "benefitPlanAgeBandRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanAgeBandRate"
            },
            "nullable": true
          },
          "benefitPlanCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCompany"
            },
            "nullable": true
          },
          "benefitPlanInfoOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanInfoOverride"
            },
            "nullable": true
          },
          "benefitPlanComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonSummaryTemplateField"
            },
            "nullable": true
          },
          "benefitPlanCompatibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCompatibility"
            },
            "nullable": true
          },
          "benefitPlanCoverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanCoverage"
            },
            "nullable": true
          },
          "benefitPlanEligibilityAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityAssociation"
            },
            "nullable": true
          },
          "benefitPlanDurationAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanDurationAssociation"
            },
            "nullable": true
          },
          "benefitPlanFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanFlatRate"
            },
            "nullable": true
          },
          "benefitPlanGroupLifeRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanGroupLifeRate"
            },
            "nullable": true
          },
          "benefitPlanHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanHistory"
            },
            "nullable": true
          },
          "benefitPlanLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanLink"
            },
            "nullable": true
          },
          "benefitPlanInsuranceForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanInsuranceForm"
            },
            "nullable": true
          },
          "benefitPlanLTDRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanLtdRate"
            },
            "nullable": true
          },
          "benefitPlanSTDRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanStdRate"
            },
            "nullable": true
          },
          "benefitRetirementPlanRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitRetirementPlanRate"
            },
            "nullable": true
          },
          "benefitEnrollmentActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitEnrollmentActivity"
            },
            "nullable": true
          },
          "benefitPlanEnrollmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
            },
            "nullable": true
          },
          "benefitPlanEmployeeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEmployeeType"
            },
            "nullable": true
          },
          "benefitPlanEmployeeStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEmployeeStatus"
            },
            "nullable": true
          },
          "companyPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyPlan"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_BenefitPlanComparisonSummaryTemplateField": {
        "required": [
          "benefitPlanComparisonTemplateFieldId",
          "benefitPlanId",
          "fieldValue",
          "lastChangeDate",
          "lastChangedByUserId",
          "lastChangedByUserType",
          "rowId"
        ],
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "benefitPlanComparisonTemplateFieldId": {
            "type": "integer",
            "format": "int32"
          },
          "fieldValue": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "benefitPlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlan"
              }
            ],
            "nullable": true
          },
          "benefitPlanComparisonTemplateField": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonTemplateField"
              }
            ],
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "trackingTag": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastChangedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "lastChangedByUserType": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_EligibilityCriteria": {
        "type": "object",
        "properties": {
          "eligibleEmployeePayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_EmployeePayTypes"
            },
            "description": "Gets or sets the collection of eligible employee pay types.",
            "nullable": true
          },
          "eligibleCompanyLevelBindings": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the collection of Guid values representing eligible company level bindings.",
            "nullable": true
          },
          "eligiblePositionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the collection of eligible position IDs.",
            "nullable": true
          },
          "eligibleCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityCode"
            },
            "description": "Gets or sets the collection of Benefit Plan Eligibility Codes that are eligible.",
            "nullable": true
          },
          "weeklyHourFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the filter type for comparing weekly hours.",
            "nullable": true
          },
          "weeklyHourFrom": {
            "type": "number",
            "description": "Gets or sets the starting value for the weekly hours.",
            "format": "double",
            "nullable": true
          },
          "weeklyHourTo": {
            "type": "number",
            "description": "Gets or sets the maximum number of weekly hours.",
            "format": "double",
            "nullable": true
          },
          "annualSalaryFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the filter type for comparing annual salary values.",
            "nullable": true
          },
          "annualSalaryFrom": {
            "type": "number",
            "description": "Gets or sets the starting annual salary for a job position.",
            "format": "double",
            "nullable": true
          },
          "annualSalaryTo": {
            "type": "number",
            "description": "Gets or sets the annual salary upper limit.",
            "format": "double",
            "nullable": true
          },
          "serviceYearFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompareFilterTypes"
              }
            ],
            "description": "Gets or sets the filter type for comparing service years.",
            "nullable": true
          },
          "serviceYearFrom": {
            "type": "integer",
            "description": "Gets or sets the starting year of service.",
            "format": "int32",
            "nullable": true
          },
          "serviceYearTo": {
            "type": "integer",
            "description": "Gets or sets the ending year of service.",
            "format": "int32",
            "nullable": true
          },
          "eligibleStates": {
            "type": "string",
            "description": "Gets or sets the eligible states for a certain criteria.",
            "nullable": true
          },
          "eligibleZipCodes": {
            "type": "string",
            "description": "Gets or sets the eligible zip codes for a certain criteria.",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "description": "Gets or sets the waiting period filter type for a specific waiting period.",
            "nullable": true
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a class for defining eligibility criteria for a certain program or service."
      },
      "BBSI_Benefits_Model_Default_CustomBenefitPlanComparisonSummaryField": {
        "type": "object",
        "properties": {
          "benefitPlanComparisonSummaryFieldId": {
            "type": "integer",
            "description": "Gets or sets the ID of the Benefit Plan Comparison Summary Field.",
            "format": "int32"
          },
          "benefitPlanComparisonTemplateFieldId": {
            "type": "integer",
            "description": "Gets or sets the ID of the Benefit Plan Comparison Template Field.",
            "format": "int32"
          },
          "fieldLabel": {
            "type": "string",
            "description": "Gets or sets the field label with an initial value of an empty string.",
            "nullable": true
          },
          "fieldValue": {
            "type": "string",
            "description": "Gets or sets the value of the field, default value is an empty string.",
            "nullable": true
          },
          "fieldOrder": {
            "type": "integer",
            "description": "Gets or sets the order of the field as a byte value.",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the property is mandatory."
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomBenefitPlanRatesDetails": {
        "type": "object",
        "properties": {
          "planCoverageId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a plan coverage.",
            "format": "uuid"
          },
          "benefitPlanFlatRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate.",
            "format": "uuid"
          },
          "coverage": {
            "type": "string",
            "description": "Gets or sets the coverage information as a string. Default value is an empty string.",
            "nullable": true
          },
          "coverageId": {
            "type": "integer",
            "description": "Gets or sets the coverage ID as a byte value.",
            "format": "int32",
            "nullable": true
          },
          "coverageDescription": {
            "type": "string",
            "description": "Gets or sets the coverage description. Default value is an empty string.",
            "nullable": true
          },
          "employeeCost": {
            "type": "number",
            "description": "Gets Calculated the total cost for the employee, taking into account the net total, markup share, markup share type, and employer cost.",
            "format": "double",
            "readOnly": true
          },
          "oldPayPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets or sets the old pay period employee cost.",
            "format": "double"
          },
          "payPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets Calculated the pay period employee cost based on the employee's annual cost, deduction frequency, pay cycle, and annual deductions cap.",
            "format": "double",
            "readOnly": true
          },
          "employerCost": {
            "type": "number",
            "description": "Gets Calculated the employer cost based on the net total, markup share, and employer share.",
            "format": "double",
            "readOnly": true
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a financial amount.",
            "format": "double"
          },
          "oldPayPeriodEmployerCost": {
            "type": "number",
            "description": "Gets or sets the employer cost for the old pay period.",
            "format": "double"
          },
          "payPeriodEmployerCost": {
            "type": "number",
            "description": "Gets Calculated the employer cost for the pay period based on the provided parameters.",
            "format": "double",
            "readOnly": true
          },
          "employerShareType": {
            "type": "integer",
            "description": "Gets or sets the type of employer share.",
            "format": "int32"
          },
          "netTotal": {
            "type": "number",
            "description": "Gets or sets the net total value.",
            "format": "double"
          },
          "annualDeductionFrequency": {
            "type": "integer",
            "description": "Gets or sets the frequency of annual deduction as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          },
          "markupShare": {
            "type": "number",
            "description": "Gets or sets the markup share as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "markupShareType": {
            "type": "integer",
            "description": "Gets or sets the markup share type as a byte value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomDisabilityCoverageRates": {
        "type": "object",
        "properties": {
          "benefitPlanStdRateId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Standard Rate Id.",
            "format": "int32"
          },
          "benefitPlanLtdRateId": {
            "type": "integer",
            "description": "Gets or sets the ID of the Benefit Plan LTD Rate.",
            "format": "int32"
          },
          "coverage": {
            "type": "string",
            "description": "Gets or sets the coverage information as a string. Default value is an empty string.",
            "nullable": true
          },
          "coverageId": {
            "type": "integer",
            "description": "Gets or sets the coverage ID as a byte value.",
            "format": "int32"
          },
          "coverageDescription": {
            "type": "string",
            "description": "Gets or sets the description of the coverage.",
            "nullable": true
          },
          "employeeCost": {
            "type": "number",
            "description": "Gets or sets the cost associated with an employee.",
            "format": "double"
          },
          "oldPayPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets or sets the old pay period employee cost as a decimal value.",
            "format": "double"
          },
          "payPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets Calculated the pay period employee cost based on the employee's annual cost, deduction frequency, pay cycle, and annual deductions cap.",
            "format": "double",
            "readOnly": true
          },
          "employerCost": {
            "type": "number",
            "description": "Gets or sets the employer cost associated with a certain expense.",
            "format": "double"
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a financial contribution, typically in decimal format.",
            "format": "double"
          },
          "oldPayPeriodEmployerCost": {
            "type": "number",
            "description": "Gets or sets the employer cost for the old pay period.",
            "format": "double"
          },
          "payPeriodEmployerCost": {
            "type": "number",
            "description": "Gets Calculated the employer cost for the pay period based on the provided parameters.",
            "format": "double",
            "readOnly": true
          },
          "employerShareType": {
            "type": "integer",
            "description": "Gets or sets the type of employer share.",
            "format": "int32"
          },
          "netTotal": {
            "type": "number",
            "description": "Gets or sets the net total value.",
            "format": "double"
          },
          "annualDeductionFrequency": {
            "type": "integer",
            "description": "Gets or sets the annual deduction frequency in bytes, nullable.",
            "format": "int32",
            "nullable": true
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_GroupLifeCoverageModel": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "description": "Gets or sets the cost value.",
            "format": "double"
          },
          "costBilling": {
            "type": "number",
            "description": "Gets or sets the cost for billing.",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "description": "Gets or sets the volume of an object.",
            "format": "double"
          },
          "formattedCost": {
            "type": "string",
            "description": "Gets or sets the formatted cost as a string. Default value is an empty string.",
            "nullable": true
          },
          "formattedVolume": {
            "type": "string",
            "description": "Gets or sets the formatted volume as a string. Default value is an empty string.",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is selected."
          },
          "selectedValue": {
            "type": "number",
            "description": "Gets or sets the selected value as a double data type.",
            "format": "double"
          },
          "groupLifeEnrollmentString": {
            "type": "string",
            "description": "Gets or sets the Group Life Enrollment String, initialized as an empty string.",
            "nullable": true
          },
          "guaranteedFormulaNetRate": {
            "type": "number",
            "description": "Gets or sets the net rate for a guaranteed formula.",
            "format": "double"
          },
          "guaranteedFormulaBillingRate": {
            "type": "number",
            "description": "Gets or sets the guaranteed billing rate for a formula.",
            "format": "double"
          },
          "additionalFormulaNetRate": {
            "type": "number",
            "description": "Gets or sets the additional formula net rate.",
            "format": "double"
          },
          "additionalFormulaBillingRate": {
            "type": "number",
            "description": "Gets or sets the additional formula billing rate for a specific item.",
            "format": "double"
          },
          "guaranteedFormulaVolumeReduced": {
            "type": "number",
            "description": "Gets or sets the volume reduction based on a guaranteed formula.",
            "format": "double"
          },
          "isApplicationRequired": {
            "type": "integer",
            "description": "Gets or sets a value indicating whether an application is required.",
            "format": "int32"
          },
          "formattedGuaranteedCost": {
            "type": "string",
            "description": "Gets or sets the formatted guaranteed cost value.",
            "nullable": true
          },
          "formattedPayPeriodAdditionalCost": {
            "type": "string",
            "description": "Gets or sets the formatted pay period additional cost.",
            "nullable": true
          },
          "formattedGuaranteedVolume": {
            "type": "string",
            "description": "Gets or sets the formatted guaranteed volume as a string. Default value is an empty string.",
            "nullable": true
          },
          "formattedAdditionalVolume": {
            "type": "string",
            "description": "Gets or sets the formatted additional volume as a string. Default value is an empty string.",
            "nullable": true
          },
          "payPeriodCost": {
            "type": "number",
            "description": "Gets or sets the cost for a pay period.",
            "format": "double"
          },
          "payPeriodFormattedCost": {
            "type": "string",
            "description": "Gets or sets the formatted cost for the pay period.",
            "nullable": true
          },
          "payPeriodAdditionalCost": {
            "type": "number",
            "description": "Gets or sets the additional cost for the pay period.",
            "format": "double"
          },
          "additionalCost": {
            "type": "number",
            "description": "Gets or sets the additional cost associated with a product or service.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CustomGroupLifeCoverageRates": {
        "type": "object",
        "properties": {
          "coverage": {
            "type": "string",
            "description": "Gets or sets the coverage information as a string. Default value is an empty string.",
            "nullable": true
          },
          "coverageId": {
            "type": "integer",
            "description": "Gets or sets the coverage ID as a byte value.",
            "format": "int32"
          },
          "coverageDescription": {
            "type": "string",
            "description": "Gets or sets the description of the coverage.",
            "nullable": true
          },
          "employeeCost": {
            "type": "number",
            "description": "Gets or sets the cost associated with an employee.",
            "format": "double"
          },
          "oldPayPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets or sets the old pay period employee cost as a decimal value.",
            "format": "double"
          },
          "payPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets Calculated the pay period employee cost based on the employee's annual cost, deduction frequency, pay cycle, and annual deductions cap.",
            "format": "double",
            "readOnly": true
          },
          "employerCost": {
            "type": "number",
            "description": "Gets or sets the employer cost associated with a certain expense.",
            "format": "double"
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double"
          },
          "oldPayPeriodEmployerCost": {
            "type": "number",
            "description": "Gets or sets the employer cost for the old pay period.",
            "format": "double"
          },
          "payPeriodEmployerCost": {
            "type": "number",
            "description": "Gets Calculated the employer cost for the pay period using the provided parameters.",
            "format": "double",
            "readOnly": true
          },
          "employerShareType": {
            "type": "integer",
            "description": "Gets or sets the type of employer share as a byte value.",
            "format": "int32"
          },
          "netTotal": {
            "type": "number",
            "description": "Gets or sets the net total value.",
            "format": "double"
          },
          "annualDeductionFrequency": {
            "type": "integer",
            "description": "Gets or sets the annual deduction frequency in bytes, allowing for nullable values.",
            "format": "int32",
            "nullable": true
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap, which is a nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          },
          "groupLifeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_GroupLifeCoverageModel"
            },
            "description": "Gets or sets the list of GroupLifeCoverageModel objects representing group life coverage.",
            "nullable": true
          },
          "formattedVolume": {
            "type": "string",
            "description": "Gets or sets the formatted volume as a string. Default value is an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomBenefitPlanRates": {
        "type": "object",
        "properties": {
          "benefitPlanFlatRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Flat Rate.",
            "format": "uuid"
          },
          "ageBand": {
            "type": "string",
            "description": "Gets or sets the age band as a string. Default value is an empty string.",
            "nullable": true
          },
          "ageLimitFrom": {
            "type": "integer",
            "description": "Gets the lower age limit from the AgeBand property by parsing the first part before the '-' delimiter.\r\nIf parsing fails or no parts are found, it defaults to 0.",
            "format": "int32",
            "readOnly": true
          },
          "ageLimitTo": {
            "type": "integer",
            "description": "Gets the upper age limit from the AgeBand property by parsing the second part of the string after splitting by '-'.\r\nDefaults to 0 if parsing fails or if there is no second part in the AgeBand.",
            "format": "int32",
            "readOnly": true
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomBenefitPlanRatesDetails"
            },
            "description": "Gets or sets the list of custom benefit plan rates details for coverages.",
            "nullable": true
          },
          "disabilityCoverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomDisabilityCoverageRates"
            },
            "description": "Gets or sets the list of custom disability coverage rates.",
            "nullable": true
          },
          "groupLifeCoverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomGroupLifeCoverageRates"
            },
            "description": "Gets or sets the list of custom group life coverage rates.",
            "nullable": true
          },
          "premiumFormulaJson": {
            "type": "string",
            "description": "Gets or sets the premium formula in JSON format.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CustomBenefitPlanAgeBandRate": {
        "type": "object",
        "properties": {
          "benefitPlanAgeBandRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Age Band Rate.",
            "format": "uuid"
          },
          "age": {
            "type": "integer",
            "description": "Gets or sets the age of a person.",
            "format": "int32"
          },
          "netTotal": {
            "type": "number",
            "description": "Gets or sets the net total value.",
            "format": "double"
          },
          "employerShareType": {
            "type": "integer",
            "description": "Gets or sets the type of employer share as a byte value.",
            "format": "int32"
          },
          "employerCost": {
            "type": "number",
            "description": "Gets Calculated the employer cost based on the employer share type.\r\nIf the employer share type is in percentage, it calculates the cost as a percentage of the net total.\r\nIf the employer share type is not in percentage, it returns the employer share as the cost.",
            "format": "double",
            "readOnly": true
          },
          "employerShare": {
            "type": "number",
            "description": "Gets or sets the employer's share of a decimal value.",
            "format": "double"
          },
          "employeeShare": {
            "type": "number",
            "description": "Gets or sets the employee's share of a financial amount.",
            "format": "double"
          },
          "payPeriodEmployerCost": {
            "type": "number",
            "description": "Gets Calculated the employer cost for the pay period based on the provided parameters.",
            "format": "double",
            "readOnly": true
          },
          "payPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets Calculated the pay period employee cost based on the employee share, annual deduction frequency, pay cycle, and annual deductions cap.",
            "format": "double",
            "readOnly": true
          },
          "annualDeductionFrequency": {
            "type": "integer",
            "description": "Gets or sets the annual deduction frequency in bytes, allowing for nullable values.",
            "format": "int32",
            "nullable": true
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap for a specific entity.\r\nThis property can hold a nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomAgeBandCoverageRate": {
        "type": "object",
        "properties": {
          "benefitPlanAgeBandRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Age Band Rate.",
            "format": "uuid"
          },
          "coverageDescription": {
            "type": "string",
            "description": "Gets or sets the coverage description with a default value of an empty string.",
            "nullable": true
          },
          "payPeriodEmployerCost": {
            "type": "number",
            "description": "Gets or sets the employer cost for a pay period.",
            "format": "double"
          },
          "employerCost": {
            "type": "number",
            "description": "Gets or sets the employer cost associated with a certain item or service.",
            "format": "double"
          },
          "payPeriodEmployeeCost": {
            "type": "number",
            "description": "Gets or sets the pay period employee cost.",
            "format": "double"
          },
          "employeeCost": {
            "type": "number",
            "description": "Gets or sets the cost associated with an employee.",
            "format": "double"
          },
          "coverageCode": {
            "type": "string",
            "description": "Gets the coverage code with.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomRetirementRateDetail": {
        "type": "object",
        "properties": {
          "customRetirementRateDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the custom retirement rate detail.",
            "format": "uuid"
          },
          "matchingPercent": {
            "type": "number",
            "description": "Gets or sets the matching percentage as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "matchingPercentSalary": {
            "type": "number",
            "description": "Gets or sets the matching percentage of the salary.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomRetirementRate": {
        "type": "object",
        "properties": {
          "customRetirementRateId": {
            "type": "string",
            "description": "Gets or sets the custom retirement rate ID.",
            "format": "uuid"
          },
          "safeHarborContribution": {
            "type": "number",
            "description": "Gets or sets the Safe Harbor Contribution amount, which is a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "simpleMatching": {
            "type": "number",
            "description": "Gets or sets the Simple Matching value as a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "simpleNonElective": {
            "type": "number",
            "description": "Gets or sets the value for a simple non-elective decimal property.",
            "format": "double",
            "nullable": true
          },
          "employerContributionType": {
            "type": "integer",
            "description": "Gets or sets the type of employer contribution as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "employeeContributionType": {
            "type": "integer",
            "description": "Gets or sets the type of contribution made by the employee.\r\nThis property is nullable and can hold a byte value.",
            "format": "int32",
            "nullable": true
          },
          "employeeBasedOn": {
            "type": "integer",
            "description": "Gets or sets the byte value representing the employee based on certain criteria.\r\nThis property allows for a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "employerBasedOn": {
            "type": "integer",
            "description": "Gets or sets the identifier for the employer based on which the data is being accessed.\r\nThis property allows for a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "rateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomRetirementRateDetail"
            },
            "description": "Gets or sets the list of custom retirement rate details.",
            "nullable": true
          },
          "retirementType": {
            "type": "integer",
            "description": "Gets or sets the retirement type as a byte value.",
            "format": "int32"
          },
          "employerFlatContribution": {
            "type": "number",
            "description": "Gets or sets the employer's flat contribution amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_Custom401KRateSetup": {
        "type": "object",
        "properties": {
          "customRetirementRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomRetirementRate"
              }
            ],
            "description": "Gets or sets the custom retirement rate object with a default instance of CustomRetirementRate.",
            "nullable": true
          },
          "customRateModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Custom401KRateModel"
              }
            ],
            "description": "Gets or sets the custom 401K rate model.",
            "nullable": true
          },
          "isMaxContributionLimitSetup": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the maximum contribution limit is set up."
          },
          "isEmployeeSalarySetup": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether if the employee's salary setup is done."
          },
          "maxContributionLimit": {
            "type": "number",
            "description": "Gets or sets the maximum contribution limit as a decimal value.",
            "format": "double"
          },
          "perPayPeriodSalary": {
            "type": "number",
            "description": "Gets or sets the salary amount per pay period.",
            "format": "double"
          },
          "numberOfDeductions": {
            "type": "integer",
            "description": "Gets or sets the number of deductions.",
            "format": "int32"
          },
          "coverage": {
            "type": "string",
            "description": "Gets or sets the coverage value as a string. Default value is an empty string.",
            "nullable": true
          },
          "coverageDescription": {
            "type": "string",
            "description": "Gets or sets the coverage description.",
            "nullable": true
          },
          "annualSalary": {
            "type": "number",
            "description": "Gets or sets the annual salary of an employee.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomCafeteriaRate": {
        "type": "object",
        "properties": {
          "benefitCafeteriaPlanRateId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Cafeteria Plan Rate.",
            "format": "uuid"
          },
          "directDepositId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for direct deposit.",
            "format": "uuid",
            "nullable": true
          },
          "isAdvanceRating": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the rating is advanced."
          },
          "isConfirmationRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether confirmation is required."
          },
          "isDirDepEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether directory dependency is enabled."
          },
          "isDirDepRequired": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean value indicating if directory dependency is required.",
            "nullable": true
          },
          "agreementText": {
            "type": "string",
            "description": "Gets or sets the agreement text with a default value of an empty string.",
            "nullable": true
          },
          "rateFrequency": {
            "type": "integer",
            "description": "Gets or sets the rate frequency in bytes.",
            "format": "int32"
          },
          "employeePayCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle of an employee.",
            "format": "int32"
          },
          "employerPayCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for the employer.",
            "format": "int32"
          },
          "inputAmount": {
            "type": "number",
            "description": "Gets or sets the input amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "annualEmployeeContribution": {
            "type": "number",
            "description": "Gets or sets the annual employee contribution amount.",
            "format": "double"
          },
          "payPeriodEmployeeContribution": {
            "type": "number",
            "description": "Gets Calculated the pay period employee contribution for cafeteria plans based on the plan group type, annual employee contribution, and employee pay cycle.",
            "format": "double",
            "readOnly": true
          },
          "annualEmployerContribution": {
            "type": "number",
            "description": "Gets or sets the annual employer contribution amount.",
            "format": "double"
          },
          "payPeriodEmployerContribution": {
            "type": "number",
            "description": "Gets Calculated the pay period employer contribution for cafeteria plans based on the plan group type, annual employer contribution, and employer pay cycle.",
            "format": "double",
            "readOnly": true
          },
          "currentCoverageRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomCafeteriaRateDetail"
              }
            ],
            "description": "Gets or sets the current coverage rate for the custom cafeteria.",
            "nullable": true
          },
          "detailedRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomCafeteriaRateDetail"
            },
            "description": "Gets or sets the list of custom cafeteria rate details.",
            "nullable": true
          },
          "calculatorFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomSavingAccount"
            },
            "description": "Gets or sets the list of CustomSavingAccount objects for calculator fields.",
            "nullable": true
          },
          "isConfirmationDone": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether confirmation is done."
          },
          "isRateValid": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the rate is valid."
          },
          "planGroupType": {
            "type": "integer",
            "description": "Gets or sets the plan group type as a byte value.",
            "format": "int32"
          },
          "employeeDeductionType": {
            "type": "integer",
            "description": "Gets or sets the type of deduction for an employee.",
            "format": "int32"
          },
          "employerDeductionType": {
            "type": "integer",
            "description": "Gets or sets the type of deduction for the employer.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_CustomTiedPlan": {
        "type": "object",
        "properties": {
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "planName": {
            "type": "string",
            "description": "Gets or sets the name of the plan. Default value is an empty string.",
            "nullable": true
          },
          "compatibilityType": {
            "type": "integer",
            "description": "Gets or sets the compatibility type as a byte value.",
            "format": "int32"
          },
          "rateType": {
            "type": "integer",
            "description": "Gets or sets the rate type as a byte value.",
            "format": "int32"
          },
          "enrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEnrollmentDetail"
              }
            ],
            "description": "Gets or sets the enrollment detail for a benefit plan.",
            "nullable": true
          },
          "hasEnrollment": {
            "type": "boolean",
            "description": "Gets a value indicating whether if the object has an enrollment detail.",
            "readOnly": true
          },
          "coverageCode": {
            "type": "string",
            "description": "Gets or sets the coverage code with a default value of an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_BenefitPlanDetailWithEligibilityCriteria": {
        "type": "object",
        "properties": {
          "planEnrollmentDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EnrollmentModelDetail"
              }
            ],
            "description": "Gets or sets PlanEnrollmentDetail of type EnrollmentModelDetail in the class.",
            "nullable": true
          },
          "benefitCustomMessage": {
            "type": "string",
            "description": "Gets or sets the custom message for a benefit.",
            "nullable": true
          },
          "benefitGroupCustomMessage": {
            "type": "string",
            "description": "Gets or sets the custom message for the benefit group.",
            "nullable": true
          },
          "benefitPlanComparisonTemplateId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Plan Comparison Template Id, which is nullable integer type.",
            "format": "int32",
            "nullable": true
          },
          "ageCalculationMonth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_AgeCalculationMethod"
              }
            ],
            "description": "Gets or sets the age calculation month for a person.",
            "nullable": true
          },
          "specificMonth": {
            "type": "integer",
            "description": "Gets or sets the specific month as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "benefitPlanComparisonSummaryTemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanComparisonSummaryTemplateField"
            },
            "description": "Gets or sets the collection of Benefit Plan Comparison Summary Template Fields.",
            "nullable": true
          },
          "benefitPlanLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanLinkListItem"
            },
            "description": "Gets or sets the list of BenefitPlanLinkListItem objects for a benefit plan.",
            "nullable": true
          },
          "benefitExplanation": {
            "type": "string",
            "description": "Gets or sets the explanation of the benefit.",
            "nullable": true
          },
          "searchDoctorUrl": {
            "type": "string",
            "description": "Gets or sets the URL for searching doctors.",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "benefitPlanRateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets or sets the rate type for a benefit plan."
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "benefitPlanGroupIdInt": {
            "type": "integer",
            "description": "Gets or sets the integer value representing the benefit plan group ID.",
            "format": "int32"
          },
          "benefitPlanGroupBaseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ],
            "description": "Gets or sets the type of benefit group for a benefit plan group."
          },
          "benefitPlanGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ],
            "description": "Gets or sets the benefit plan group type."
          },
          "benefitPlanGroupType": {
            "type": "integer",
            "description": "Gets or sets the type of benefit plan group as a byte value.",
            "format": "int32"
          },
          "benefitPlanGroupName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit plan group.",
            "nullable": true
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit.",
            "nullable": true
          },
          "isOrganizationalPlan": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the plan is an organizational plan."
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "companyIdGuids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets a collection of nullable Guid values representing company IDs.",
            "nullable": true
          },
          "annualDeductionsType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ],
            "description": "Gets or sets the deduction frequency for annual deductions."
          },
          "planCompanyTierFromOverride": {
            "type": "integer",
            "description": "Gets or sets the company tier from override for a plan.",
            "format": "int32",
            "nullable": true
          },
          "annualDeductions": {
            "type": "integer",
            "description": "Gets the annual deductions as a byte value by converting the AnnualDeductionsType to byte.",
            "format": "int32",
            "readOnly": true
          },
          "eligibilityCriteria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_EligibilityCriteria"
              }
            ],
            "description": "Gets or sets the eligibility criteria for a certain entity.",
            "nullable": true
          },
          "benefitPlanEligibilityAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitPlanEligibilityAssociation"
            },
            "description": "Gets or sets the list of Benefit Plan Eligibility Associations.",
            "nullable": true
          },
          "isLifeEventInOpenEnrollment": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a life event is in open enrollment."
          },
          "lifeEventEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date of a life event.",
            "nullable": true
          },
          "activeLifeEventId": {
            "type": "string",
            "description": "Gets or sets the active life event ID.",
            "format": "uuid",
            "nullable": true
          },
          "summaryFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomBenefitPlanComparisonSummaryField"
            },
            "description": "Gets or sets the list of custom benefit plan comparison summary fields.",
            "nullable": true
          },
          "cobra": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the property Cobra is true or false."
          },
          "isTiedToOtherPlans": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the current plan is tied to other plans."
          },
          "benefitExplanationTypeEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_LinkActionTypes"
              }
            ],
            "description": "Gets the type of benefit explanation for a link action.",
            "readOnly": true
          },
          "benefitExplanationType": {
            "type": "integer",
            "description": "Gets the byte representation of the BenefitExplanationTypeEnum.",
            "format": "int32",
            "readOnly": true
          },
          "openEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the end date for open enrollment.",
            "format": "date-time"
          },
          "openEnrollmentDays": {
            "type": "integer",
            "description": "Gets or sets the number of days for open enrollment.",
            "format": "int32"
          },
          "openEnrollmentType": {
            "type": "integer",
            "description": "Gets or sets the open enrollment type as a byte value.",
            "format": "int32"
          },
          "newHireEnrollmentDays": {
            "type": "integer",
            "description": "Gets or sets the number of days for new hire enrollment.",
            "format": "int32"
          },
          "newHireEnrollmentType": {
            "type": "integer",
            "description": "Gets or sets the type of new hire enrollment as a byte value.",
            "format": "int32"
          },
          "calculatedNewHireEnrollmentDays": {
            "type": "integer",
            "description": "Gets Calculates the new hire enrollment days based on the enrollment type.\r\nIf the enrollment type is in months, converts the days to equivalent days.",
            "format": "int32",
            "readOnly": true
          },
          "enrollmentEventType": {
            "type": "integer",
            "description": "Gets or sets the enrollment event type as a nullable byte value.",
            "format": "int32",
            "nullable": true
          },
          "openEnrollmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_OpenEnrollmentStatus"
              }
            ],
            "description": "Gets Determines the open enrollment status based on various conditions such as benefit start and end dates, open enrollment end date, life events, employee hire date, etc.",
            "readOnly": true
          },
          "rateTypeEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets the RateTypeEnum property, which is a nullable RateTypes enum.",
            "nullable": true,
            "readOnly": true
          },
          "rateType": {
            "type": "integer",
            "description": "Gets the RateType as a nullable byte value.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "planRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomBenefitPlanRates"
            },
            "description": "Gets or sets the list of custom benefit plan rates.",
            "nullable": true
          },
          "isPlanSelected": {
            "type": "boolean",
            "description": "Gets a value indicating whether a plan is selected by verifying if PlanEnrollmentDetail is not null and EnrollmentStatus is Enrolled.",
            "readOnly": true
          },
          "employeeAge": {
            "type": "integer",
            "description": "Gets or sets the age of an employee.",
            "format": "int32"
          },
          "calculatedEmployeeAge": {
            "type": "integer",
            "description": "Gets Calculates the employee's age based on their birth date and effective date of benefit plan group type.",
            "format": "int32",
            "readOnly": true
          },
          "employeeBirthDate": {
            "type": "string",
            "description": "Gets or sets the birth date of an employee.",
            "format": "date-time"
          },
          "employeeHireDate": {
            "type": "string",
            "description": "Gets or sets the hire date of an employee, which is a nullable DateTime value.",
            "format": "date-time",
            "nullable": true
          },
          "waitingPeriodFilterEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_WaitingPeriodTypes"
              }
            ],
            "description": "Gets or sets the enum value for filtering waiting period types.",
            "nullable": true
          },
          "waitingPeriodFilter": {
            "type": "integer",
            "description": "Gets the waiting period filter as a nullable byte value.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "currentCoverageRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomBenefitPlanRatesDetails"
              }
            ],
            "description": "Gets the current coverage rate for the custom benefit plan based on employee age and coverage type.",
            "nullable": true,
            "readOnly": true
          },
          "waitingPeriod": {
            "type": "integer",
            "description": "Gets or sets the waiting period before a certain action can be taken, nullable integer value.",
            "format": "int32",
            "nullable": true
          },
          "eligibleDateFormatType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EligibleDateFormats"
              }
            ],
            "description": "Gets or sets the eligible date formats for a specific type."
          },
          "eligibleDateFormat": {
            "type": "integer",
            "description": "Gets the eligible date format as a byte value.",
            "format": "int32",
            "readOnly": true
          },
          "calculatedEffectiveDate": {
            "type": "string",
            "description": "Gets Calculates the effective date based on various conditions including life events, enrollment details, hire date, waiting period, and eligible date format type.",
            "nullable": true,
            "readOnly": true
          },
          "ageBandRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomBenefitPlanAgeBandRate"
            },
            "description": "Gets the list of custom benefit plan age band rates.",
            "nullable": true,
            "readOnly": true
          },
          "currentAgeBandRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomAgeBandCoverageRate"
              }
            ],
            "description": "Gets the current age band rate for the employee based on their age and the available age band rates.",
            "nullable": true,
            "readOnly": true
          },
          "custom401kRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_Custom401KRateSetup"
              }
            ],
            "description": "Gets the custom 401k rate setup for the user.",
            "nullable": true,
            "readOnly": true
          },
          "cafeteriaRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomCafeteriaRate"
              }
            ],
            "description": "Gets the custom cafeteria rate for a specific entity.",
            "nullable": true,
            "readOnly": true
          },
          "physician": {
            "type": "string",
            "description": "Gets the physician associated with the PlanEnrollmentDetail, if available.\r\nIf PlanEnrollmentDetail or Physician is null, returns an empty string.",
            "nullable": true,
            "readOnly": true
          },
          "currentGroupLifeCoverageRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomGroupLifeCoverageRates"
              }
            ],
            "description": "Gets the current group life coverage rate based on the rate type and plan rates.",
            "nullable": true,
            "readOnly": true
          },
          "currentDisabilityCoverageRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomDisabilityCoverageRates"
              }
            ],
            "description": "Gets the current disability coverage rate based on the employee's age and plan rates.",
            "nullable": true,
            "readOnly": true
          },
          "benefitStartDate": {
            "type": "string",
            "description": "Gets the start date of the benefit.",
            "format": "date-time",
            "readOnly": true
          },
          "benefitEndDate": {
            "type": "string",
            "description": "Gets the end date of a benefit, which is only accessible.",
            "format": "date-time",
            "readOnly": true
          },
          "payPeriodFlexCreditCost": {
            "type": "string",
            "description": "Gets the cost of pay period flex credit.",
            "nullable": true,
            "readOnly": true
          },
          "isPlanAvailable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a plan is available."
          },
          "hasPlanCompatibility": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object has plan compatibility."
          },
          "parentPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomTiedPlan"
            },
            "description": "Gets or sets the list of custom tied plans associated with the parent plan.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Gets or sets the reason for a specific action or decision.",
            "nullable": true
          },
          "tiedPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomTiedPlan"
            },
            "description": "Gets or sets the list of custom tied plans.",
            "nullable": true
          },
          "showBeneficiaries": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether beneficiaries should be shown."
          },
          "isBeneficiriesRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether beneficiaries are required."
          },
          "benefitFormFileName": {
            "type": "string",
            "description": "Gets or sets the file name of the benefit form.",
            "nullable": true
          },
          "benefitFormLink": {
            "type": "string",
            "description": "Gets or sets the link to the benefit form.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a benefit plan detail along with eligibility criteria."
      },
      "BBSI_Benefits_Model_Default_CustomBenefitWaiver": {
        "type": "object",
        "properties": {
          "benefitWaiverId": {
            "type": "integer",
            "description": "Gets or sets the Benefit Waiver Id.",
            "format": "int32"
          },
          "isDeleted": {
            "type": "integer",
            "description": "Gets or sets a value indicating whether the item is deleted.",
            "format": "int32"
          },
          "fieldName": {
            "type": "string",
            "description": "Gets or sets the value of the FieldName property, initialized to an empty string.",
            "nullable": true
          },
          "fieldType": {
            "type": "string",
            "description": "Gets or sets the field type with a default value of an empty string.",
            "nullable": true
          },
          "fieldValue": {
            "type": "string",
            "description": "Gets or sets the value of the field, default value is an empty string.",
            "nullable": true
          },
          "fieldOption": {
            "type": "string",
            "description": "Gets or sets the field option with an initial value of an empty string.",
            "nullable": true
          },
          "isSystemDefault": {
            "type": "string",
            "description": "Gets or sets the value indicating whether the system default is used.",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the company name with a default value of an empty string.",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "description": "Gets or sets the name of the organization. Default value is an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_WizardStepDetailInfo": {
        "type": "object",
        "properties": {
          "benefitPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_BenefitPlanDetailWithEligibilityCriteria"
            },
            "description": "Gets or sets the list of BenefitPlanDetailWithEligibilityCriteria objects representing benefit plans.",
            "nullable": true
          },
          "benefitWaiver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CustomBenefitWaiver"
              }
            ],
            "description": "Gets or sets the custom benefit waiver for a specific entity.",
            "nullable": true
          },
          "directDepositAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_OptionListItem"
            },
            "description": "Gets or sets the list of direct deposit accounts for a user.",
            "nullable": true
          },
          "newDirectDepositUrl": {
            "type": "string",
            "description": "Gets or sets the new direct deposit URL with a default value of an empty string.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_WizardStepsListItem": {
        "type": "object",
        "properties": {
          "benefitPlanTypeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Type.",
            "format": "uuid"
          },
          "benefitPlanType": {
            "type": "string",
            "description": "Gets or sets the name of the benefit plan type.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Gets or sets the title of the step.",
            "nullable": true
          },
          "benefitPlanBaseTypeId": {
            "type": "integer",
            "description": "Gets or sets the integer value representing the Base Plan Type Id of a Benefit Plan.",
            "format": "int32"
          },
          "stepOrder": {
            "type": "integer",
            "description": "Gets or sets the step order value.",
            "format": "int32"
          },
          "costPerPayPeriod": {
            "type": "string",
            "description": "Gets or sets the pay period employee cost as a string.",
            "nullable": true
          },
          "isWaived": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is waived."
          },
          "isElected": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is selected."
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_WizardInfo": {
        "type": "object",
        "properties": {
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee.",
            "nullable": true
          },
          "enrollmentYear": {
            "type": "integer",
            "description": "Gets or sets the enrollment year of a student.",
            "format": "int32"
          },
          "totalSteps": {
            "type": "integer",
            "description": "Gets or sets the total number of steps.",
            "format": "int32"
          },
          "totalBenefitEmployeeCostAnnual": {
            "type": "string",
            "description": "Gets or sets the total annual benefit employee cost.",
            "nullable": true
          },
          "totalBenefitEmployerCostAnnual": {
            "type": "string",
            "description": "Gets or sets the total annual cost of benefits to the employer.",
            "nullable": true
          },
          "totalBenefitCostAnnual": {
            "type": "string",
            "description": "Gets or sets the total annual benefit cost.",
            "nullable": true
          },
          "totalFlexCreditCostAnnual": {
            "type": "string",
            "description": "Gets or sets the annual total flex credit cost as a string.",
            "nullable": true
          },
          "payPeriodFlexCreditCost": {
            "type": "string",
            "description": "Gets or sets the cost of pay period flex credit.",
            "nullable": true
          },
          "totalPayPeriodEmployeeCost": {
            "type": "string",
            "description": "Gets or sets the total pay period employee cost as a string.",
            "nullable": true
          },
          "isSignatureDone": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the signature is done."
          },
          "wizardSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_WizardStepsListItem"
            },
            "description": "Gets or sets the list of WizardStepsListItem for a wizard.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_WelcomeStep": {
        "type": "object",
        "properties": {
          "welcomePageTitle": {
            "type": "string",
            "description": "Gets or sets the title for the welcome step.",
            "nullable": true
          },
          "welcomePageFixedTitle": {
            "type": "string",
            "description": "Gets or sets the title for the welcome step.",
            "nullable": true
          },
          "welcomePageMessage": {
            "type": "string",
            "description": "Gets or sets the welcome step message displayed to the user.",
            "nullable": true
          },
          "signaturePageMessage": {
            "type": "string",
            "description": "Gets or sets the electronic signature note.",
            "nullable": true
          },
          "signatureAcknowledgementText": {
            "type": "string",
            "description": "Gets or sets the electronic signature footer note.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Database_UploadTypes": {
        "enum": [
          "1 - benefitforms | Represents an upload for benefit forms.",
          "2 - benefitplaninfo | Represents an upload for benefit plan information.",
          "3 - benefitlifeevent | Represents an upload for life event information related to benefits."
        ],
        "type": "string",
        "description": "Represents different types of uploads related to benefits and plan information."
      },
      "BBSI_Benefits_Model_Default_FsaMaximumsListItem": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "fsaMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for FSA (Flexible Spending Account).",
            "format": "uuid"
          },
          "fsaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for FSA (Flexible Spending Account).",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_FsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_FsaMaximumsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateFsaMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean value indicating if the entity is deleted.",
            "nullable": true
          },
          "fsaMaximumId": {
            "type": "string",
            "description": "Gets or sets the FSAMaximumId property, which is a Guid representing the maximum ID for FSA.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "fsaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for the Federal Student Aid (FSA).",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateFsaMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is deleted."
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "fsaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for the Federal Student Aid (FSA).",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_FsaMaximumsInfo": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "fsaMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for FSA (Flexible Spending Account).",
            "format": "uuid"
          },
          "fsaMax": {
            "type": "number",
            "description": "Gets or sets the maximum value for the Federal Student Aid (FSA).",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_HsaMaximumsListItem": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "hsaMaximumId": {
            "type": "string",
            "description": "Gets or sets the HSAMaximumId property, which is a Guid representing the maximum ID for HSA.",
            "format": "uuid"
          },
          "hsaMaxSingle": {
            "type": "number",
            "description": "Gets or sets the maximum single value for a Health Savings Account (HSA).",
            "format": "double"
          },
          "hsaMaxSingleOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum single old age amount for Health Savings Account (HSA).",
            "format": "double"
          },
          "hsaMaxFamily": {
            "type": "number",
            "description": "Gets or sets the maximum amount allowed for a Health Savings Account (HSA) for a family.",
            "format": "double"
          },
          "hsaMaxFamilyOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum amount for Health Savings Account (HSA) for a family in old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_HsaMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_HsaMaximumsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateHsaMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is deleted."
          },
          "hsaMaximumId": {
            "type": "string",
            "description": "Gets or sets the HSAMaximumId property, which is a Guid representing the maximum ID for HSA.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "hsaMaxSingle": {
            "type": "number",
            "description": "Gets or sets the maximum contribution limit for a Health Savings Account (HSA) for a single individual.",
            "format": "double"
          },
          "hsaMaxSingleOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum contribution limit for a Health Savings Account (HSA) for an individual who is of old age.",
            "format": "double"
          },
          "hsaMaxFamily": {
            "type": "number",
            "description": "Gets or sets the maximum amount allowed for a Health Savings Account (HSA) for a family.",
            "format": "double"
          },
          "hsaMaxFamilyOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum amount for Health Savings Account (HSA) for a family in old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateHsaMaximums": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "hsaMaxSingle": {
            "type": "number",
            "description": "Gets or sets the maximum contribution limit for a Health Savings Account (HSA) for a single individual.",
            "format": "double"
          },
          "hsaMaxSingleOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum single old age amount for Health Savings Account (HSA).",
            "format": "double"
          },
          "hsaMaxFamily": {
            "type": "number",
            "description": "Gets or sets the maximum amount allowed for a Health Savings Account (HSA) for a family.",
            "format": "double"
          },
          "hsaMaxFamilyOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum amount for Health Savings Account (HSA) for a family for old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_HsaMaximumsInfo": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "hsaMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for HSA (Health Savings Account).",
            "format": "uuid"
          },
          "hsaMaxSingle": {
            "type": "number",
            "description": "Gets or sets the maximum single contribution limit for a Health Savings Account (HSA).",
            "format": "double"
          },
          "hsaMaxSingleOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum contribution limit for a Health Savings Account (HSA) for an individual who is of old age.",
            "format": "double"
          },
          "hsaMaxFamily": {
            "type": "number",
            "description": "Gets or sets the maximum amount allowed for a Health Savings Account (HSA) for a family.",
            "format": "double"
          },
          "hsaMaxFamilyOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum amount for Health Savings Account (HSA) for a family in old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_LifeEventViewInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the vsion for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "lifeEventId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the life event.",
            "format": "uuid"
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the company name.",
            "nullable": true
          },
          "companyCode": {
            "type": "integer",
            "description": "Gets or sets the company code.",
            "format": "int32"
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the employee name.",
            "nullable": true
          },
          "employeeCode": {
            "type": "integer",
            "description": "Gets or sets the employee code.",
            "format": "int32"
          },
          "qualifiedEvent": {
            "type": "string",
            "description": "Gets or sets the qualified event name.",
            "nullable": true
          },
          "lifeEventDateTime": {
            "type": "string",
            "description": "Gets or sets the event date.",
            "format": "date-time"
          },
          "requiredFormType": {
            "type": "string",
            "description": "Gets or sets the required form type name.",
            "nullable": true
          },
          "supportingDocument": {
            "type": "string",
            "description": "Gets or sets the supporting document file name.",
            "nullable": true
          },
          "supportingDocumentUrl": {
            "type": "string",
            "description": "Gets or sets the supporting document download url.",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "description": "Gets or sets the status name.",
            "format": "int32",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "description": "Gets or sets the date processed.",
            "format": "date-time",
            "nullable": true
          },
          "newBenefitEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the New Benefit Effective date.",
            "format": "date-time",
            "nullable": true
          },
          "newEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the New Enrollment Start date.",
            "format": "date-time",
            "nullable": true
          },
          "newEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the New Enrollment End date.",
            "format": "date-time",
            "nullable": true
          },
          "unlockWholeWizard": {
            "type": "boolean",
            "description": "Gets or sets the Unlock Whole Wizard.",
            "nullable": true
          },
          "planTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets or sets the available Benefit Plan Types available for current life event.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Info class for viewing detailed Life Event information."
      },
      "BBSI_Benefits_Model_Default_ApproveLifeEvent": {
        "required": [
          "lifeEventId",
          "newBenefitEffectiveDate",
          "newEnrollmentEndDate",
          "newEnrollmentStartDate",
          "planTypes",
          "unlockWholeWizard",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the vsion for concurrency control.",
            "format": "byte"
          },
          "lifeEventId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the life event.",
            "format": "uuid"
          },
          "newBenefitEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the new benefit effective date.",
            "format": "date-time"
          },
          "newEnrollmentStartDate": {
            "type": "string",
            "description": "Gets or sets the new enrollment start date.",
            "format": "date-time"
          },
          "newEnrollmentEndDate": {
            "type": "string",
            "description": "Gets or sets the new enrollment end date.",
            "format": "date-time"
          },
          "unlockWholeWizard": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the whole wizard is unlocked."
          },
          "planTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets or sets the list of benefit plan type IDs to unlock."
          }
        },
        "additionalProperties": false,
        "description": "DTO for approving a Life Event."
      },
      "Microsoft_AspNetCore_Mvc_NoContentResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_LifeEventFilter": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "employeeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "qualifiedEventIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "eventStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateProcessedStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateProcessedEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Gets or initializes the page index, ensuring it is not negative.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size. The value must be greater than zero.",
            "format": "int32"
          },
          "searchText": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Gets the search text with a maximum length defined by DataConstants.LengthGeneralInput.\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "description": "Gets the name of the column for which the sort operation has to be performed.",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "description": "Gets the ASC or DESC direction in which the sort has to be performed.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_LifeEventListItem": {
        "type": "object",
        "properties": {
          "lifeEventId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company deduction frequency.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the company.",
            "format": "uuid"
          },
          "companyCode": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for a company.",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the CompanyName.",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the employee.",
            "format": "uuid"
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the EmployeeName.",
            "nullable": true
          },
          "employeeCode": {
            "type": "integer",
            "description": "Gets or sets the EmployeeCode.",
            "format": "int32",
            "nullable": true
          },
          "qualifiedEvent": {
            "type": "string",
            "description": "Gets or sets the QualifiedEvent.",
            "nullable": true
          },
          "lifeEventDateTime": {
            "type": "string",
            "description": "Gets or sets the Life EventDate.",
            "nullable": true
          },
          "downloadUrl": {
            "type": "string",
            "description": "Gets or sets the download URL for a file. Can be null if no download URL is available.",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Gets or sets the FileName.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the Status of life event.",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "description": "Gets or sets the DateProcessed.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_LifeEventListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_LifeEventListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Services_Logs_Dto_LogListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets primary key for the Logs table.",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "description": "Gets the log message content.",
            "nullable": true
          },
          "level": {
            "type": "string",
            "description": "Gets the severity level of the log (e.g., Info, Warning, Error).",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "description": "Gets the timestamp of the log entry.",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "description": "Gets the name of the application that generated the log.",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "description": "Gets the IP address from which the log originated.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Services_Logs_Dto_LogListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Services_Logs_Dto_LogListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateBenefitPlanCoverageFlatRate": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "benefitCoverageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the list of plan coverages.",
            "nullable": true
          },
          "planFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_CreateBenefitPlanFlatRate"
            },
            "description": "Gets or sets the list of flat rates.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitPlanCoverageFlatRate": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "benefitCoverageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the list of plan coverages.",
            "nullable": true
          },
          "planFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_UpdateBenefitPlanFlatRate"
            },
            "description": "Gets or sets the list of flat rates.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitPlanCoverageFlatRateInfo": {
        "type": "object",
        "properties": {
          "planVersion": {
            "type": "string",
            "description": "Gets or sets the row version for concurrency control.",
            "format": "byte",
            "nullable": true
          },
          "benefitPlanId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan.",
            "format": "uuid"
          },
          "benefitCoverageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the list of plan coverages.",
            "nullable": true
          },
          "planFlatRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitPlanFlatRateInfo"
            },
            "description": "Gets or sets the list of flat rates.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitsActivitiesListItem": {
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan enrollment.",
            "format": "uuid"
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Enrollment Detail.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the Benefit Plan Group.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId which is a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year for a specific entity.",
            "format": "int32"
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee.",
            "nullable": true
          },
          "benefitGroup": {
            "type": "string",
            "description": "Gets or sets the benefit group for a specific entity.",
            "nullable": true
          },
          "benefitPlan": {
            "type": "string",
            "description": "Gets or sets the benefit plan for a user.",
            "nullable": true
          },
          "coverage": {
            "type": "string",
            "description": "Gets or sets the coverage information as a nullable string.",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the original effective date as a nullable string.",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date for a certain action or event.",
            "nullable": true
          },
          "signUpDate": {
            "type": "string",
            "description": "Gets or sets the sign-up date of a user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitsActivitiesListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitsActivitiesListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitActivityDetailListItem": {
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan enrollment.",
            "format": "uuid"
          },
          "enrollmentActivityId": {
            "type": "integer",
            "description": "Gets or sets the enrollment activity ID.",
            "format": "int32"
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year for a specific entity.",
            "format": "int32"
          },
          "benefitGroupName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit group.",
            "nullable": true
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit.",
            "nullable": true
          },
          "coverageName": {
            "type": "string",
            "description": "Gets or sets the name of the coverage.",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date for a specific item. The effective date can be null.",
            "nullable": true
          },
          "originalEffectiveDate": {
            "type": "string",
            "description": "Gets or sets the original effective date as a nullable string.",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "description": "Gets or sets the termination date for a specific entity.",
            "nullable": true
          },
          "signUpDate": {
            "type": "string",
            "description": "Gets or sets the sign-up date for a user. This property allows null values.",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or sets the approval status of an entity.",
            "nullable": true
          },
          "enrollmentStatus": {
            "type": "string",
            "description": "Gets or sets the enrollment status of a student.",
            "nullable": true
          },
          "isDeductionApproved": {
            "type": "string",
            "description": "Gets or sets the approval status of a deduction.",
            "nullable": true
          },
          "employeeRate": {
            "type": "string",
            "description": "Gets or sets the rate of an employee.",
            "nullable": true
          },
          "employerRate": {
            "type": "string",
            "description": "Gets or sets the employer rate as a string.",
            "nullable": true
          },
          "netEmployeeRate": {
            "type": "string",
            "description": "Gets or sets the .NET employee rate as a nullable string.",
            "nullable": true
          },
          "netEmployerRate": {
            "type": "string",
            "description": "Gets or sets the net employer rate as a string.",
            "nullable": true
          },
          "activityType": {
            "type": "integer",
            "description": "Gets or sets the activity type represented as a byte value.",
            "format": "int32"
          },
          "activity": {
            "type": "string",
            "description": "Gets or sets the activity associated with an object. Can be null.",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "description": "Gets or sets the action date as a nullable string.",
            "nullable": true
          },
          "submittedBy": {
            "type": "string",
            "description": "Gets or sets the name of the person who submitted the item.",
            "nullable": true
          },
          "submittedByUserType": {
            "type": "string",
            "description": "Gets or sets the type of user who submitted the data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitActivityDetailListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitActivityDetailListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_Benefit401KPlanEnrollmentListItem": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "description": "Gets or sets the CompanyId as a nullable Guid.",
            "format": "uuid",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee.",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Gets or sets the company name.",
            "nullable": true
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year for a specific entity.",
            "format": "int32"
          },
          "benefitGroupName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit group.",
            "nullable": true
          },
          "benefitPlanName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit plan.",
            "nullable": true
          },
          "employeePercentAmount": {
            "type": "number",
            "description": "Gets or sets the percentage amount for an employee.",
            "format": "double"
          },
          "employeeContribution": {
            "type": "number",
            "description": "Gets or sets the employee's contribution amount.",
            "format": "double"
          },
          "employerPercentAmount": {
            "type": "number",
            "description": "Gets or sets the employer's percentage amount.",
            "format": "double"
          },
          "employerContribution": {
            "type": "number",
            "description": "Gets or sets the employer's contribution amount.",
            "format": "double"
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date for a certain action or event.",
            "nullable": true
          },
          "beneficiariesEnrollmentsCount": {
            "type": "integer",
            "description": "Gets or sets the count of beneficiaries enrollments.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitEnrollmentsApprovalListItem": {
        "type": "object",
        "properties": {
          "isApproved": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is approved."
          },
          "isTerminated": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is terminated."
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan enrollment.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Enrollment Detail.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets or sets the rate type for a particular entity."
          },
          "benefitGroupType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ],
            "description": "Gets or sets the type of benefit group."
          },
          "deductionFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ],
            "description": "Gets or sets the frequency of deductions."
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee.",
            "nullable": true
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year for a specific entity.",
            "format": "int32"
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit.",
            "nullable": true
          },
          "benefitGroupName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit group.",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          },
          "deductionCode": {
            "type": "string",
            "description": "Gets or sets the deduction code, which is a nullable string.",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "coverageName": {
            "type": "string",
            "description": "Gets or sets the name of the coverage.",
            "nullable": true
          },
          "coverageCode": {
            "type": "string",
            "description": "Gets or sets the coverage code for a specific item.",
            "nullable": true
          },
          "employeePremium": {
            "type": "number",
            "description": "Gets or sets the premium amount for an employee.",
            "format": "double",
            "nullable": true
          },
          "employeePremiumPercent": {
            "type": "number",
            "description": "Gets or sets the employee premium percent for insurance.",
            "format": "double",
            "nullable": true
          },
          "employerPremium": {
            "type": "number",
            "description": "Gets or sets the employer premium amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "additionalCost": {
            "type": "number",
            "description": "Gets or sets the additional cost associated with an item, represented as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "enrollmentDate": {
            "type": "string",
            "description": "Gets or sets the enrollment date of a student, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or sets the approval status of an entity.",
            "nullable": true
          },
          "enrollmentApprovalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ],
            "description": "Gets or sets the enrollment approval status.",
            "nullable": true
          },
          "enrolledStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ],
            "description": "Gets or sets the enrollment status of a student.",
            "nullable": true
          },
          "enrollmentStatus": {
            "type": "string",
            "description": "Gets or sets the enrollment status of a student.",
            "nullable": true
          },
          "approvalDate": {
            "type": "string",
            "description": "Gets or sets the approval date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "signupDate": {
            "type": "string",
            "description": "Gets or sets the signup date of a user, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "description": "Gets or sets the action date, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "hireDate": {
            "type": "string",
            "description": "Gets or sets the hire date of an employee as a nullable string.",
            "nullable": true
          },
          "preTaxType": {
            "type": "string",
            "description": "Gets or sets the pre-tax type for a specific item.",
            "nullable": true
          },
          "postTaxType": {
            "type": "string",
            "description": "Gets or sets the post tax type for a specific entity.",
            "nullable": true
          },
          "preTaxEmployeePercentAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee percent amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "preTaxEmployeeDollarAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee dollar amount.",
            "format": "double",
            "nullable": true
          },
          "postTaxEmployeePercentAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax employee percent amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "postTaxEmployeeDollarAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax employee dollar amount.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitEnrollmentsApprovalListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitEnrollmentsApprovalListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateBenefitEnrollmentsApproval": {
        "type": "object",
        "properties": {
          "benefitPlanEnrollmentDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for Benefit Plan Enrollment Detail.",
            "format": "uuid"
          },
          "approvalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ],
            "description": "Gets or sets Validates that the ApprovalStatus property is of type EnrollmentApprovalStatuses enum."
          },
          "approvalDate": {
            "type": "string",
            "description": "Gets or sets the approval date, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "description": "Gets or sets the termination date for a specific event, represented as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_BenefitCensusListItem": {
        "type": "object",
        "properties": {
          "enrolledDependentInfo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the list of enrolled dependent information.",
            "nullable": true
          },
          "enrolledBeneficiaryInfo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the list of enrolled beneficiary information.",
            "nullable": true
          },
          "employeeRate": {
            "type": "number",
            "description": "Gets or sets the rate of an employee as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerRate": {
            "type": "number",
            "description": "Gets or sets the employer rate as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "rateTotal": {
            "type": "number",
            "description": "Gets or sets the total rate as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan enrollment.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Enrollment Detail.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets or sets the rate type for a particular entity."
          },
          "benefitGroupType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ],
            "description": "Gets or sets the type of benefit group."
          },
          "deductionFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ],
            "description": "Gets or sets the frequency of deductions."
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee.",
            "nullable": true
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year for a specific entity.",
            "format": "int32"
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit.",
            "nullable": true
          },
          "benefitGroupName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit group.",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          },
          "deductionCode": {
            "type": "string",
            "description": "Gets or sets the deduction code, which is a nullable string.",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "coverageName": {
            "type": "string",
            "description": "Gets or sets the name of the coverage.",
            "nullable": true
          },
          "coverageCode": {
            "type": "string",
            "description": "Gets or sets the coverage code for a specific item.",
            "nullable": true
          },
          "employeePremium": {
            "type": "number",
            "description": "Gets or sets the premium amount for an employee.",
            "format": "double",
            "nullable": true
          },
          "employeePremiumPercent": {
            "type": "number",
            "description": "Gets or sets the employee premium percent for insurance.",
            "format": "double",
            "nullable": true
          },
          "employerPremium": {
            "type": "number",
            "description": "Gets or sets the employer premium amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "additionalCost": {
            "type": "number",
            "description": "Gets or sets the additional cost associated with an item, represented as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "enrollmentDate": {
            "type": "string",
            "description": "Gets or sets the enrollment date of a student, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or sets the approval status of an entity.",
            "nullable": true
          },
          "enrollmentApprovalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ],
            "description": "Gets or sets the enrollment approval status.",
            "nullable": true
          },
          "enrolledStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ],
            "description": "Gets or sets the enrollment status of a student.",
            "nullable": true
          },
          "enrollmentStatus": {
            "type": "string",
            "description": "Gets or sets the enrollment status of a student.",
            "nullable": true
          },
          "approvalDate": {
            "type": "string",
            "description": "Gets or sets the approval date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "signupDate": {
            "type": "string",
            "description": "Gets or sets the signup date of a user, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "description": "Gets or sets the action date, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "hireDate": {
            "type": "string",
            "description": "Gets or sets the hire date of an employee as a nullable string.",
            "nullable": true
          },
          "preTaxType": {
            "type": "string",
            "description": "Gets or sets the pre-tax type for a specific item.",
            "nullable": true
          },
          "postTaxType": {
            "type": "string",
            "description": "Gets or sets the post tax type for a specific entity.",
            "nullable": true
          },
          "preTaxEmployeePercentAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee percent amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "preTaxEmployeeDollarAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee dollar amount.",
            "format": "double",
            "nullable": true
          },
          "postTaxEmployeePercentAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax employee percent amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "postTaxEmployeeDollarAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax employee dollar amount.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitCensusListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitCensusListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_BenefitConsolidateListItem": {
        "type": "object",
        "properties": {
          "employeeRate": {
            "type": "number",
            "description": "Gets or sets the rate of an employee as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "employerRate": {
            "type": "number",
            "description": "Gets or sets the employer rate as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "rateTotal": {
            "type": "number",
            "description": "Gets or sets the total rate as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan enrollment.",
            "format": "uuid"
          },
          "benefitPlanEnrollmentDetailId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a Benefit Plan Enrollment Detail.",
            "format": "uuid"
          },
          "benefitPlanGroupId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a benefit plan group.",
            "format": "uuid"
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_RateTypes"
              }
            ],
            "description": "Gets or sets the rate type for a particular entity."
          },
          "benefitGroupType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_BenefitGroupTypes"
              }
            ],
            "description": "Gets or sets the type of benefit group."
          },
          "deductionFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_DeductionFrequency"
              }
            ],
            "description": "Gets or sets the frequency of deductions."
          },
          "annualDeductionsCap": {
            "type": "integer",
            "description": "Gets or sets the annual deductions cap as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee.",
            "nullable": true
          },
          "benefitYear": {
            "type": "integer",
            "description": "Gets or sets the benefit year for a specific entity.",
            "format": "int32"
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit.",
            "nullable": true
          },
          "benefitGroupName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit group.",
            "nullable": true
          },
          "payCycle": {
            "type": "integer",
            "description": "Gets or sets the pay cycle for an employee.",
            "format": "int32"
          },
          "deductionCode": {
            "type": "string",
            "description": "Gets or sets the deduction code, which is a nullable string.",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "description": "Gets or sets the effective date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "coverageName": {
            "type": "string",
            "description": "Gets or sets the name of the coverage.",
            "nullable": true
          },
          "coverageCode": {
            "type": "string",
            "description": "Gets or sets the coverage code for a specific item.",
            "nullable": true
          },
          "employeePremium": {
            "type": "number",
            "description": "Gets or sets the premium amount for an employee.",
            "format": "double",
            "nullable": true
          },
          "employeePremiumPercent": {
            "type": "number",
            "description": "Gets or sets the employee premium percent for insurance.",
            "format": "double",
            "nullable": true
          },
          "employerPremium": {
            "type": "number",
            "description": "Gets or sets the employer premium amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "additionalCost": {
            "type": "number",
            "description": "Gets or sets the additional cost associated with an item, represented as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "enrollmentDate": {
            "type": "string",
            "description": "Gets or sets the enrollment date of a student, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or sets the approval status of an entity.",
            "nullable": true
          },
          "enrollmentApprovalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentApprovalStatuses"
              }
            ],
            "description": "Gets or sets the enrollment approval status.",
            "nullable": true
          },
          "enrolledStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_EnrollmentStatuses"
              }
            ],
            "description": "Gets or sets the enrollment status of a student.",
            "nullable": true
          },
          "enrollmentStatus": {
            "type": "string",
            "description": "Gets or sets the enrollment status of a student.",
            "nullable": true
          },
          "approvalDate": {
            "type": "string",
            "description": "Gets or sets the approval date as a nullable DateTimeOffset.",
            "format": "date-time",
            "nullable": true
          },
          "signupDate": {
            "type": "string",
            "description": "Gets or sets the signup date of a user, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "description": "Gets or sets the action date, which is a nullable DateTimeOffset value.",
            "format": "date-time",
            "nullable": true
          },
          "hireDate": {
            "type": "string",
            "description": "Gets or sets the hire date of an employee as a nullable string.",
            "nullable": true
          },
          "preTaxType": {
            "type": "string",
            "description": "Gets or sets the pre-tax type for a specific item.",
            "nullable": true
          },
          "postTaxType": {
            "type": "string",
            "description": "Gets or sets the post tax type for a specific entity.",
            "nullable": true
          },
          "preTaxEmployeePercentAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee percent amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "preTaxEmployeeDollarAmount": {
            "type": "number",
            "description": "Gets or sets the pre-tax employee dollar amount.",
            "format": "double",
            "nullable": true
          },
          "postTaxEmployeePercentAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax employee percent amount as a nullable decimal value.",
            "format": "double",
            "nullable": true
          },
          "postTaxEmployeeDollarAmount": {
            "type": "number",
            "description": "Gets or sets the post-tax employee dollar amount.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_BenefitConsolidateListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_BenefitConsolidateListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_EligibilityReportListItem": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for an employee.",
            "format": "uuid"
          },
          "planId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a plan.",
            "format": "uuid"
          },
          "benefitName": {
            "type": "string",
            "description": "Gets or sets the name of the benefit.",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "description": "Gets or sets the name of the employee.",
            "nullable": true
          },
          "employeeStatus": {
            "type": "string",
            "description": "Gets or sets the status of the employee.",
            "nullable": true
          },
          "isEligible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the object is eligible."
          },
          "planGroup": {
            "type": "string",
            "description": "Gets or sets the plan group for a specific item.",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_EligibilityReportListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_EligibilityReportListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_RetirementMaximumsListItem": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "retirementMaximumId": {
            "type": "string",
            "description": "Gets or sets the retirement maximum ID as a Guid value.",
            "format": "uuid"
          },
          "requirementTypeIds": {
            "type": "string",
            "description": "Gets or sets the RequirementTypeIds property which represents a string of requirement type IDs.\r\nThe property is initialized to null and marked as nullable reference type.",
            "nullable": true
          },
          "maxLimit": {
            "type": "number",
            "description": "Gets or sets the maximum limit value.",
            "format": "double"
          },
          "maxLimitOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum limit for old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_RetirementMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_RetirementMaximumsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateRetirementMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is deleted."
          },
          "retirementMaximumId": {
            "type": "string",
            "description": "Gets or sets the retirement maximum ID as a Guid value.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "requirementTypeIds": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the RequirementTypeIds with a maximum length defined by DataConstants.LengthMax\r\nThe input is sanitized to prevent any malicious content.",
            "nullable": true
          },
          "maxLimit": {
            "type": "number",
            "description": "Gets or sets the maximum limit value.",
            "format": "double"
          },
          "maxLimitOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum limit for old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateRetirementMaximums": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "requirementTypeIds": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the RequirementTypeIds with a maximum length defined by DataConstants.LengthMax.",
            "nullable": true
          },
          "maxLimit": {
            "type": "number",
            "description": "Gets or sets the maximum limit value.",
            "format": "double"
          },
          "maxLimitOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum limit for old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_RetirementMaximumsInfo": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "retirementMaximumId": {
            "type": "string",
            "description": "Gets or sets the retirement maximum ID as a Guid value.",
            "format": "uuid"
          },
          "requirementTypeIds": {
            "type": "string",
            "description": "Gets or sets the Requirement Type Ids. This property is initialized to null and marked as nullable reference type.",
            "nullable": true
          },
          "maxLimit": {
            "type": "number",
            "description": "Gets or sets the maximum limit value.",
            "format": "double"
          },
          "maxLimitOldAge": {
            "type": "number",
            "description": "Gets or sets the maximum limit for old age.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_TransportationMaximumsListItem": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year as a nullable integer.",
            "format": "int32",
            "nullable": true
          },
          "transportationMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for transportation entities.",
            "format": "uuid"
          },
          "transitMax": {
            "type": "number",
            "description": "Gets or sets the maximum transit value as a nullable decimal.",
            "format": "double",
            "nullable": true
          },
          "parkingMax": {
            "type": "number",
            "description": "Gets or sets the maximum parking value, which is a nullable decimal.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_PagedList`1[[BBSI_Benefits_Model_Default_TransportationMaximumsListItem, BBSI_Benefits_Model, Version=1_0_0_0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "description": "Gets the index of the current page.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the page size for a collection or data set.",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Gets the total number of pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Gets the total count of items.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_TransportationMaximumsListItem"
            },
            "description": "Gets the list of items of type TItem.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_UpdateTransportationMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a nullable boolean value indicating if the entity is deleted.",
            "nullable": true
          },
          "transportationMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for transportation entities.",
            "format": "uuid"
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "transitMax": {
            "type": "number",
            "description": "Gets or sets the maximum transit value.",
            "format": "double"
          },
          "parkingMax": {
            "type": "number",
            "description": "Gets or sets the maximum parking value allowed.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_CreateTransportationMaximums": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the item is deleted."
          },
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "transitMax": {
            "type": "number",
            "description": "Gets or sets the maximum transit value.",
            "format": "double"
          },
          "parkingMax": {
            "type": "number",
            "description": "Gets or sets the maximum parking value.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Command to generate TypeScript code from C# code."
      },
      "BBSI_Benefits_Model_Default_TransportationMaximumsInfo": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or sets the year value.",
            "format": "int32"
          },
          "transportationMaximumId": {
            "type": "string",
            "description": "Gets or sets the maximum ID for transportation entities.",
            "format": "uuid"
          },
          "transitMax": {
            "type": "number",
            "description": "Gets or sets the maximum transit value as a decimal.",
            "format": "double"
          },
          "parkingMax": {
            "type": "number",
            "description": "Gets or sets the maximum parking value.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Auth_Base_UserRoles": {
        "enum": [
          "1 - master_admin | Master administrator with the highest level of access.",
          "2 - company_admin | Company administrator responsible for managing company-level settings.",
          "4 - employer | Employer role representing the organization or entity hiring employees.",
          "8 - employee | Employee role for individuals working under an employer.",
          "16 - manager | Manager role with responsibilities for overseeing teams or operations.",
          "32 - job_post | Role for users responsible for managing job postings."
        ],
        "type": "string",
        "description": "Enumeration for defining user roles within the application.\r\nEach role has an associated byte value and description attribute for identification."
      },
      "BBSI_Benefits_Model_RoleAssignmentDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 6,
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Auth_Base_UserRoles"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_LoginRequestDto": {
        "required": [
          "password",
          "userName",
          "userRole"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string"
          },
          "password": {
            "maxLength": 50,
            "minLength": 5,
            "pattern": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{5,50}$",
            "type": "string"
          },
          "userRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Auth_Base_UserRoles"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_RegistrationRequestDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 6,
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "userRole": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Auth_Base_UserRoles"
              }
            ]
          },
          "isUserActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_MockCompany": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "companyTier": {
            "type": "integer",
            "format": "int32"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_User"
            },
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Database_CompanyFrequencyCodeBaseType": {
        "enum": [
          "0 - Use Employee Pay Frequency | Represents deduction frequency of three hundrads and sixty five within the year.",
          "5 - Quarterly | Represents a deduction frequency of four within the year.",
          "6 - Semi Annual | Represents a semi annual deduction frequency, with deductions occurring twice per year.",
          "7 - Year | Represents a yearly deduction frequency, with deductions occurring once per year.",
          "8 - Custom | Represents a custom deduction frequency, with deductions occurring custom number per year.",
          "34 - Weekly | Represents a deduction frequency of fifty two within the year.",
          "35 - BiWeekly | Represents a deduction frequency of twenty six within the year.",
          "36 - Semi Monthly | Represents a deduction frequency of two within the month.",
          "37 - Monthly | Represents a deduction frequency of twelve within the year."
        ],
        "type": "string",
        "description": "Specifies the different deduction frequencies based on the employee pay schedule."
      },
      "BBSI_Benefits_Model_EmployeePayPeriods": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "frequencyCodeBaseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Database_CompanyFrequencyCodeBaseType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_EmployeeRate": {
        "type": "object",
        "properties": {
          "payType": {
            "type": "integer",
            "format": "int32"
          },
          "payCycle": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dynamicPayPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_EmployeePayPeriods"
            },
            "nullable": true
          },
          "payFrequency": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "salary": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hourlyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isExempt": {
            "type": "boolean"
          },
          "payrollCalendarRuleID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_EmployeeDemographics": {
        "type": "object",
        "properties": {
          "cLevelBindingIDs": {
            "type": "string",
            "nullable": true
          },
          "rPositionID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "employeeTierNumberCCodeID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "employeeTierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "employeeTypeCCodeID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "ssn": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "nullable": true
          },
          "dateOfHire": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BBSI_Benefits_Model_EmployeeRate"
              }
            ],
            "nullable": true
          },
          "serviceYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "annualSalary": {
            "type": "number",
            "format": "double"
          },
          "postTax": {
            "type": "boolean"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_MockCompany"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BBSI_Benefits_Model_Default_MenuItemInfo": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Gets or sets the label of the menu item.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Gets or sets the code of the menu item.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Gets or sets the url of the menu item.",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "Gets or sets the icon of the menu item.",
            "nullable": true
          },
          "section": {
            "type": "string",
            "description": "Gets or sets the section of the menu item.",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "description": "Gets or sets the display order of the menu item.",
            "format": "int32",
            "nullable": true
          },
          "subMenuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_MenuItemInfo"
            },
            "description": "Gets or sets the sub menu items of the parent menu item.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      },
      "BBSI_Benefits_Model_Default_UserProfileInfo": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Gets or sets the email of the user.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets the first name of the user.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name of the user.",
            "nullable": true
          },
          "profilePictureUrl": {
            "type": "string",
            "description": "Gets or sets the Profile Picture Url of the user.",
            "nullable": true
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets or sets the list of role ids assigned to the user.",
            "nullable": true
          },
          "privilegeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Gets or sets the list of privilege ids assigned to the user.",
            "nullable": true
          },
          "menuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BBSI_Benefits_Model_Default_MenuItemInfo"
            },
            "description": "Gets or sets the list of menu items assigned to the user role.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This command is used to generate TypeScript code."
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "apiKey",
        "description": "Enter your valid token in the text input below.",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
